{"startTimestamp":["2024-11-06 09:33:16"],"endTimestamp":["2024-11-06 09:40:26"],"executionTime":["7 mins"],"executionTimeSeconds":[7.1643],"CheckResults":[{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042792 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PERSON table is present as expected based on the specification.","cdmTableName":"PERSON","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_person","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030180 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD table is present as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_observation_period","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035152 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE table is present as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_visit_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028856 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if VISIT_DETAIL table is present as expected based on the specification.","cdmTableName":"VISIT_DETAIL","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_visit_detail","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.043761 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CONDITION_OCCURRENCE table is present as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_condition_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039394 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE table is present as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_drug_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027093 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PROCEDURE_OCCURRENCE table is present as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_procedure_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.040227 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE table is present as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_device_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.076859 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if MEASUREMENT table is present as expected based on the specification.","cdmTableName":"MEASUREMENT","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_measurement","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.103481 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if OBSERVATION table is present as expected based on the specification.","cdmTableName":"OBSERVATION","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_observation","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028489 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DEATH table is present as expected based on the specification.","cdmTableName":"DEATH","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_death","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036681 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if NOTE table is present as expected based on the specification.","cdmTableName":"NOTE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_note","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032636 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if NOTE_NLP table is present as expected based on the specification.","cdmTableName":"NOTE_NLP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_note_nlp","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.043780 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if SPECIMEN table is present as expected based on the specification.","cdmTableName":"SPECIMEN","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_specimen","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033844 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if FACT_RELATIONSHIP table is present as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_fact_relationship","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035204 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if LOCATION table is present as expected based on the specification.","cdmTableName":"LOCATION","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_location","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025959 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CARE_SITE table is present as expected based on the specification.","cdmTableName":"CARE_SITE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_care_site","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024131 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PROVIDER table is present as expected based on the specification.","cdmTableName":"PROVIDER","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_provider","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025991 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD table is present as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_payer_plan_period","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023134 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if COST table is present as expected based on the specification.","cdmTableName":"COST","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035008 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DRUG_ERA table is present as expected based on the specification.","cdmTableName":"DRUG_ERA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_drug_era","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024291 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DOSE_ERA table is present as expected based on the specification.","cdmTableName":"DOSE_ERA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_dose_era","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026869 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CONDITION_ERA table is present as expected based on the specification.","cdmTableName":"CONDITION_ERA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_condition_era","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029514 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if EPISODE table is present as expected based on the specification.","cdmTableName":"EPISODE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_episode","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030082 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if EPISODE_EVENT table is present as expected based on the specification.","cdmTableName":"EPISODE_EVENT","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_episode_event","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026591 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if METADATA table is present as expected based on the specification.","cdmTableName":"METADATA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_metadata","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034903 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CDM_SOURCE table is present as expected based on the specification.","cdmTableName":"CDM_SOURCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_cdm_source","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.037071 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if SOURCE_TO_CONCEPT_MAP table is present as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_source_to_concept_map","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034299 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DRUG_STRENGTH table is present as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_drug_strength","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.042659 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.OBSERVATION_PERIOD cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION_PERIOD table","cdmTableName":"OBSERVATION_PERIOD","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_observation_period","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.051388 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.VISIT_OCCURRENCE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_OCCURRENCE table","cdmTableName":"VISIT_OCCURRENCE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_visit_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":959,"pctViolatedRows":0.96,"numDenominatorRows":999,"executionTime":"0.044719 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.VISIT_DETAIL cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_DETAIL table","cdmTableName":"VISIT_DETAIL","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_visit_detail","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":566,"pctViolatedRows":0.5666,"numDenominatorRows":999,"executionTime":"0.050899 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.CONDITION_OCCURRENCE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the CONDITION_OCCURRENCE table","cdmTableName":"CONDITION_OCCURRENCE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_condition_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":292,"pctViolatedRows":0.2923,"numDenominatorRows":999,"executionTime":"0.041749 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.DRUG_EXPOSURE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DRUG_EXPOSURE table","cdmTableName":"DRUG_EXPOSURE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_drug_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":204,"pctViolatedRows":0.2042,"numDenominatorRows":999,"executionTime":"0.038728 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the PROCEDURE_OCCURRENCE table","cdmTableName":"PROCEDURE_OCCURRENCE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_procedure_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":955,"pctViolatedRows":0.956,"numDenominatorRows":999,"executionTime":"0.032041 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.DEVICE_EXPOSURE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DEVICE_EXPOSURE table","cdmTableName":"DEVICE_EXPOSURE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_device_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.269345 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.MEASUREMENT cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the MEASUREMENT table","cdmTableName":"MEASUREMENT","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_measurement","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.650690 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.OBSERVATION cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION table","cdmTableName":"OBSERVATION","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_observation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":856,"pctViolatedRows":0.8569,"numDenominatorRows":999,"executionTime":"0.034115 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.DEATH cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DEATH table","cdmTableName":"DEATH","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_death","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":748,"pctViolatedRows":0.7487,"numDenominatorRows":999,"executionTime":"0.037820 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.NOTE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the NOTE table","cdmTableName":"NOTE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_note","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":385,"pctViolatedRows":0.3854,"numDenominatorRows":999,"executionTime":"0.073244 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.SPECIMEN cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the SPECIMEN table","cdmTableName":"SPECIMEN","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_specimen","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.033888 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.PAYER_PLAN_PERIOD cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the PAYER_PLAN_PERIOD table","cdmTableName":"PAYER_PLAN_PERIOD","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_payer_plan_period","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":292,"pctViolatedRows":0.2923,"numDenominatorRows":999,"executionTime":"0.044301 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.DRUG_ERA cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DRUG_ERA table","cdmTableName":"DRUG_ERA","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_drug_era","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.037034 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.DOSE_ERA cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DOSE_ERA table","cdmTableName":"DOSE_ERA","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_dose_era","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":100},{"numViolatedRows":566,"pctViolatedRows":0.5666,"numDenominatorRows":999,"executionTime":"0.037010 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.person cdmTable\n\t\t\tLEFT JOIN omop_etl_schema.CONDITION_ERA cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the CONDITION_ERA table","cdmTableName":"CONDITION_ERA","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_condition_era","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":433,"executionTime":"0.059771 secs","queryText":"/*********\nTable Level:  \nMEASURE_CONDITION_ERA_COMPLETENESS\nDetermine what #/% of persons have condition_era built successfully \nfor persons in condition_occurrence table\nParameters used in this template:\ncdmTableName = CONDITION_ERA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT \n\t\t    co.person_id\n\t\tFROM omop_etl_schema.condition_occurrence co\n\t\tLEFT JOIN omop_etl_schema.CONDITION_ERA cdmTable \n\t\t    ON co.person_id = cdmTable.person_id\n  \t    WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(DISTINCT person_id) AS num_rows\n\tFROM omop_etl_schema.condition_occurrence co\n) denominator\n;\n","checkName":"measureConditionEraCompleteness","checkLevel":"TABLE","checkDescription":"The number and Percent of persons that does not have condition_era built successfully \nfor all persons in condition_occurrence","cdmTableName":"CONDITION_ERA","sqlFile":"table_condition_era_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measureconditioneracompleteness_condition_era","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026475 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025516 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_NAME is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026060 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_SOURCE_VALUE is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026295 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028400 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLACE_OF_SERVICE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLACE_OF_SERVICE_CONCEPT_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025827 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLACE_OF_SERVICE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLACE_OF_SERVICE_SOURCE_VALUE is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_place_of_service_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027390 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_ETL_REFERENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_ETL_REFERENCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_ETL_REFERENCE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_ETL_REFERENCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_etl_reference","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025636 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_HOLDER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_HOLDER is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026172 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_RELEASE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_RELEASE_DATE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025578 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_SOURCE_ABBREVIATION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_SOURCE_ABBREVIATION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034641 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_SOURCE_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_SOURCE_NAME is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028212 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_VERSION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_VERSION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_version","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023913 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_VERSION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_VERSION_CONCEPT_ID is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025681 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DESCRIPTION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_DESCRIPTION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_DESCRIPTION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DESCRIPTION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_description","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025039 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DOCUMENTATION_REFERENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_DOCUMENTATION_REFERENCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_DOCUMENTATION_REFERENCE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DOCUMENTATION_REFERENCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_documentation_reference","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027879 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_RELEASE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_RELEASE_DATE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030246 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VOCABULARY_VERSION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VOCABULARY_VERSION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026652 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_CONCEPT_ID is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023201 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_ERA_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_ERA_END_DATE is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031526 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_ERA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_ERA_ID is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_condition_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022081 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_ERA_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_ERA_START_DATE is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028354 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_OCCURRENCE_COUNT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_OCCURRENCE_COUNT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_OCCURRENCE_COUNT is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_OCCURRENCE_COUNT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_condition_occurrence_count","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022639 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the CONDITION_ERA table as expected based on the specification.","cdmTableName":"CONDITION_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035821 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031013 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_END_DATE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.049010 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_END_DATETIME is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028386 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_OCCURRENCE_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038624 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_SOURCE_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031634 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_SOURCE_VALUE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030631 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_START_DATE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030239 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_START_DATETIME is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031469 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_STATUS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_STATUS_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030361 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_STATUS_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_STATUS_SOURCE_VALUE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033054 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_TYPE_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030486 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031787 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030492 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"STOP_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026509 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032926 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026690 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = AMOUNT_ALLOWED\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_ALLOWED) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_ALLOWED is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"AMOUNT_ALLOWED","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_amount_allowed","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023947 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_DOMAIN_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_DOMAIN_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_domain_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030861 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_EVENT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028103 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030457 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_TYPE_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029259 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CURRENCY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CURRENCY_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_currency_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032584 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRG_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_drg_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029687 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRG_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRG_SOURCE_VALUE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"DRG_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_drg_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026659 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PATIENT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PATIENT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PATIENT is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PATIENT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_patient","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030210 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PAYER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PAYER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PAYER is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PAYER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_payer","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031494 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PRIMARY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PRIMARY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PRIMARY is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PRIMARY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_primary","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025222 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_DISPENSING_FEE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_DISPENSING_FEE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_DISPENSING_FEE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_DISPENSING_FEE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_dispensing_fee","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024239 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_INGREDIENT_COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_INGREDIENT_COST) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_INGREDIENT_COST is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_INGREDIENT_COST","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_ingredient_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027457 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COINSURANCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_COINSURANCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_COINSURANCE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COINSURANCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_coinsurance","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028238 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COPAY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_COPAY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_COPAY is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COPAY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_copay","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027205 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_DEDUCTIBLE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_DEDUCTIBLE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_DEDUCTIBLE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_DEDUCTIBLE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_deductible","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.021595 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_payer_plan_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.021616 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(REVENUE_CODE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if REVENUE_CODE_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_revenue_code_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023809 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(REVENUE_CODE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if REVENUE_CODE_SOURCE_VALUE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_revenue_code_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.021172 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_CHARGE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_CHARGE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_CHARGE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_CHARGE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_charge","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025180 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_COST) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_COST is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_COST","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.021261 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_PAID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_PAID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_PAID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_PAID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_paid","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025637 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025381 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_SOURCE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026207 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_SOURCE_VALUE is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026307 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_DATE is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026469 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_DATETIME is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027223 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_TYPE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026603 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023037 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023804 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_END_DATE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029144 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_END_DATETIME is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030720 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026919 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_START_DATE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030495 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_START_DATETIME is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025158 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_SOURCE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027784 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_SOURCE_VALUE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027662 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_TYPE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026570 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027883 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PRODUCTION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRODUCTION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRODUCTION_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PRODUCTION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_production_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025768 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027288 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028689 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIQUE_DEVICE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIQUE_DEVICE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIQUE_DEVICE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIQUE_DEVICE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unique_device_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026463 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026803 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022534 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025948 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022989 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023706 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_END_DATE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027683 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025516 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_START_DATE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024542 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_VALUE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028999 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027638 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029368 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027194 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026054 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_ERA_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_ERA_END_DATE is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029925 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_ERA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_ERA_ID is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_drug_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025827 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_ERA_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_ERA_START_DATE is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031805 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_EXPOSURE_COUNT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_COUNT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_COUNT is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_EXPOSURE_COUNT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_drug_exposure_count","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027956 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = GAP_DAYS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GAP_DAYS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GAP_DAYS is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"GAP_DAYS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_gap_days","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031011 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DRUG_ERA table as expected based on the specification.","cdmTableName":"DRUG_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030891 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DAYS_SUPPLY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DAYS_SUPPLY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DAYS_SUPPLY is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DAYS_SUPPLY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_days_supply","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029112 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DOSE_UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_UNIT_SOURCE_VALUE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DOSE_UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_dose_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039253 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032478 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_END_DATE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031320 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_END_DATETIME is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027446 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028726 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_START_DATE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032581 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_EXPOSURE_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_EXPOSURE_START_DATETIME is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029744 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_SOURCE_CONCEPT_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039729 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_SOURCE_VALUE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032435 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_TYPE_CONCEPT_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033772 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = LOT_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOT_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOT_NUMBER is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"LOT_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_lot_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029151 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029474 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028815 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029450 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = REFILLS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(REFILLS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if REFILLS is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"REFILLS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_refills","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036144 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ROUTE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ROUTE_CONCEPT_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_route_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033459 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ROUTE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ROUTE_SOURCE_VALUE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_route_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032457 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = SIG\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SIG) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SIG is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"SIG","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_sig","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033868 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"STOP_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032502 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VERBATIM_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VERBATIM_END_DATE is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_verbatim_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033199 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031538 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the DRUG_EXPOSURE table as expected based on the specification.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028190 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_amount_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.037328 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_amount_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028046 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = BOX_SIZE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(BOX_SIZE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if BOX_SIZE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"BOX_SIZE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_box_size","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023387 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DENOMINATOR_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DENOMINATOR_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_denominator_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029259 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DENOMINATOR_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DENOMINATOR_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_denominator_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032925 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027209 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INGREDIENT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INGREDIENT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_ingredient_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028138 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INVALID_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INVALID_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INVALID_REASON is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INVALID_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_invalid_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034036 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NUMERATOR_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NUMERATOR_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_numerator_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028772 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NUMERATOR_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NUMERATOR_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_numerator_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028918 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_END_DATE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_valid_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024765 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_START_DATE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_valid_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029702 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027006 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_END_DATE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028710 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_END_DATETIME is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026922 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025326 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_NUMBER is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027813 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_OBJECT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_OBJECT_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_object_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026146 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_PARENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_PARENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_PARENT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_PARENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_parent_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028904 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_SOURCE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027824 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_SOURCE_VALUE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028144 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_START_DATE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033615 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_START_DATETIME is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027528 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_TYPE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026670 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023637 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_EVENT_FIELD_CONCEPT_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_episode_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029434 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_episode_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023848 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EVENT_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023874 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOMAIN_CONCEPT_ID_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOMAIN_CONCEPT_ID_1 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_domain_concept_id_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025048 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOMAIN_CONCEPT_ID_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOMAIN_CONCEPT_ID_2 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_domain_concept_id_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026339 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FACT_ID_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FACT_ID_1 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_fact_id_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029747 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FACT_ID_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FACT_ID_2 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_fact_id_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028839 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RELATIONSHIP_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RELATIONSHIP_CONCEPT_ID is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_relationship_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022365 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADDRESS_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADDRESS_1 is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_address_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025704 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADDRESS_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADDRESS_2 is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_address_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026906 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = CITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CITY is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"CITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_city","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029428 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTRY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTRY_CONCEPT_ID is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_country_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029978 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTRY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTRY_SOURCE_VALUE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_country_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030479 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTY is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_county","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026376 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LATITUDE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LATITUDE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LATITUDE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LATITUDE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_latitude","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033242 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025988 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_SOURCE_VALUE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_location_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023953 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LONGITUDE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LONGITUDE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LONGITUDE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LONGITUDE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_longitude","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028495 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = STATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STATE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"STATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_state","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023715 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ZIP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ZIP) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ZIP is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ZIP","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_zip","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.127864 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEAS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEAS_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEAS_EVENT_FIELD_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEAS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_meas_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.095173 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.099949 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_DATE is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.100764 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_DATETIME is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.129886 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_EVENT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.095252 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.125513 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_SOURCE_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.123984 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_SOURCE_VALUE is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.103470 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_TIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_TIME is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_time","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.107306 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MEASUREMENT_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MEASUREMENT_TYPE_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.104642 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OPERATOR_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OPERATOR_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_operator_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.095813 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.118917 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.114529 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = RANGE_HIGH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RANGE_HIGH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RANGE_HIGH is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"RANGE_HIGH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_range_high","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.111022 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = RANGE_LOW\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RANGE_LOW) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RANGE_LOW is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"RANGE_LOW","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_range_low","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.115667 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.148335 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.124496 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.137808 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_CONCEPT_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.115332 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_NUMBER is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.134521 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_SOURCE_VALUE is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.134538 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.119771 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the MEASUREMENT table as expected based on the specification.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_measurement_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023088 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023323 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_DATE is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027886 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_DATETIME is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028296 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027883 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_TYPE_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026857 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NAME is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026474 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026880 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_NUMBER is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026651 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_STRING) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_STRING is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029569 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ENCODING_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ENCODING_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029394 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LANGUAGE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LANGUAGE_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028960 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_CLASS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_CLASS_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027566 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_DATE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030604 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_DATETIME is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032912 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_EVENT_FIELD_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031624 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_EVENT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028647 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030094 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_SOURCE_VALUE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031014 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TEXT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TEXT is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029196 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TITLE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TITLE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TITLE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TITLE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_title","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028466 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TYPE_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030235 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033565 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030018 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030864 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033054 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LEXICAL_VARIANT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LEXICAL_VARIANT is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_lexical_variant","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023502 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_DATE is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026633 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_DATETIME is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029539 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_SYSTEM\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_SYSTEM) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_SYSTEM is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_SYSTEM","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_system","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023514 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023191 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023342 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025825 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_SOURCE_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030977 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SECTION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SECTION_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_section_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026825 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SNIPPET\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SNIPPET) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SNIPPET is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"SNIPPET","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_snippet","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022343 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_EXISTS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_EXISTS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_EXISTS is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_EXISTS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_exists","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029567 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_MODIFIERS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_MODIFIERS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_MODIFIERS is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_MODIFIERS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_modifiers","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031546 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_TEMPORAL\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_TEMPORAL) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_TEMPORAL is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_TEMPORAL","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_temporal","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.177476 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBS_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBS_EVENT_FIELD_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_obs_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.126348 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.131179 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_DATE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.127031 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_DATETIME is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.177520 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_EVENT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.125374 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.207801 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_SOURCE_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.168236 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.140024 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_TYPE_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.124032 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.158334 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.161444 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUALIFIER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUALIFIER_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_qualifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.175282 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUALIFIER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUALIFIER_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_qualifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.146589 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.158653 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.142942 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.141923 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_NUMBER is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.145339 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_STRING) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_STRING is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.175314 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.152788 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.151679 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026955 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_END_DATE is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024973 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026789 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_START_DATE is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029367 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERIOD_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERIOD_TYPE_CONCEPT_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028306 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027296 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = FAMILY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FAMILY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FAMILY_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"FAMILY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_family_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030988 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023204 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_END_DATE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028072 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027107 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_START_DATE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025983 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025158 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026056 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030834 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022163 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028402 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023263 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028511 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026396 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024242 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029383 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026831 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026994 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(BIRTH_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if BIRTH_DATETIME is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_birth_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028575 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029199 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DAY_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DAY_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_day_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028125 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026645 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022231 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022828 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.021815 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026536 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022558 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023870 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MONTH_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MONTH_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_month_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025393 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028163 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PERSON_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_person_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029629 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026933 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024910 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028309 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027412 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(YEAR_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if YEAR_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031789 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MODIFIER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MODIFIER_CONCEPT_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028628 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MODIFIER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MODIFIER_SOURCE_VALUE is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_modifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030199 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028393 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_CONCEPT_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031650 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_DATE is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028882 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_DATETIME is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030877 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_END_DATE is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028016 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_END_DATETIME is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026758 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_OCCURRENCE_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033115 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_SOURCE_CONCEPT_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032720 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_SOURCE_VALUE is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027242 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROCEDURE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROCEDURE_TYPE_CONCEPT_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029468 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030976 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025718 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026211 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the PROCEDURE_OCCURRENCE table as expected based on the specification.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_procedure_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028454 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029964 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = DEA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEA) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEA is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"DEA","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_dea","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027935 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029949 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030834 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027469 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = NPI\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NPI) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NPI is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"NPI","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_npi","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023092 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023324 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_NAME is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028775 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023749 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026968 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_SOURCE_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023368 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024982 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(YEAR_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if YEAR_OF_BIRTH is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029298 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = INVALID_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INVALID_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INVALID_REASON is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"INVALID_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_invalid_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030510 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CODE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CODE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_code","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024313 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE_DESCRIPTION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CODE_DESCRIPTION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CODE_DESCRIPTION is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE_DESCRIPTION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_code_description","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032991 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CONCEPT_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028313 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_VOCABULARY_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_VOCABULARY_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_VOCABULARY_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_vocabulary_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027879 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TARGET_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TARGET_CONCEPT_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_target_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023887 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TARGET_VOCABULARY_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TARGET_VOCABULARY_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_target_vocabulary_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028529 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_END_DATE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_valid_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028748 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_START_DATE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_valid_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.041310 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ANATOMIC_SITE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ANATOMIC_SITE_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_anatomic_site_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.044943 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ANATOMIC_SITE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ANATOMIC_SITE_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_anatomic_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.045637 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISEASE_STATUS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISEASE_STATUS_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_disease_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.046658 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISEASE_STATUS_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISEASE_STATUS_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_disease_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032552 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032507 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033265 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031993 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_DATE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039577 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_DATETIME is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034590 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.040128 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_SOURCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_SOURCE_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_source_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035620 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035525 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_TYPE_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027844 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036596 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026426 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024867 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027563 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026318 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026332 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038438 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PARENT_VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PARENT_VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_parent_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027740 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028199 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRECEDING_VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRECEDING_VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_preceding_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029116 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028107 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025411 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_END_DATE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027205 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_END_DATETIME is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026250 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025517 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_SOURCE_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024481 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022731 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_START_DATE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030023 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_START_DATETIME is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024057 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_TYPE_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024575 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027733 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028503 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029041 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027406 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027174 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026562 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027858 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRECEDING_VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRECEDING_VISIT_OCCURRENCE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023931 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028583 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026622 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_END_DATE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022518 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_END_DATETIME is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024691 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025930 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_SOURCE_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026581 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025705 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_START_DATE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027344 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_START_DATETIME is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027048 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_TYPE_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031421 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.CARE_SITE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CARE_SITE cdmTable\n        WHERE cdmTable.CARE_SITE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the CARE_SITE that is considered not nullable.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033584 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_HOLDER' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_HOLDER IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_HOLDER of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032017 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_RELEASE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_RELEASE_DATE of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033587 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_SOURCE_ABBREVIATION' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_SOURCE_ABBREVIATION IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_ABBREVIATION of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031499 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_SOURCE_NAME' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_SOURCE_NAME IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_NAME of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042858 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_VERSION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION_CONCEPT_ID of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.061294 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.SOURCE_RELEASE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_RELEASE_DATE of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038960 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.VOCABULARY_VERSION' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.VOCABULARY_VERSION IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VOCABULARY_VERSION of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.039962 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_ERA that is considered not nullable.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.031878 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_ERA_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_END_DATE of the CONDITION_ERA that is considered not nullable.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.036133 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_ERA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_ID of the CONDITION_ERA that is considered not nullable.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_era_condition_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.034028 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_ERA_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_START_DATE of the CONDITION_ERA that is considered not nullable.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.032873 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_ERA that is considered not nullable.","cdmTableName":"CONDITION_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.037513 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.034694 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.036968 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATE of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.055543 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_TYPE_CONCEPT_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.041083 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033047 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_DOMAIN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_DOMAIN_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_DOMAIN_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034041 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_EVENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_EVENT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_EVENT_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039092 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030806 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_TYPE_CONCEPT_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.029776 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.DEATH_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATE of the DEATH that is considered not nullable.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.033329 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEATH that is considered not nullable.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031843 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_CONCEPT_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031790 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031999 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATE of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031388 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_TYPE_CONCEPT_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031973 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032311 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_END_DATE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030568 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034222 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_START_DATE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030825 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_VALUE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_VALUE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_VALUE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035573 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031891 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031486 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.030747 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_ERA that is considered not nullable.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.032887 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_ERA_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_END_DATE of the DRUG_ERA that is considered not nullable.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.030846 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_ERA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_ID of the DRUG_ERA that is considered not nullable.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_era_drug_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.033090 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_ERA_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_START_DATE of the DRUG_ERA that is considered not nullable.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036844 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DRUG_ERA that is considered not nullable.","cdmTableName":"DRUG_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035246 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038149 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_END_DATE of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.033243 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_ID of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_drug_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035786 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_START_DATE of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036644 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_TYPE_CONCEPT_ID of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035921 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DRUG_EXPOSURE that is considered not nullable.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035566 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033366 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.INGREDIENT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the INGREDIENT_CONCEPT_ID of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035281 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_END_DATE of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030646 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_START_DATE of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031968 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028518 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031398 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_OBJECT_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034359 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATE of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032357 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_TYPE_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030006 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.025854 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_EVENT_FIELD_CONCEPT_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029202 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EPISODE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032238 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EVENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EVENT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EVENT_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035172 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_1 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_1 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034830 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_2 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_2 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040972 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.FACT_ID_1 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_1 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032101 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.FACT_ID_2 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_2 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031239 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.RELATIONSHIP_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RELATIONSHIP_CONCEPT_ID of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030243 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.LOCATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.LOCATION cdmTable\n        WHERE cdmTable.LOCATION_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the LOCATION that is considered not nullable.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.146778 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_CONCEPT_ID of the MEASUREMENT that is considered not nullable.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.143486 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_DATE of the MEASUREMENT that is considered not nullable.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.080349 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_ID of the MEASUREMENT that is considered not nullable.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_measurement_measurement_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.152298 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_TYPE_CONCEPT_ID of the MEASUREMENT that is considered not nullable.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.146055 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the MEASUREMENT that is considered not nullable.","cdmTableName":"MEASUREMENT","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_measurement_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030395 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_CONCEPT_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032380 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031508 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_TYPE_CONCEPT_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030073 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.NAME' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.METADATA cdmTable\n        WHERE cdmTable.NAME IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NAME of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_name","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031910 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.ENCODING_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ENCODING_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031400 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.LANGUAGE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LANGUAGE_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.029583 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_CLASS_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_CLASS_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031727 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATE of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.029901 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031070 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TEXT' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_TEXT IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TEXT of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.029950 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TYPE_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031328 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031772 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.LEXICAL_VARIANT' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.LEXICAL_VARIANT IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LEXICAL_VARIANT of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_lexical_variant","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031611 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NLP_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NLP_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATE of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_nlp_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031301 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030630 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_NLP_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_ID of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.203990 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_CONCEPT_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.196478 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATE of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.103372 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.198403 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_TYPE_CONCEPT_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.183631 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032447 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_END_DATE of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034241 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033623 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_START_DATE of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.037696 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERIOD_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERIOD_TYPE_CONCEPT_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035670 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033837 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_END_DATE of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039119 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034108 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_START_DATE of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036231 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.036826 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035006 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031814 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031645 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031563 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.YEAR_OF_BIRTH IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036350 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PROCEDURE_OCCURRENCE that is considered not nullable.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_procedure_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032446 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_CONCEPT_ID of the PROCEDURE_OCCURRENCE that is considered not nullable.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_procedure_occurrence_procedure_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034206 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_DATE of the PROCEDURE_OCCURRENCE that is considered not nullable.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032417 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_OCCURRENCE_ID of the PROCEDURE_OCCURRENCE that is considered not nullable.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_procedure_occurrence_procedure_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034978 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_TYPE_CONCEPT_ID of the PROCEDURE_OCCURRENCE that is considered not nullable.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033631 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.PROVIDER_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.PROVIDER_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PROVIDER that is considered not nullable.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.032079 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CODE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_CODE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_CODE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_code","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CODE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.038193 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_CONCEPT_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.034501 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_VOCABULARY_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_VOCABULARY_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_VOCABULARY_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_VOCABULARY_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.039470 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.TARGET_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TARGET_CONCEPT_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.034833 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.TARGET_VOCABULARY_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TARGET_VOCABULARY_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_target_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.036720 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_END_DATE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.036307 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_START_DATE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040928 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039848 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_CONCEPT_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.041529 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATE of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.036191 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039006 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_TYPE_CONCEPT_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030710 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033645 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_CONCEPT_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.029892 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATE of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033435 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032956 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATE of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.029330 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_TYPE_CONCEPT_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030281 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.029787 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.029795 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_CONCEPT_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.028398 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATE of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.029878 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036905 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATE of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030891 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_TYPE_CONCEPT_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032379 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.030713 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CARE_SITE.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032414 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLACE_OF_SERVICE_CONCEPT_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033886 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CDM_VERSION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CDM_VERSION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CDM_VERSION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CDM_VERSION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CDM_VERSION_CONCEPT_ID in the CDM_SOURCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.047113 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_CONCEPT_ID in the CONDITION_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.039745 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_ERA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_ERA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_ERA_ID in the CONDITION_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_era_condition_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.036618 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_OCCURRENCE_COUNT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_OCCURRENCE_COUNT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_COUNT AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_COUNT AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_OCCURRENCE_COUNT) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_OCCURRENCE_COUNT IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_OCCURRENCE_COUNT in the CONDITION_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_OCCURRENCE_COUNT","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_era_condition_occurrence_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.036313 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the CONDITION_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.066247 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.068563 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_OCCURRENCE_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.061686 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_SOURCE_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.064307 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_STATUS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_STATUS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_STATUS_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.064665 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_TYPE_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.061898 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.037241 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038912 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.074317 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032403 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_EVENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_EVENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_EVENT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_EVENT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_EVENT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035917 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032190 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_TYPE_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034619 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CURRENCY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CURRENCY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CURRENCY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CURRENCY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CURRENCY_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034724 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRG_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031874 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_PLAN_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_PLAN_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_PLAN_PERIOD_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036592 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.REVENUE_CODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.REVENUE_CODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.REVENUE_CODE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.REVENUE_CODE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the REVENUE_CODE_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030640 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CAUSE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CAUSE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CAUSE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CAUSE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CAUSE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031930 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CAUSE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CAUSE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CAUSE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CAUSE_SOURCE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034469 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEATH_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEATH_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEATH_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEATH_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEATH_TYPE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031219 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032755 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.043054 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_EXPOSURE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_EXPOSURE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_EXPOSURE_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.037713 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031530 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_TYPE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031699 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.034268 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033501 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.QUANTITY) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.QUANTITY IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the QUANTITY in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.QUANTITY is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032847 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032240 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.034549 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033501 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032531 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOSE_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOSE_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOSE_ERA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOSE_ERA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOSE_ERA_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031287 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030386 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030493 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.039832 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DRUG_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.041175 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_ERA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_ERA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_ERA_ID in the DRUG_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_era_drug_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.038366 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_EXPOSURE_COUNT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_EXPOSURE_COUNT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_EXPOSURE_COUNT AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_EXPOSURE_COUNT AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_EXPOSURE_COUNT) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_EXPOSURE_COUNT IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_EXPOSURE_COUNT in the DRUG_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_EXPOSURE_COUNT","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_era_drug_exposure_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.041224 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = GAP_DAYS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.GAP_DAYS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GAP_DAYS AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GAP_DAYS AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GAP_DAYS) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GAP_DAYS IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GAP_DAYS in the DRUG_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_ERA","cdmFieldName":"GAP_DAYS","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_era_gap_days","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.041000 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DRUG_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.065068 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DAYS_SUPPLY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DAYS_SUPPLY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DAYS_SUPPLY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DAYS_SUPPLY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DAYS_SUPPLY) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DAYS_SUPPLY IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DAYS_SUPPLY in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DAYS_SUPPLY","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_days_supply","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.064055 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.065346 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_EXPOSURE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_EXPOSURE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_EXPOSURE_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_drug_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038061 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_SOURCE_CONCEPT_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_drug_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.063830 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_TYPE_CONCEPT_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.063797 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036041 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035259 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = REFILLS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.REFILLS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.REFILLS AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.REFILLS AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.REFILLS) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.REFILLS IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the REFILLS in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"REFILLS","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_refills","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.REFILLS is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.037406 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ROUTE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ROUTE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ROUTE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ROUTE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ROUTE_CONCEPT_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_route_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.040152 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.072033 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the DRUG_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034791 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.AMOUNT_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.AMOUNT_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.AMOUNT_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.AMOUNT_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the AMOUNT_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_amount_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.050510 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = BOX_SIZE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.BOX_SIZE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.BOX_SIZE AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.BOX_SIZE AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.BOX_SIZE) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.BOX_SIZE IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the BOX_SIZE in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"BOX_SIZE","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_box_size","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.BOX_SIZE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042368 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DENOMINATOR_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DENOMINATOR_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_denominator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033106 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031595 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.INGREDIENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.INGREDIENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.INGREDIENT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.INGREDIENT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the INGREDIENT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037382 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NUMERATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NUMERATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NUMERATOR_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NUMERATOR_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NUMERATOR_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_numerator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032512 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035152 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_NUMBER AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_NUMBER AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_NUMBER) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_NUMBER IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_NUMBER in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038199 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_OBJECT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_OBJECT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_OBJECT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_OBJECT_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037111 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_SOURCE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032141 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_TYPE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033034 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE_EVENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_EVENT_FIELD_CONCEPT_ID in the EPISODE_EVENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037276 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOMAIN_CONCEPT_ID_1) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOMAIN_CONCEPT_ID_1 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOMAIN_CONCEPT_ID_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032267 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOMAIN_CONCEPT_ID_2) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOMAIN_CONCEPT_ID_2 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOMAIN_CONCEPT_ID_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045166 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.FACT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.FACT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.FACT_ID_1) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.FACT_ID_1 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the FACT_ID_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033492 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.FACT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.FACT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.FACT_ID_2) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.FACT_ID_2 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the FACT_ID_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032760 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RELATIONSHIP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RELATIONSHIP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RELATIONSHIP_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RELATIONSHIP_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RELATIONSHIP_CONCEPT_ID in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035095 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COUNTRY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COUNTRY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COUNTRY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COUNTRY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COUNTRY_CONCEPT_ID in the LOCATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032581 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the LOCATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.228759 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEAS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEAS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MEAS_EVENT_FIELD_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEAS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_meas_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.875263 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MEASUREMENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MEASUREMENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MEASUREMENT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MEASUREMENT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MEASUREMENT_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.890332 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MEASUREMENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MEASUREMENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MEASUREMENT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MEASUREMENT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MEASUREMENT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_measurement_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.171047 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MEASUREMENT_SOURCE_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_measurement_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.935761 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MEASUREMENT_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MEASUREMENT_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MEASUREMENT_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MEASUREMENT_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MEASUREMENT_TYPE_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.161134 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OPERATOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OPERATOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OPERATOR_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OPERATOR_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OPERATOR_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_operator_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.OPERATOR_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.886171 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.172776 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.210084 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.196144 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_SOURCE_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.173533 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VALUE_AS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VALUE_AS_CONCEPT_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.VALUE_AS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.168766 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.786652 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the MEASUREMENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_measurement_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031272 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031651 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030688 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_TYPE_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030361 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VALUE_AS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VALUE_AS_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.039693 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ENCODING_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ENCODING_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ENCODING_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ENCODING_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ENCODING_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.036535 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LANGUAGE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LANGUAGE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LANGUAGE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LANGUAGE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LANGUAGE_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037603 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_CLASS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_CLASS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_CLASS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_CLASS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_CLASS_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.038680 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_EVENT_FIELD_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037305 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.035968 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_TYPE_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.038840 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.033143 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037857 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.040123 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034589 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031515 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033107 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032650 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_SOURCE_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032498 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SECTION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SECTION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SECTION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SECTION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SECTION_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.244220 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBS_EVENT_FIELD_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.338560 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.511579 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.230058 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_SOURCE_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.549182 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_TYPE_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.374930 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.209148 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.584411 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.QUALIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.QUALIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.QUALIFIER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.QUALIFIER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the QUALIFIER_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.533716 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.512807 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.552933 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.037498 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_PERIOD_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034613 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERIOD_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERIOD_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERIOD_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERIOD_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERIOD_TYPE_CONCEPT_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.036821 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030127 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034976 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_PLAN_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_PLAN_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_PLAN_PERIOD_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031347 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030666 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030338 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLAN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLAN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLAN_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLAN_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLAN_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029263 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLAN_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLAN_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLAN_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLAN_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLAN_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032021 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPONSOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPONSOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPONSOR_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPONSOR_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPONSOR_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034446 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPONSOR_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPONSOR_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPONSOR_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPONSOR_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034198 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.STOP_REASON_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.STOP_REASON_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.STOP_REASON_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.STOP_REASON_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the STOP_REASON_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033203 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the STOP_REASON_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032284 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_care_site_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.CARE_SITE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032322 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DAY_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DAY_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DAY_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DAY_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DAY_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034147 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ETHNICITY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ETHNICITY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ETHNICITY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ETHNICITY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ETHNICITY_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034536 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ETHNICITY_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_ethnicity_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.040341 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033979 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033082 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030811 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MONTH_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MONTH_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MONTH_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MONTH_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MONTH_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031980 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032748 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033586 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RACE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RACE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RACE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RACE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RACE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034289 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RACE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RACE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RACE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RACE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RACE_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031221 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.YEAR_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.YEAR_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the YEAR_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.040744 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MODIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MODIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MODIFIER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MODIFIER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MODIFIER_CONCEPT_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.041851 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.042738 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROCEDURE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROCEDURE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROCEDURE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROCEDURE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROCEDURE_CONCEPT_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_procedure_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.055166 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROCEDURE_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROCEDURE_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROCEDURE_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROCEDURE_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROCEDURE_OCCURRENCE_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_procedure_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.044924 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROCEDURE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROCEDURE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROCEDURE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROCEDURE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROCEDURE_SOURCE_CONCEPT_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_procedure_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.060088 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROCEDURE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROCEDURE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROCEDURE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROCEDURE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROCEDURE_TYPE_CONCEPT_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.040007 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.044611 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.QUANTITY) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.QUANTITY IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the QUANTITY in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034508 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.038815 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_procedure_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031492 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.037371 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032042 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_SOURCE_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_gender_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.035197 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.035630 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIALTY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIALTY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIALTY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIALTY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIALTY_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033696 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIALTY_SOURCE_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031842 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.YEAR_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.YEAR_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the YEAR_OF_BIRTH in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_year_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.YEAR_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.035277 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SOURCE_CONCEPT_ID in the SOURCE_TO_CONCEPT_MAP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.040612 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.TARGET_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.TARGET_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.TARGET_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.TARGET_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the TARGET_CONCEPT_ID in the SOURCE_TO_CONCEPT_MAP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039935 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ANATOMIC_SITE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ANATOMIC_SITE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ANATOMIC_SITE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ANATOMIC_SITE_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040352 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISEASE_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISEASE_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISEASE_STATUS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISEASE_STATUS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISEASE_STATUS_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.092993 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.085623 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.096359 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.096507 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_TYPE_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040138 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032290 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033180 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISCHARGED_TO_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISCHARGED_TO_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033861 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PARENT_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PARENT_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PARENT_VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PARENT_VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PARENT_VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_parent_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PARENT_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031410 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032568 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PRECEDING_VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PRECEDING_VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PRECEDING_VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_preceding_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.036566 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031075 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031076 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031945 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_TYPE_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030458 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030630 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ADMITTED_FROM_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ADMITTED_FROM_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ADMITTED_FROM_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ADMITTED_FROM_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033903 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034456 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISCHARGED_TO_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISCHARGED_TO_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033483 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031791 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PRECEDING_VISIT_OCCURRENCE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031455 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032871 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036058 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031272 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_SOURCE_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.035761 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.CARE_SITE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CARE_SITE cdmTable\n        WHERE cdmTable.CARE_SITE_ID IN ( \n            SELECT \n                CARE_SITE_ID \n            FROM omop_etl_schema.CARE_SITE\n            GROUP BY CARE_SITE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the CARE_SITE_ID field of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.033771 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_ERA_ID IN ( \n            SELECT \n                CONDITION_ERA_ID \n            FROM omop_etl_schema.CONDITION_ERA\n            GROUP BY CONDITION_ERA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the CONDITION_ERA_ID field of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_condition_era_condition_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.049061 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_OCCURRENCE_ID IN ( \n            SELECT \n                CONDITION_OCCURRENCE_ID \n            FROM omop_etl_schema.CONDITION_OCCURRENCE\n            GROUP BY CONDITION_OCCURRENCE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the CONDITION_OCCURRENCE_ID field of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031454 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_ID IN ( \n            SELECT \n                COST_ID \n            FROM omop_etl_schema.COST\n            GROUP BY COST_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the COST_ID field of the COST.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035110 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_ID IN ( \n            SELECT \n                DEVICE_EXPOSURE_ID \n            FROM omop_etl_schema.DEVICE_EXPOSURE\n            GROUP BY DEVICE_EXPOSURE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DEVICE_EXPOSURE_ID field of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031399 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_ID IN ( \n            SELECT \n                DOSE_ERA_ID \n            FROM omop_etl_schema.DOSE_ERA\n            GROUP BY DOSE_ERA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DOSE_ERA_ID field of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.038530 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_ERA_ID IN ( \n            SELECT \n                DRUG_ERA_ID \n            FROM omop_etl_schema.DRUG_ERA\n            GROUP BY DRUG_ERA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DRUG_ERA_ID field of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_drug_era_drug_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.046039 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_ID IN ( \n            SELECT \n                DRUG_EXPOSURE_ID \n            FROM omop_etl_schema.DRUG_EXPOSURE\n            GROUP BY DRUG_EXPOSURE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DRUG_EXPOSURE_ID field of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_drug_exposure_drug_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032669 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_ID IN ( \n            SELECT \n                EPISODE_ID \n            FROM omop_etl_schema.EPISODE\n            GROUP BY EPISODE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the EPISODE_ID field of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031852 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.LOCATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.LOCATION cdmTable\n        WHERE cdmTable.LOCATION_ID IN ( \n            SELECT \n                LOCATION_ID \n            FROM omop_etl_schema.LOCATION\n            GROUP BY LOCATION_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the LOCATION_ID field of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.340431 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_ID IN ( \n            SELECT \n                MEASUREMENT_ID \n            FROM omop_etl_schema.MEASUREMENT\n            GROUP BY MEASUREMENT_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the MEASUREMENT_ID field of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_measurement_measurement_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043289 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_ID IN ( \n            SELECT \n                METADATA_ID \n            FROM omop_etl_schema.METADATA\n            GROUP BY METADATA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the METADATA_ID field of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.039068 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_ID IN ( \n            SELECT \n                NOTE_ID \n            FROM omop_etl_schema.NOTE\n            GROUP BY NOTE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the NOTE_ID field of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042132 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_NLP_ID IN ( \n            SELECT \n                NOTE_NLP_ID \n            FROM omop_etl_schema.NOTE_NLP\n            GROUP BY NOTE_NLP_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the NOTE_NLP_ID field of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.368962 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_ID IN ( \n            SELECT \n                OBSERVATION_ID \n            FROM omop_etl_schema.OBSERVATION\n            GROUP BY OBSERVATION_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the OBSERVATION_ID field of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034620 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_ID IN ( \n            SELECT \n                OBSERVATION_PERIOD_ID \n            FROM omop_etl_schema.OBSERVATION_PERIOD\n            GROUP BY OBSERVATION_PERIOD_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the OBSERVATION_PERIOD_ID field of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032713 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_ID IN ( \n            SELECT \n                PAYER_PLAN_PERIOD_ID \n            FROM omop_etl_schema.PAYER_PLAN_PERIOD\n            GROUP BY PAYER_PLAN_PERIOD_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PAYER_PLAN_PERIOD_ID field of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031975 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.PERSON_ID IN ( \n            SELECT \n                PERSON_ID \n            FROM omop_etl_schema.PERSON\n            GROUP BY PERSON_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PERSON_ID field of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.037288 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_OCCURRENCE_ID IN ( \n            SELECT \n                PROCEDURE_OCCURRENCE_ID \n            FROM omop_etl_schema.PROCEDURE_OCCURRENCE\n            GROUP BY PROCEDURE_OCCURRENCE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PROCEDURE_OCCURRENCE_ID field of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_OCCURRENCE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_procedure_occurrence_procedure_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033551 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.PROVIDER_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.PROVIDER_ID IN ( \n            SELECT \n                PROVIDER_ID \n            FROM omop_etl_schema.PROVIDER\n            GROUP BY PROVIDER_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PROVIDER_ID field of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.066189 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_ID IN ( \n            SELECT \n                SPECIMEN_ID \n            FROM omop_etl_schema.SPECIMEN\n            GROUP BY SPECIMEN_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the SPECIMEN_ID field of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030526 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_ID IN ( \n            SELECT \n                VISIT_DETAIL_ID \n            FROM omop_etl_schema.VISIT_DETAIL\n            GROUP BY VISIT_DETAIL_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the VISIT_DETAIL_ID field of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032395 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IN ( \n            SELECT \n                VISIT_OCCURRENCE_ID \n            FROM omop_etl_schema.VISIT_OCCURRENCE\n            GROUP BY VISIT_OCCURRENCE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the VISIT_OCCURRENCE_ID field of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.033361 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.LOCATION_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CARE_SITE cdmTable\n            LEFT JOIN \n                omop_etl_schema.LOCATION fkTable \n                ON cdmTable.LOCATION_ID = fkTable.LOCATION_ID\n        WHERE fkTable.LOCATION_ID IS NULL \n            AND cdmTable.LOCATION_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LOCATION_ID field in the CARE_SITE table that does not exist in the LOCATION table.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_care_site_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CARE_SITE.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.037998 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CARE_SITE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLACE_OF_SERVICE_CONCEPT_ID field in the CARE_SITE table that does not exist in the CONCEPT table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033690 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CDM_VERSION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CDM_VERSION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table that does not exist in the CONCEPT table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.054692 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_ERA table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.034688 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the CONDITION_ERA table that does not exist in the PERSON table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.067640 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.071823 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_SOURCE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.044696 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_STATUS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_STATUS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.049691 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.039582 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the CONDITION_OCCURRENCE table that does not exist in the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.037851 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the CONDITION_OCCURRENCE table that does not exist in the PROVIDER table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.040146 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.039122 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033739 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\nfkTableName = DOMAIN\nfkFieldName = DOMAIN_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_DOMAIN_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.COST cdmTable\n            LEFT JOIN \n                omop_etl_schema.DOMAIN fkTable\n                ON cdmTable.COST_DOMAIN_ID = fkTable.DOMAIN_ID\n        WHERE fkTable.DOMAIN_ID IS NULL \n            AND cdmTable.COST_DOMAIN_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COST_DOMAIN_ID field in the COST table that does not exist in the DOMAIN table.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031734 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.COST cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.COST_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.COST_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COST_TYPE_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033036 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.COST cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CURRENCY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CURRENCY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CURRENCY_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034353 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.DRG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.COST cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRG_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032090 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.COST cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.REVENUE_CODE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.REVENUE_CODE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the REVENUE_CODE_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.029371 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CAUSE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CAUSE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CAUSE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030984 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.CAUSE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CAUSE_SOURCE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034269 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DEATH_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEATH_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEATH_TYPE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030564 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DEATH table that does not exist in the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033119 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029868 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_SOURCE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032265 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032021 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DEVICE_EXPOSURE table that does not exist in the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030471 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the DEVICE_EXPOSURE table that does not exist in the PROVIDER table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030046 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035505 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_SOURCE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030463 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the DEVICE_EXPOSURE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035916 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the DEVICE_EXPOSURE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031123 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that does not exist in the CONCEPT table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030962 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DOSE_ERA table that does not exist in the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031921 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DOSE_ERA table that does not exist in the CONCEPT table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.040053 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_ERA table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.035445 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DRUG_ERA table that does not exist in the PERSON table.","cdmTableName":"DRUG_ERA","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.067650 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035841 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_SOURCE_CONCEPT_ID field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_drug_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.042335 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_TYPE_CONCEPT_ID field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039685 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DRUG_EXPOSURE table that does not exist in the PERSON table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.042023 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the DRUG_EXPOSURE table that does not exist in the PROVIDER table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036249 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ROUTE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ROUTE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ROUTE_CONCEPT_ID field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_route_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.037911 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the DRUG_EXPOSURE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038739 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the DRUG_EXPOSURE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031210 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.AMOUNT_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.AMOUNT_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the AMOUNT_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_amount_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031990 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DENOMINATOR_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DENOMINATOR_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DENOMINATOR_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_denominator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031684 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032511 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.INGREDIENT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.INGREDIENT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the INGREDIENT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036091 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NUMERATOR_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NUMERATOR_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NUMERATOR_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_numerator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031920 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033216 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_OBJECT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_OBJECT_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030462 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_SOURCE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031749 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030184 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the EPISODE table that does not exist in the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030255 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033710 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\nfkTableName = EPISODE\nfkFieldName = EPISODE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.EPISODE fkTable \n                ON cdmTable.EPISODE_ID = fkTable.EPISODE_ID\n        WHERE fkTable.EPISODE_ID IS NULL \n            AND cdmTable.EPISODE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_ID field in the EPISODE_EVENT table that does not exist in the EPISODE table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032495 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DOMAIN_CONCEPT_ID_1 = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DOMAIN_CONCEPT_ID_1 IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DOMAIN_CONCEPT_ID_1 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031206 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DOMAIN_CONCEPT_ID_2 = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DOMAIN_CONCEPT_ID_2 IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DOMAIN_CONCEPT_ID_2 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032789 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.RELATIONSHIP_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RELATIONSHIP_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RELATIONSHIP_CONCEPT_ID field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032124 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.LOCATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.COUNTRY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.COUNTRY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COUNTRY_CONCEPT_ID field in the LOCATION table that does not exist in the CONCEPT table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.206494 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEAS_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEAS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEAS_EVENT_FIELD_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEAS_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_meas_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.957416 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.MEASUREMENT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.MEASUREMENT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEASUREMENT_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.173692 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEASUREMENT_SOURCE_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_measurement_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.343964 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.MEASUREMENT_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.MEASUREMENT_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEASUREMENT_TYPE_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.166695 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.OPERATOR_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OPERATOR_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OPERATOR_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_operator_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.OPERATOR_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.226052 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the MEASUREMENT table that does not exist in the PERSON table.","cdmTableName":"MEASUREMENT","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.172579 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the MEASUREMENT table that does not exist in the PROVIDER table.","cdmTableName":"MEASUREMENT","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.189475 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.187615 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_SOURCE_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.160589 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VALUE_AS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the MEASUREMENT table that does not exist in the CONCEPT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.VALUE_AS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.172240 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the MEASUREMENT table that does not exist in the VISIT_DETAIL table.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.234375 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the MEASUREMENT table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_measurement_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035723 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.METADATA_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.METADATA_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the METADATA_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030990 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.METADATA_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.METADATA_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the METADATA_TYPE_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031178 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VALUE_AS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.040628 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ENCODING_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ENCODING_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ENCODING_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037591 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.LANGUAGE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.LANGUAGE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LANGUAGE_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.040848 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_CLASS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_CLASS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_CLASS_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037972 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_EVENT_FIELD_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.035580 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_TYPE_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.036032 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the NOTE table that does not exist in the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037782 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the NOTE table that does not exist in the PROVIDER table.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032291 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the NOTE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.041696 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the NOTE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040033 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_NLP_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_NLP_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_NLP_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032229 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_NLP_SOURCE_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032338 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SECTION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SECTION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SECTION_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.251035 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.OBS_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBS_EVENT_FIELD_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.797009 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.231747 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_SOURCE_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.381492 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.269532 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the OBSERVATION table that does not exist in the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.209901 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the OBSERVATION table that does not exist in the PROVIDER table.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.208886 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.QUALIFIER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.QUALIFIER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the QUALIFIER_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.210850 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.209419 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VALUE_AS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.212489 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the OBSERVATION table that does not exist in the VISIT_DETAIL table.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.240507 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the OBSERVATION table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032334 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PERIOD_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PERIOD_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031842 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the OBSERVATION_PERIOD table that does not exist in the PERSON table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033070 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PAYER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PAYER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PAYER_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034792 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PAYER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PAYER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PAYER_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032804 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the PAYER_PLAN_PERIOD table that does not exist in the PERSON table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032835 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PLAN_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLAN_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLAN_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030292 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PLAN_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLAN_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLAN_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031106 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPONSOR_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPONSOR_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPONSOR_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031664 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPONSOR_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPONSOR_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033160 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.STOP_REASON_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.STOP_REASON_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the STOP_REASON_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033776 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.STOP_REASON_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the STOP_REASON_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031626 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the PERSON table that does not exist in the CARE_SITE table.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_care_site_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.CARE_SITE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032449 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ETHNICITY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ETHNICITY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032804 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ETHNICITY_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_ethnicity_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031432 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032084 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031890 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.LOCATION_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.LOCATION fkTable \n                ON cdmTable.LOCATION_ID = fkTable.LOCATION_ID\n        WHERE fkTable.LOCATION_ID IS NULL \n            AND cdmTable.LOCATION_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LOCATION_ID field in the PERSON table that does not exist in the LOCATION table.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032312 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the PERSON table that does not exist in the PROVIDER table.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032930 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.RACE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RACE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033361 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.RACE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RACE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036603 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.MODIFIER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.MODIFIER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MODIFIER_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034851 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the PERSON table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":83,"pctViolatedRows":0.0082,"numDenominatorRows":10074,"executionTime":"0.045852 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PROCEDURE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PROCEDURE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROCEDURE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_procedure_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":83,"pctViolatedRows":0.0082,"numDenominatorRows":10074,"executionTime":"0.048126 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PROCEDURE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PROCEDURE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROCEDURE_SOURCE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_procedure_source_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.035944 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.PROCEDURE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PROCEDURE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROCEDURE_TYPE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034822 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the PROVIDER table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032651 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.035588 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the PROCEDURE_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_procedure_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031286 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_etl_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the PROVIDER table that does not exist in the CARE_SITE table.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031674 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031304 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_SOURCE_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_gender_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.036832 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPECIALTY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIALTY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIALTY_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031040 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPECIALTY_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIALTY_SOURCE_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.032914 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SOURCE_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the CONCEPT table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":57,"pctViolatedRows":0.0187,"numDenominatorRows":3051,"executionTime":"0.040547 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.TARGET_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.TARGET_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the TARGET_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the CONCEPT table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":3051,"pctViolatedRows":1,"numDenominatorRows":3051,"executionTime":"0.030866 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\nfkTableName = VOCABULARY\nfkFieldName = VOCABULARY_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_etl_schema.VOCABULARY fkTable\n                ON cdmTable.TARGET_VOCABULARY_ID = fkTable.VOCABULARY_ID\n        WHERE fkTable.VOCABULARY_ID IS NULL \n            AND cdmTable.TARGET_VOCABULARY_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the TARGET_VOCABULARY_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the VOCABULARY table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_target_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.041477 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ANATOMIC_SITE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ANATOMIC_SITE_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040143 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DISEASE_STATUS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISEASE_STATUS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISEASE_STATUS_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.042550 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the SPECIMEN table that does not exist in the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.054231 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPECIMEN_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIMEN_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.047636 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.038869 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030895 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ADMITTED_FROM_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032110 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the VISIT_DETAIL table that does not exist in the CARE_SITE table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030421 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DISCHARGED_TO_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035914 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.PARENT_VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.PARENT_VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PARENT_VISIT_DETAIL_ID field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_parent_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PARENT_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033570 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the VISIT_DETAIL table that does not exist in the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033016 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_DETAIL fkTable \n                ON cdmTable.PRECEDING_VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.PRECEDING_VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PRECEDING_VISIT_DETAIL_ID field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_preceding_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032298 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the VISIT_DETAIL table that does not exist in the PROVIDER table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032689 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030885 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_SOURCE_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030991 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035021 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the VISIT_DETAIL table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.028862 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.ADMITTED_FROM_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030766 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the VISIT_OCCURRENCE table that does not exist in the CARE_SITE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.028532 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.DISCHARGED_TO_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031684 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the VISIT_OCCURRENCE table that does not exist in the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035922 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.PRECEDING_VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PRECEDING_VISIT_OCCURRENCE_ID field in the VISIT_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033538 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the VISIT_OCCURRENCE table that does not exist in the PROVIDER table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031762 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034401 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_SOURCE_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033213 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_etl_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030537 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\nfkDomain = Metadata\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.CDM_VERSION_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Metadata')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table that do not conform to the METADATA domain.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":666,"pctViolatedRows":0.1589,"numDenominatorRows":4190,"executionTime":"0.046113 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\nfkDomain = Condition\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Condition')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_ERA table that do not conform to the CONDITION domain.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_era_condition_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":3636,"pctViolatedRows":0.1374,"numDenominatorRows":26464,"executionTime":"0.043440 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nfkDomain = Condition\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Condition')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the CONDITION domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038584 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\nfkDomain = Condition Status\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.CONDITION_STATUS_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Condition Status')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the CONDITION STATUS domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038206 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.CONDITION_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.029565 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DEATH_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEATH_TYPE_CONCEPT_ID field in the DEATH table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033796 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\nfkDomain = Device\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DEVICE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Device')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the DEVICE domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031847 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DEVICE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031402 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the UNIT domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030356 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that do not conform to the DRUG domain.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032598 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DOSE_ERA table that do not conform to the UNIT domain.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.038594 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_ERA table that do not conform to the DRUG domain.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.040299 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_EXPOSURE table that do not conform to the DRUG domain.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038806 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DRUG_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_TYPE_CONCEPT_ID field in the DRUG_EXPOSURE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039453 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\nfkDomain = Route\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.ROUTE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Route')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ROUTE_CONCEPT_ID field in the DRUG_EXPOSURE table that do not conform to the ROUTE domain.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_exposure_route_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035476 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_STRENGTH table that do not conform to the DRUG domain.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033077 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\nfkDomain = Episode\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.EPISODE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Episode')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_CONCEPT_ID field in the EPISODE table that do not conform to the EPISODE domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032196 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\nfkDomain = Procedure OR Regimen\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.EPISODE_OBJECT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Procedure OR Regimen')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_OBJECT_CONCEPT_ID field in the EPISODE table that do not conform to the PROCEDURE OR REGIMEN domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030660 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.EPISODE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040925 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\nfkDomain = Metadata\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Metadata')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table that do not conform to the METADATA domain.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032997 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\nfkDomain = Geography\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.LOCATION cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.COUNTRY_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Geography')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COUNTRY_CONCEPT_ID field in the LOCATION table that do not conform to the GEOGRAPHY domain.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.241724 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nfkDomain = Measurement\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.MEASUREMENT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Measurement')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEASUREMENT_CONCEPT_ID field in the MEASUREMENT table that do not conform to the MEASUREMENT domain.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.241822 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.MEASUREMENT_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the MEASUREMENT_TYPE_CONCEPT_ID field in the MEASUREMENT table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"16.471294 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\nfkDomain = Meas Value Operator\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.OPERATOR_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Meas Value Operator')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OPERATOR_CONCEPT_ID field in the MEASUREMENT table that do not conform to the MEAS VALUE OPERATOR domain.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_measurement_operator_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.OPERATOR_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.796597 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the MEASUREMENT table that do not conform to the UNIT domain.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"7.178426 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkDomain = Meas Value\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.VALUE_AS_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Meas Value')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the MEASUREMENT table that do not conform to the MEAS VALUE domain.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_measurement_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.VALUE_AS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.037165 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.NOTE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.NOTE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_TYPE_CONCEPT_ID field in the NOTE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.094595 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"3.226914 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the OBSERVATION table that do not conform to the UNIT domain.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033668 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.PERIOD_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034060 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\nfkDomain = Ethnicity\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.ETHNICITY_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Ethnicity')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_CONCEPT_ID field in the PERSON table that do not conform to the ETHNICITY domain.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031885 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\nfkDomain = Gender\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Gender')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PERSON table that do not conform to the GENDER domain.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034135 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\nfkDomain = Race\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.RACE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Race')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_CONCEPT_ID field in the PERSON table that do not conform to the RACE domain.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":18,"pctViolatedRows":0.0018,"numDenominatorRows":10074,"executionTime":"0.045558 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nfkDomain = Procedure\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.PROCEDURE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Procedure')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROCEDURE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that do not conform to the PROCEDURE domain.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_procedure_occurrence_procedure_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.044494 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.PROCEDURE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROCEDURE_TYPE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033256 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\nfkDomain = Gender\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Gender')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PROVIDER table that do not conform to the GENDER domain.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.076128 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033779 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031085 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033523 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.VISIT_DETAIL_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031507 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034147 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035211 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034990 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.VISIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.038054 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n            ON cdmTable.VISIT_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034143 secs","queryText":"/*********\nFK_CLASS\nCheck that drug concepts in DRUG_ERA.drug_concept_id, DOSE_ERA.drug_concept_id, \nand DRUG_STRENGTH.ingredient_concept_id are of class 'Ingredient'. \nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkClass = Ingredient\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n                ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND (co.concept_class_id != 'Ingredient') \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkClass","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that do not conform to the INGREDIENT class.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_class.sql","category":"Conformance","subcategory":"Computational","context":"Verification","checkId":"field_fkclass_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036356 secs","queryText":"/*********\nFK_CLASS\nCheck that drug concepts in DRUG_ERA.drug_concept_id, DOSE_ERA.drug_concept_id, \nand DRUG_STRENGTH.ingredient_concept_id are of class 'Ingredient'. \nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkClass = Ingredient\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n                ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND (co.concept_class_id != 'Ingredient') \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"fkClass","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_ERA table that do not conform to the INGREDIENT class.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_class.sql","category":"Conformance","subcategory":"Computational","context":"Verification","checkId":"field_fkclass_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030877 secs","queryText":"/*********\nFK_CLASS\nCheck that drug concepts in DRUG_ERA.drug_concept_id, DOSE_ERA.drug_concept_id, \nand DRUG_STRENGTH.ingredient_concept_id are of class 'Ingredient'. \nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\nfkClass = Ingredient\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN omop_etl_schema.concept co\n                ON cdmTable.INGREDIENT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND (co.concept_class_id != 'Ingredient') \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"fkClass","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the INGREDIENT_CONCEPT_ID field in the DRUG_STRENGTH table that do not conform to the INGREDIENT class.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_fk_class.sql","category":"Conformance","subcategory":"Computational","context":"Verification","checkId":"field_fkclass_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032813 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PLACE_OF_SERVICE_CONCEPT_ID field in the CARE_SITE table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030838 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CDM_VERSION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.034317 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_CONCEPT_ID field in the CONDITION_ERA table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.045404 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.041592 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CONDITION_STATUS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.040366 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CONDITION_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033318 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.COST_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the COST_TYPE_CONCEPT_ID field in the COST table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030277 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.CAUSE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CAUSE_CONCEPT_ID field in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034826 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DEATH_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEATH_TYPE_CONCEPT_ID field in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031464 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DEVICE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032400 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DEVICE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032595 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031707 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DRUG_CONCEPT_ID field in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036790 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.033508 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DRUG_CONCEPT_ID field in the DRUG_ERA table.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039160 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DRUG_CONCEPT_ID field in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.055266 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DRUG_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DRUG_TYPE_CONCEPT_ID field in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038482 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ROUTE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ROUTE_CONCEPT_ID field in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_drug_exposure_route_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033529 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.EPISODE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_CONCEPT_ID field in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033625 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.EPISODE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034858 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032922 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.COUNTRY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the COUNTRY_CONCEPT_ID field in the LOCATION table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.268127 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEAS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEAS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the MEAS_EVENT_FIELD_CONCEPT_ID field in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEAS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_measurement_meas_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.236072 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.MEASUREMENT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the MEASUREMENT_CONCEPT_ID field in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.251611 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.MEASUREMENT_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the MEASUREMENT_TYPE_CONCEPT_ID field in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"2.642110 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.OPERATOR_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OPERATOR_CONCEPT_ID field in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_measurement_operator_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.OPERATOR_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.357568 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.038157 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ENCODING_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ENCODING_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032771 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.LANGUAGE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the LANGUAGE_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.033714 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.NOTE_CLASS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_CLASS_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.033171 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_EVENT_FIELD_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032216 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.NOTE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_TYPE_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030095 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.NOTE_NLP_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_NLP_CONCEPT_ID field in the NOTE_NLP table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030156 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.SECTION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SECTION_CONCEPT_ID field in the NOTE_NLP table.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"4.863756 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.OBS_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBS_EVENT_FIELD_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":3720,"pctViolatedRows":0.0032,"numDenominatorRows":1161982,"executionTime":"0.743394 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.OBSERVATION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBSERVATION_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_observation_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.340668 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"3.293593 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.QUALIFIER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the QUALIFIER_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"2.662639 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032489 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.PERIOD_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034943 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ETHNICITY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ETHNICITY_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034859 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the GENDER_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033552 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.RACE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the RACE_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.033307 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.MODIFIER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the MODIFIER_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.035818 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.PROCEDURE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PROCEDURE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_procedure_occurrence_procedure_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034052 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.PROCEDURE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PROCEDURE_TYPE_CONCEPT_ID field in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032693 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the GENDER_CONCEPT_ID field in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032529 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.SPECIALTY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIALTY_CONCEPT_ID field in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":6,"pctViolatedRows":0.002,"numDenominatorRows":3051,"executionTime":"0.039139 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.TARGET_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the TARGET_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.047477 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ANATOMIC_SITE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ANATOMIC_SITE_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.049986 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DISEASE_STATUS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISEASE_STATUS_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.047684 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.SPECIMEN_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIMEN_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.047994 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.048134 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033901 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032809 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031142 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.VISIT_DETAIL_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035571 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035139 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033321 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032463 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.VISIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.029833 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_etl_schema.concept co \n\t  \t    ON cdmTable.VISIT_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031676 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.034131 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_NAME of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.033105 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_SOURCE_VALUE of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":111,"pctViolatedRows":1,"numDenominatorRows":111,"executionTime":"0.033677 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031193 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLACE_OF_SERVICE_CONCEPT_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":13,"pctViolatedRows":0.1171,"numDenominatorRows":111,"executionTime":"0.039233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.PLACE_OF_SERVICE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLACE_OF_SERVICE_SOURCE_VALUE of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_place_of_service_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042850 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_ETL_REFERENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_ETL_REFERENCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_ETL_REFERENCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_ETL_REFERENCE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_ETL_REFERENCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_etl_reference","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036189 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_HOLDER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_HOLDER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_HOLDER of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031157 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_RELEASE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_RELEASE_DATE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033725 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_SOURCE_ABBREVIATION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_SOURCE_ABBREVIATION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_ABBREVIATION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032605 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_SOURCE_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_SOURCE_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_NAME of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032717 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_VERSION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038174 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_VERSION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION_CONCEPT_ID of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032947 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DESCRIPTION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_DESCRIPTION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_DESCRIPTION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_DESCRIPTION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DESCRIPTION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_description","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031786 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DOCUMENTATION_REFERENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_DOCUMENTATION_REFERENCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_DOCUMENTATION_REFERENCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_DOCUMENTATION_REFERENCE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DOCUMENTATION_REFERENCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_documentation_reference","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031767 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_RELEASE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_RELEASE_DATE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032998 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.VOCABULARY_VERSION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.VOCABULARY_VERSION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VOCABULARY_VERSION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.034498 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.033948 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.CONDITION_ERA_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_END_DATE of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.040024 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.CONDITION_ERA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_ID of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_condition_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.034616 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.CONDITION_ERA_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_ERA_START_DATE of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.033471 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_OCCURRENCE_COUNT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_OCCURRENCE_COUNT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.CONDITION_OCCURRENCE_COUNT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_COUNT of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_OCCURRENCE_COUNT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_condition_occurrence_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.032799 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_ERA.","cdmTableName":"CONDITION_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.036935 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.037493 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_END_DATE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.040515 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_END_DATETIME of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.034766 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":3142,"pctViolatedRows":0.1187,"numDenominatorRows":26464,"executionTime":"0.038719 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_SOURCE_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038364 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_SOURCE_VALUE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.034150 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.043262 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATETIME of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.036413 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_STATUS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_STATUS_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.037743 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_STATUS_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_STATUS_SOURCE_VALUE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.036196 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_TYPE_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.037470 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.036339 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.037429 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.STOP_REASON' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.STOP_REASON IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"STOP_REASON","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26464,"pctViolatedRows":1,"numDenominatorRows":26464,"executionTime":"0.035235 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038311 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033049 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = AMOUNT_ALLOWED\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.AMOUNT_ALLOWED' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.AMOUNT_ALLOWED IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the AMOUNT_ALLOWED of the COST.","cdmTableName":"COST","cdmFieldName":"AMOUNT_ALLOWED","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_amount_allowed","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030700 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_DOMAIN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_DOMAIN_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_DOMAIN_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029386 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_EVENT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029680 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030015 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_TYPE_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030866 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.CURRENCY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CURRENCY_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033223 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.DRG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRG_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036750 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = DRG_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.DRG_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRG_SOURCE_VALUE of the COST.","cdmTableName":"COST","cdmFieldName":"DRG_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_drg_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032640 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PATIENT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PATIENT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PATIENT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PATIENT of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PATIENT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_patient","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031521 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PAYER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PAYER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PAYER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PAYER of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PAYER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_payer","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031647 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PRIMARY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PRIMARY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PRIMARY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PRIMARY of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PRIMARY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_primary","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032271 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_DISPENSING_FEE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_DISPENSING_FEE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_DISPENSING_FEE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_DISPENSING_FEE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_DISPENSING_FEE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_dispensing_fee","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032579 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_INGREDIENT_COST\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_INGREDIENT_COST' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_INGREDIENT_COST IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_INGREDIENT_COST of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_INGREDIENT_COST","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_ingredient_cost","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033487 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COINSURANCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_COINSURANCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_COINSURANCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_COINSURANCE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COINSURANCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_coinsurance","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036227 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COPAY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_COPAY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_COPAY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_COPAY of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COPAY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_copay","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031555 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_DEDUCTIBLE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_DEDUCTIBLE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_DEDUCTIBLE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_DEDUCTIBLE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_DEDUCTIBLE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_deductible","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032026 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the COST.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030867 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.REVENUE_CODE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the REVENUE_CODE_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029770 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.REVENUE_CODE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the REVENUE_CODE_SOURCE_VALUE of the COST.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_revenue_code_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032316 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_CHARGE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_CHARGE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_CHARGE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_CHARGE of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_CHARGE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_charge","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032082 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_COST\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_COST' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_COST IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_COST of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_COST","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_cost","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033145 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_PAID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_PAID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_PAID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_PAID of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_PAID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_paid","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.031701 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.032357 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_SOURCE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.032490 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_SOURCE_VALUE of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034408 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATE of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.031587 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATETIME of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.038760 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_TYPE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032685 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEATH cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.034918 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":63,"pctViolatedRows":0.4773,"numDenominatorRows":132,"executionTime":"0.032377 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.032854 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATETIME of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033312 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030828 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.033677 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATETIME of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.032076 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_SOURCE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033237 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_SOURCE_VALUE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033263 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_TYPE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035303 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.030476 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PRODUCTION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PRODUCTION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PRODUCTION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRODUCTION_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PRODUCTION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_production_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.035396 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.034536 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.033896 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIQUE_DEVICE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIQUE_DEVICE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIQUE_DEVICE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIQUE_DEVICE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIQUE_DEVICE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unique_device_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.030542 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031762 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031485 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.036255 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.036241 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034151 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_END_DATE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032034 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032135 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_START_DATE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036805 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_VALUE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033438 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031690 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037604 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.034648 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.032450 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_ERA_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_END_DATE of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.043562 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_ERA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_ID of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_drug_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.033384 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_ERA_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_ERA_START_DATE of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.033206 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_EXPOSURE_COUNT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_EXPOSURE_COUNT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_COUNT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_COUNT of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_EXPOSURE_COUNT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_drug_exposure_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.032052 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = GAP_DAYS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.GAP_DAYS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.GAP_DAYS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GAP_DAYS of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"GAP_DAYS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_gap_days","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.031788 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DRUG_ERA.","cdmTableName":"DRUG_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.049450 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DAYS_SUPPLY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DAYS_SUPPLY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DAYS_SUPPLY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DAYS_SUPPLY of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DAYS_SUPPLY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_days_supply","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.049735 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DOSE_UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DOSE_UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DOSE_UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_UNIT_SOURCE_VALUE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DOSE_UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_dose_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.048029 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.047322 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_END_DATE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038308 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_END_DATETIME of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.033333 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.034533 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_START_DATE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.033848 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_EXPOSURE_START_DATETIME of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.036996 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_SOURCE_CONCEPT_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.033436 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_SOURCE_VALUE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.040486 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_TYPE_CONCEPT_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.037192 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = LOT_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.LOT_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.LOT_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOT_NUMBER of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"LOT_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_lot_number","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.042351 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.038851 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.038242 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.038716 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = REFILLS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.REFILLS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.REFILLS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the REFILLS of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"REFILLS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_refills","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.037298 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.ROUTE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ROUTE_CONCEPT_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_route_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.037119 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.ROUTE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.ROUTE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ROUTE_SOURCE_VALUE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_route_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.037113 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = SIG\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.SIG' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.SIG IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SIG of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"SIG","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_sig","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.041620 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.STOP_REASON' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.STOP_REASON IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"STOP_REASON","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.041608 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VERBATIM_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VERBATIM_END_DATE of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_verbatim_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":26065,"pctViolatedRows":1,"numDenominatorRows":26065,"executionTime":"0.037538 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036784 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the DRUG_EXPOSURE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_drug_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031969 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030925 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_END_DATE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030403 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_END_DATETIME of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035454 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032502 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_NUMBER of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031063 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_OBJECT_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030779 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_PARENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_PARENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_PARENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_PARENT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_PARENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_parent_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029949 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_SOURCE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031103 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_SOURCE_VALUE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030564 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037119 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATETIME of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030382 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_TYPE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032996 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031435 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_EVENT_FIELD_CONCEPT_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031861 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EPISODE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030739 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EVENT_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031311 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.DOMAIN_CONCEPT_ID_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_1 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035689 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.DOMAIN_CONCEPT_ID_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_2 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031520 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.FACT_ID_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_1 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031253 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.FACT_ID_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_2 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032243 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.RELATIONSHIP_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RELATIONSHIP_CONCEPT_ID of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031393 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ADDRESS_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ADDRESS_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADDRESS_1 of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_address_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031463 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ADDRESS_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ADDRESS_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADDRESS_2 of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_address_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028931 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = CITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.CITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.CITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CITY of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"CITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_city","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032924 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTRY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTRY_CONCEPT_ID of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029269 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTRY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTRY_SOURCE_VALUE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_country_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030162 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTY of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_county","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029525 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LATITUDE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LATITUDE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LATITUDE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LATITUDE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LATITUDE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_latitude","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031312 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032052 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LOCATION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_SOURCE_VALUE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_location_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030499 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = LONGITUDE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LONGITUDE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LONGITUDE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LONGITUDE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LONGITUDE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_longitude","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030893 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = STATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.STATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.STATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STATE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"STATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_state","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031993 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = ZIP\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ZIP' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ZIP IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ZIP of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ZIP","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_zip","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":715385,"pctViolatedRows":0.9723,"numDenominatorRows":735767,"executionTime":"0.196184 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEAS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEAS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEAS_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEAS_EVENT_FIELD_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEAS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_meas_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.144637 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.142575 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_DATE of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":316330,"pctViolatedRows":0.4299,"numDenominatorRows":735767,"executionTime":"0.153202 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_DATETIME of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":715385,"pctViolatedRows":0.9723,"numDenominatorRows":735767,"executionTime":"0.214770 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_EVENT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.077856 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.198147 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_SOURCE_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":27,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.191445 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_SOURCE_VALUE of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":324801,"pctViolatedRows":0.4414,"numDenominatorRows":735767,"executionTime":"0.214000 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_TIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_TIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_TIME of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_time","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.149837 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MEASUREMENT_TYPE_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.169098 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = OPERATOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.OPERATOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.OPERATOR_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OPERATOR_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"OPERATOR_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_operator_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.144443 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.182459 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.176545 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = RANGE_HIGH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.RANGE_HIGH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.RANGE_HIGH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RANGE_HIGH of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"RANGE_HIGH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_range_high","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.173162 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = RANGE_LOW\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.RANGE_LOW' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.RANGE_LOW IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RANGE_LOW of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"RANGE_LOW","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_range_low","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":687864,"pctViolatedRows":0.9349,"numDenominatorRows":735767,"executionTime":"0.176457 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.194376 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.194045 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.183384 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":523602,"pctViolatedRows":0.7116,"numDenominatorRows":735767,"executionTime":"0.165496 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VALUE_AS_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.VALUE_AS_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":215090,"pctViolatedRows":0.2923,"numDenominatorRows":735767,"executionTime":"0.184743 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VALUE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.VALUE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_SOURCE_VALUE of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":735767,"pctViolatedRows":1,"numDenominatorRows":735767,"executionTime":"0.183496 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":218712,"pctViolatedRows":0.2973,"numDenominatorRows":735767,"executionTime":"0.171324 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the MEASUREMENT.","cdmTableName":"MEASUREMENT","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_measurement_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032694 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033155 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_DATE of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035200 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_DATETIME of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033414 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032866 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_TYPE_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029223 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NAME of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_name","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031099 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030461 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029790 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_STRING' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_STRING IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_STRING of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_string","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031410 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.ENCODING_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ENCODING_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031716 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.LANGUAGE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LANGUAGE_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031702 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_CLASS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_CLASS_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.033690 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032411 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATETIME of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":3869,"pctViolatedRows":1,"numDenominatorRows":3869,"executionTime":"0.033134 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_EVENT_FIELD_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":3869,"pctViolatedRows":1,"numDenominatorRows":3869,"executionTime":"0.038723 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_EVENT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.033413 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032809 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_SOURCE_VALUE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032266 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TEXT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TEXT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TEXT of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032678 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TITLE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TITLE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TITLE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TITLE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TITLE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_title","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031882 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TYPE_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032621 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":3869,"pctViolatedRows":1,"numDenominatorRows":3869,"executionTime":"0.034555 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":3869,"pctViolatedRows":1,"numDenominatorRows":3869,"executionTime":"0.033736 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.031039 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031315 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.LEXICAL_VARIANT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.LEXICAL_VARIANT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LEXICAL_VARIANT of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_lexical_variant","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030541 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATE of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033083 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATETIME of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033093 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_SYSTEM\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_SYSTEM' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_SYSTEM IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_SYSTEM of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_SYSTEM","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_system","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031056 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032038 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034299 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032625 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_SOURCE_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032170 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.SECTION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SECTION_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032732 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SNIPPET\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SNIPPET' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.SNIPPET IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SNIPPET of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"SNIPPET","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_snippet","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035852 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_EXISTS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_EXISTS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_EXISTS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_EXISTS of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_EXISTS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_exists","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030185 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_MODIFIERS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_MODIFIERS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_MODIFIERS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_MODIFIERS of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_MODIFIERS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_modifiers","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029385 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_TEMPORAL\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_TEMPORAL' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_TEMPORAL IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_TEMPORAL of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_TEMPORAL","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_temporal","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.283007 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBS_EVENT_FIELD_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_obs_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.193582 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.197429 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.237385 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATETIME of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.275682 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_EVENT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.097002 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.356853 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_SOURCE_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.232168 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.203661 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_TYPE_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.183385 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.245981 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.234280 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.QUALIFIER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUALIFIER_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_qualifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.443972 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.QUALIFIER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUALIFIER_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_qualifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.660242 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.655183 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1160526,"pctViolatedRows":0.9987,"numDenominatorRows":1161982,"executionTime":"0.554698 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1039188,"pctViolatedRows":0.8943,"numDenominatorRows":1161982,"executionTime":"0.437473 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":282523,"pctViolatedRows":0.2431,"numDenominatorRows":1161982,"executionTime":"0.214181 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_STRING' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_STRING IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_STRING of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.242387 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1161982,"pctViolatedRows":1,"numDenominatorRows":1161982,"executionTime":"0.247693 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1114900,"pctViolatedRows":0.9595,"numDenominatorRows":1161982,"executionTime":"0.245724 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032867 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_END_DATE of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033058 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030436 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_START_DATE of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030887 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.PERIOD_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERIOD_TYPE_CONCEPT_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031515 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032115 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = FAMILY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.FAMILY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.FAMILY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FAMILY_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"FAMILY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_family_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031909 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030696 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_END_DATE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030354 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031197 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_START_DATE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032908 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032885 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031957 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031332 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031126 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033381 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032103 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030960 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032129 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031860 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031846 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031040 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032049 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.BIRTH_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.BIRTH_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the BIRTH_DATETIME of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_birth_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.033518 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.031607 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.DAY_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DAY_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_day_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032174 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.034165 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032175 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031653 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031167 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.037370 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032574 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.036929 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.MONTH_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MONTH_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_month_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031799 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033262 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PERSON_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_person_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032592 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033337 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.037375 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032265 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032891 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PERSON cdmTable\n\t\tWHERE cdmTable.YEAR_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036766 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.MODIFIER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MODIFIER_CONCEPT_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":10074,"pctViolatedRows":1,"numDenominatorRows":10074,"executionTime":"0.031831 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.MODIFIER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.MODIFIER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MODIFIER_SOURCE_VALUE of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_modifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032237 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.031456 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034811 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_DATE of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032968 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_DATETIME of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":4534,"pctViolatedRows":0.4501,"numDenominatorRows":10074,"executionTime":"0.034472 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_END_DATE of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":4534,"pctViolatedRows":0.4501,"numDenominatorRows":10074,"executionTime":"0.031768 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_END_DATETIME of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_OCCURRENCE_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036163 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_SOURCE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":4664,"pctViolatedRows":0.463,"numDenominatorRows":10074,"executionTime":"0.039508 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_SOURCE_VALUE of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.033421 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROCEDURE_TYPE_CONCEPT_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":6111,"pctViolatedRows":0.6066,"numDenominatorRows":10074,"executionTime":"0.038549 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.033156 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":10074,"pctViolatedRows":1,"numDenominatorRows":10074,"executionTime":"0.036070 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":4534,"pctViolatedRows":0.4501,"numDenominatorRows":10074,"executionTime":"0.033061 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the PROCEDURE_OCCURRENCE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_procedure_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.034775 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.029926 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = DEA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.DEA' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.DEA IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEA of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"DEA","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_dea","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031866 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.032142 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031718 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031693 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = NPI\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.NPI' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.NPI IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NPI of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"NPI","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_npi","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032675 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031370 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_NAME of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030915 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030949 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.032062 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_SOURCE_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031015 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.030797 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.YEAR_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.047886 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ANATOMIC_SITE_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_anatomic_site_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.046958 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.ANATOMIC_SITE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ANATOMIC_SITE_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_anatomic_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.047046 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.DISEASE_STATUS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISEASE_STATUS_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_disease_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.056973 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.DISEASE_STATUS_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISEASE_STATUS_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_disease_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.038948 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.040179 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039734 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.041193 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.041214 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATETIME of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.035200 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.044344 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_SOURCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_SOURCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_SOURCE_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_source_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.043534 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.060429 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_TYPE_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.038810 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.041451 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.032817 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.031233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030191 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030585 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.031772 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.032288 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PARENT_VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PARENT_VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_parent_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032964 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.035576 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PRECEDING_VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRECEDING_VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_preceding_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030664 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031431 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032936 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034110 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATETIME of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031063 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.032062 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034228 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032424 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032746 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATETIME of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030678 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_TYPE_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032236 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032954 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.030864 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030463 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.029942 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":660,"pctViolatedRows":0.4125,"numDenominatorRows":1600,"executionTime":"0.034196 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031728 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.031863 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRECEDING_VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032103 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033525 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.041767 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.052478 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATETIME of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.039350 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032277 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_SOURCE_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":83,"pctViolatedRows":0.0519,"numDenominatorRows":1600,"executionTime":"0.032537 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032373 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032403 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATETIME of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032673 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_TYPE_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.030886 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CARE_SITE cdmTable\n        WHERE cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PLACE_OF_SERVICE_CONCEPT_ID in the CARE_SITE table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":245,"pctViolatedRows":0.0585,"numDenominatorRows":4190,"executionTime":"0.033218 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_CONCEPT_ID in the CONDITION_ERA table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_era_condition_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":3815,"pctViolatedRows":0.1442,"numDenominatorRows":26464,"executionTime":"0.034246 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.034022 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_STATUS_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_STATUS_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.034575 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_TYPE_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029909 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.COST cdmTable\n        WHERE cdmTable.COST_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.COST cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field COST_TYPE_CONCEPT_ID in the COST table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032802 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CAUSE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032759 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.DEATH_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEATH_TYPE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033971 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEVICE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032351 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEVICE_TYPE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030449 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033949 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DRUG_CONCEPT_ID in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031161 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.033612 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DRUG_CONCEPT_ID in the DRUG_ERA table.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_drug_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":7155,"pctViolatedRows":0.2745,"numDenominatorRows":26065,"executionTime":"0.036648 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DRUG_CONCEPT_ID in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_drug_exposure_drug_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035884 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DRUG_TYPE_CONCEPT_ID in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_drug_exposure_drug_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.037213 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.ROUTE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.ROUTE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ROUTE_CONCEPT_ID in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_drug_exposure_route_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029559 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field EPISODE_CONCEPT_ID in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031770 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_1 = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DOMAIN_CONCEPT_ID_1 in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030285 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_2 = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DOMAIN_CONCEPT_ID_2 in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033288 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.RELATIONSHIP_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field RELATIONSHIP_CONCEPT_ID in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031536 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.LOCATION cdmTable\n        WHERE cdmTable.COUNTRY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field COUNTRY_CONCEPT_ID in the LOCATION table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":327503,"pctViolatedRows":0.4451,"numDenominatorRows":735767,"executionTime":"0.152833 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field MEASUREMENT_CONCEPT_ID in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_measurement_measurement_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.156143 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field MEASUREMENT_TYPE_CONCEPT_ID in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_measurement_measurement_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":212165,"executionTime":"0.192334 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 AND cdmTable.value_as_number IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    WHERE cdmTable.value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_measurement_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":587861,"pctViolatedRows":0.5059,"numDenominatorRows":1161982,"executionTime":"0.210705 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field OBSERVATION_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_observation_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.196969 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field OBSERVATION_TYPE_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":122794,"executionTime":"0.258655 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 AND cdmTable.value_as_number IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    WHERE cdmTable.value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032387 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERIOD_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PERIOD_TYPE_CONCEPT_ID in the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.030317 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ETHNICITY_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034259 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field GENDER_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":151,"pctViolatedRows":0.1512,"numDenominatorRows":999,"executionTime":"0.035053 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field RACE_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":10074,"pctViolatedRows":1,"numDenominatorRows":10074,"executionTime":"0.033930 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.MODIFIER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.MODIFIER_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field MODIFIER_CONCEPT_ID in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_procedure_occurrence_modifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":5640,"pctViolatedRows":0.5599,"numDenominatorRows":10074,"executionTime":"0.040078 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PROCEDURE_CONCEPT_ID in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_procedure_occurrence_procedure_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034668 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PROCEDURE_TYPE_CONCEPT_ID in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_procedure_occurrence_procedure_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031794 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field GENDER_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030416 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIALTY_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.046757 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIMEN_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_specimen_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.038298 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIMEN_TYPE_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.037845 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034961 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.ADMITTED_FROM_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ADMITTED_FROM_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031055 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.DISCHARGED_TO_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DISCHARGED_TO_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033762 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_DETAIL_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031545 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_DETAIL_TYPE_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032381 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.ADMITTED_FROM_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ADMITTED_FROM_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031311 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.DISCHARGED_TO_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DISCHARGED_TO_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":83,"pctViolatedRows":0.0519,"numDenominatorRows":1600,"executionTime":"0.033267 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_visit_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.037618 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_TYPE_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.038469 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field CONDITION_SOURCE_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030628 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field CAUSE_SOURCE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030833 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field DEVICE_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033226 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field UNIT_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036776 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field DRUG_SOURCE_CONCEPT_ID in the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_drug_exposure_drug_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.DRUG_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037728 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field EPISODE_SOURCE_CONCEPT_ID in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.176798 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field MEASUREMENT_SOURCE_CONCEPT_ID in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_measurement_measurement_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.MEASUREMENT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.181966 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.UNIT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field UNIT_SOURCE_CONCEPT_ID in the MEASUREMENT table.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_measurement_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.240289 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field OBSERVATION_SOURCE_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":5640,"pctViolatedRows":0.5599,"numDenominatorRows":10074,"executionTime":"0.035440 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field PROCEDURE_SOURCE_CONCEPT_ID in the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_procedure_occurrence_procedure_source_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032033 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field SPECIALTY_SOURCE_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030172 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field VISIT_DETAIL_SOURCE_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_visit_detail_visit_detail_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034486 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field VISIT_SOURCE_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":167,"pctViolatedRows":0.1282,"numDenominatorRows":1303,"executionTime":"0.072259 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\nstandardConceptFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_VALUE' AS violating_field, \n            cdmTable.CONDITION_SOURCE_VALUE\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CONDITION_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CONDITION_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CONDITION_SOURCE_VALUE field of the CONDITION_OCCURRENCE table mapped to 0.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_condition_occurrence_condition_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.043615 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\nstandardConceptFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE' AS violating_field, \n            cdmTable.CONDITION_STATUS_SOURCE_VALUE\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_STATUS_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CONDITION_STATUS_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CONDITION_STATUS_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CONDITION_STATUS_SOURCE_VALUE field of the CONDITION_OCCURRENCE table mapped to 0.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_condition_occurrence_condition_status_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033970 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\nstandardConceptFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEATH.CAUSE_SOURCE_VALUE' AS violating_field, \n            cdmTable.CAUSE_SOURCE_VALUE\n        FROM omop_etl_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CAUSE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CAUSE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CAUSE_SOURCE_VALUE field of the DEATH table mapped to 0.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_death_cause_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_VALUE is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3,"executionTime":"0.033386 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\nstandardConceptFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_VALUE' AS violating_field, \n            cdmTable.DEVICE_SOURCE_VALUE\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DEVICE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DEVICE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DEVICE_SOURCE_VALUE field of the DEVICE_EXPOSURE table mapped to 0.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031956 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the DEVICE_EXPOSURE table mapped to 0.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_device_exposure_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":158,"pctViolatedRows":0.4969,"numDenominatorRows":318,"executionTime":"0.056529 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_SOURCE_VALUE\nstandardConceptFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DRUG_EXPOSURE.DRUG_SOURCE_VALUE' AS violating_field, \n            cdmTable.DRUG_SOURCE_VALUE\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DRUG_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DRUG_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DRUG_SOURCE_VALUE field of the DRUG_EXPOSURE table mapped to 0.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_drug_exposure_drug_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.041384 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = ROUTE_SOURCE_VALUE\nstandardConceptFieldName = ROUTE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DRUG_EXPOSURE.ROUTE_SOURCE_VALUE' AS violating_field, \n            cdmTable.ROUTE_SOURCE_VALUE\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.ROUTE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ROUTE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ROUTE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ROUTE_SOURCE_VALUE field of the DRUG_EXPOSURE table mapped to 0.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"ROUTE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_drug_exposure_route_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.ROUTE_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":135,"pctViolatedRows":0.5037,"numDenominatorRows":268,"executionTime":"1.043162 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_SOURCE_VALUE\nstandardConceptFieldName = MEASUREMENT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'MEASUREMENT.MEASUREMENT_SOURCE_VALUE' AS violating_field, \n            cdmTable.MEASUREMENT_SOURCE_VALUE\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.MEASUREMENT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.MEASUREMENT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.MEASUREMENT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the MEASUREMENT_SOURCE_VALUE field of the MEASUREMENT table mapped to 0.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_measurement_measurement_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.322387 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'MEASUREMENT.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the MEASUREMENT table mapped to 0.","cdmTableName":"MEASUREMENT","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_measurement_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field MEASUREMENT.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":12,"pctViolatedRows":0.3871,"numDenominatorRows":31,"executionTime":"0.892757 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\nstandardConceptFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.OBSERVATION_SOURCE_VALUE' AS violating_field, \n            cdmTable.OBSERVATION_SOURCE_VALUE\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.OBSERVATION_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.OBSERVATION_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the OBSERVATION_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.436175 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\nstandardConceptFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.QUALIFIER_SOURCE_VALUE' AS violating_field, \n            cdmTable.QUALIFIER_SOURCE_VALUE\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.QUALIFIER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.QUALIFIER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.QUALIFIER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the QUALIFIER_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_qualifier_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.423552 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037475 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\nstandardConceptFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.PAYER_SOURCE_VALUE' AS violating_field, \n            cdmTable.PAYER_SOURCE_VALUE\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.PAYER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.PAYER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the PAYER_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_payer_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032822 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\nstandardConceptFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.PLAN_SOURCE_VALUE' AS violating_field, \n            cdmTable.PLAN_SOURCE_VALUE\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PLAN_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.PLAN_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.PLAN_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the PLAN_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_plan_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039374 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\nstandardConceptFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPONSOR_SOURCE_VALUE\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.SPONSOR_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPONSOR_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPONSOR_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPONSOR_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_sponsor_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033765 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\nstandardConceptFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_VALUE' AS violating_field, \n            cdmTable.STOP_REASON_SOURCE_VALUE\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.STOP_REASON_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.STOP_REASON_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.STOP_REASON_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the STOP_REASON_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_stop_reason_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":1,"pctViolatedRows":1,"numDenominatorRows":1,"executionTime":"0.032521 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\nstandardConceptFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.ETHNICITY_SOURCE_VALUE' AS violating_field, \n            cdmTable.ETHNICITY_SOURCE_VALUE\n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ETHNICITY_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ETHNICITY_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ETHNICITY_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_ethnicity_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.032218 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.GENDER_SOURCE_VALUE' AS violating_field, \n            cdmTable.GENDER_SOURCE_VALUE\n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.GENDER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.GENDER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the GENDER_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":2,"pctViolatedRows":0.5,"numDenominatorRows":4,"executionTime":"0.032747 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\nstandardConceptFieldName = RACE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.RACE_SOURCE_VALUE' AS violating_field, \n            cdmTable.RACE_SOURCE_VALUE\n        FROM omop_etl_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.RACE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.RACE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the RACE_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1,"pctViolatedRows":1,"numDenominatorRows":1,"executionTime":"0.041355 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = MODIFIER_SOURCE_VALUE\nstandardConceptFieldName = MODIFIER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROCEDURE_OCCURRENCE.MODIFIER_SOURCE_VALUE' AS violating_field, \n            cdmTable.MODIFIER_SOURCE_VALUE\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.MODIFIER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.MODIFIER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.MODIFIER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the MODIFIER_SOURCE_VALUE field of the PROCEDURE_OCCURRENCE table mapped to 0.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"MODIFIER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_procedure_occurrence_modifier_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROCEDURE_OCCURRENCE.MODIFIER_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":138,"pctViolatedRows":0.2782,"numDenominatorRows":496,"executionTime":"0.041021 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_SOURCE_VALUE\nstandardConceptFieldName = PROCEDURE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_SOURCE_VALUE' AS violating_field, \n            cdmTable.PROCEDURE_SOURCE_VALUE\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.PROCEDURE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.PROCEDURE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the PROCEDURE_SOURCE_VALUE field of the PROCEDURE_OCCURRENCE table mapped to 0.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_procedure_occurrence_procedure_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035003 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROVIDER.GENDER_SOURCE_VALUE' AS violating_field, \n            cdmTable.GENDER_SOURCE_VALUE\n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.GENDER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.GENDER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the GENDER_SOURCE_VALUE field of the PROVIDER table mapped to 0.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_provider_gender_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":33,"executionTime":"0.033044 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\nstandardConceptFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROVIDER.SPECIALTY_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPECIALTY_SOURCE_VALUE\n        FROM omop_etl_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPECIALTY_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPECIALTY_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPECIALTY_SOURCE_VALUE field of the PROVIDER table mapped to 0.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.044204 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\nstandardConceptFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE' AS violating_field, \n            cdmTable.ANATOMIC_SITE_SOURCE_VALUE\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ANATOMIC_SITE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ANATOMIC_SITE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ANATOMIC_SITE_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_anatomic_site_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.045527 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\nstandardConceptFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.DISEASE_STATUS_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISEASE_STATUS_SOURCE_VALUE\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.DISEASE_STATUS_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISEASE_STATUS_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISEASE_STATUS_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISEASE_STATUS_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_disease_status_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.246393 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\nstandardConceptFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.SPECIMEN_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPECIMEN_SOURCE_VALUE\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPECIMEN_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPECIMEN_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPECIMEN_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.046494 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_DETAIL.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n            cdmTable.ADMITTED_FROM_SOURCE_VALUE\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ADMITTED_FROM_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ADMITTED_FROM_SOURCE_VALUE field of the VISIT_DETAIL table mapped to 0.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 556\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_DETAIL_ADMITTED_FROM_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_detail_admitted_from_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_DETAIL.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISCHARGED_TO_SOURCE_VALUE\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISCHARGED_TO_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISCHARGED_TO_SOURCE_VALUE field of the VISIT_DETAIL table mapped to 0.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 556\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_DETAIL_DISCHARGED_TO_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_detail_discharged_to_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n            cdmTable.ADMITTED_FROM_SOURCE_VALUE\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ADMITTED_FROM_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ADMITTED_FROM_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 564\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_OCCURRENCE_ADMITTED_FROM_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_occurrence_admitted_from_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISCHARGED_TO_SOURCE_VALUE\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISCHARGED_TO_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISCHARGED_TO_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 564\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_OCCURRENCE_DISCHARGED_TO_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_occurrence_discharged_to_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1,"pctViolatedRows":0.2,"numDenominatorRows":5,"executionTime":"0.035316 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\nstandardConceptFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.VISIT_SOURCE_VALUE\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.VISIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.VISIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the VISIT_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_visit_occurrence_visit_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035441 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleValueLow = '20000101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n            WHERE CAST(cdmTable.CDM_RELEASE_DATE AS DATE) < CAST('20000101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n    WHERE CDM_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE table less than '20000101'.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032673 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleValueLow = '20000101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n            WHERE CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE) < CAST('20000101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n    WHERE SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table less than '20000101'.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.035014 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            WHERE CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE CONDITION_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table less than '19500101'.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.032541 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            WHERE CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE CONDITION_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table less than '19500101'.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.036601 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_OCCURRENCE_COUNT\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_OCCURRENCE_COUNT' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n            WHERE cdmTable.CONDITION_OCCURRENCE_COUNT < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE CONDITION_OCCURRENCE_COUNT IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_OCCURRENCE_COUNT field of the CONDITION_ERA table less than 1.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_OCCURRENCE_COUNT","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_era_condition_occurrence_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038779 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038345 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.039150 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038525 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030629 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            WHERE CAST(cdmTable.DEATH_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n    WHERE DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH table less than '19500101'.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031494 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n            WHERE CAST(cdmTable.DEATH_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n    WHERE DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH table less than '19500101'.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.031760 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029818 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032374 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028719 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031485 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n            WHERE cdmTable.QUANTITY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the DEVICE_EXPOSURE table less than 1.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.QUANTITY is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033566 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            WHERE CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA table less than '19500101'.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031928 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            WHERE CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA table less than '19500101'.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032305 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\nplausibleValueLow = 0\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_VALUE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n            WHERE cdmTable.DOSE_VALUE < 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE DOSE_VALUE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_VALUE field of the DOSE_ERA table less than 0.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036353 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            WHERE CAST(cdmTable.DRUG_ERA_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE DRUG_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_END_DATE field of the DRUG_ERA table less than '19500101'.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036470 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            WHERE CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE DRUG_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_START_DATE field of the DRUG_ERA table less than '19500101'.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.035101 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_EXPOSURE_COUNT\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_EXPOSURE_COUNT' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            WHERE cdmTable.DRUG_EXPOSURE_COUNT < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE DRUG_EXPOSURE_COUNT IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_COUNT field of the DRUG_ERA table less than 1.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_EXPOSURE_COUNT","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_era_drug_exposure_count","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.034610 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = GAP_DAYS\nplausibleValueLow = 0\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.GAP_DAYS' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n            WHERE cdmTable.GAP_DAYS < 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE GAP_DAYS IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the GAP_DAYS field of the DRUG_ERA table less than 0.","cdmTableName":"DRUG_ERA","cdmFieldName":"GAP_DAYS","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_era_gap_days","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039989 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DAYS_SUPPLY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DAYS_SUPPLY' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE cdmTable.DAYS_SUPPLY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE DAYS_SUPPLY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAYS_SUPPLY field of the DRUG_EXPOSURE table less than 1.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DAYS_SUPPLY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_days_supply","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.035738 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE DRUG_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table less than '19500101'.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039221 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE DRUG_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table less than '19500101'.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039352 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE DRUG_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table less than '19500101'.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039098 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE DRUG_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table less than '19500101'.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":3584,"pctViolatedRows":0.1375,"numDenominatorRows":26065,"executionTime":"0.043187 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = QUANTITY\nplausibleValueLow = 0.0000001\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE cdmTable.QUANTITY < 0.0000001\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the DRUG_EXPOSURE table less than 0.0000001.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_quantity","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042357 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = REFILLS\nplausibleValueLow = 0\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.REFILLS' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE cdmTable.REFILLS < 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE REFILLS IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the REFILLS field of the DRUG_EXPOSURE table less than 0.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"REFILLS","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_refills","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.REFILLS is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036587 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.VERBATIM_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE VERBATIM_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table less than '19500101'.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030182 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032865 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043724 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035923 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.180744 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            WHERE CAST(cdmTable.MEASUREMENT_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    WHERE MEASUREMENT_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MEASUREMENT_DATE field of the MEASUREMENT table less than '19500101'.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":419437,"executionTime":"0.213224 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n            WHERE CAST(cdmTable.MEASUREMENT_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    WHERE MEASUREMENT_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MEASUREMENT_DATETIME field of the MEASUREMENT table less than '19500101'.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032869 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            WHERE CAST(cdmTable.NOTE_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    WHERE NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE table less than '19500101'.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032535 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n            WHERE CAST(cdmTable.NOTE_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    WHERE NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE table less than '19500101'.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034339 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NLP_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE_NLP cdmTable\n            WHERE CAST(cdmTable.NLP_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE_NLP cdmTable\n    WHERE NLP_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NLP_DATETIME field of the NOTE_NLP table less than '19500101'.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.274025 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    WHERE OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION table less than '19500101'.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.285295 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    WHERE OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION table less than '19500101'.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031729 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table less than '19500101'.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":19,"pctViolatedRows":0.019,"numDenominatorRows":999,"executionTime":"0.032303 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table less than '19500101'.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_period_observation_period_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033046 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            WHERE CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table less than '19500101'.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033653 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n            WHERE CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table less than '19500101'.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033334 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\nplausibleValueLow = '18500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.BIRTH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            WHERE CAST(cdmTable.BIRTH_DATETIME AS DATE) < CAST('18500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n    WHERE BIRTH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the BIRTH_DATETIME field of the PERSON table less than '18500101'.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_birth_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.BIRTH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036596 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.DAY_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            WHERE cdmTable.DAY_OF_BIRTH < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n    WHERE DAY_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAY_OF_BIRTH field of the PERSON table less than 1.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031478 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.MONTH_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            WHERE cdmTable.MONTH_OF_BIRTH < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n    WHERE MONTH_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MONTH_OF_BIRTH field of the PERSON table less than 1.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031825 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\nplausibleValueLow = 1850\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PERSON cdmTable\n            WHERE cdmTable.YEAR_OF_BIRTH < 1850\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PERSON cdmTable\n    WHERE YEAR_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the YEAR_OF_BIRTH field of the PERSON table less than 1850.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.035246 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.PROCEDURE_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE PROCEDURE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table less than '19500101'.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.036532 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.PROCEDURE_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE PROCEDURE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table less than '19500101'.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.242476 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.PROCEDURE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE PROCEDURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE table less than '19500101'.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.033650 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE PROCEDURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE table less than '19500101'.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":10074,"pctViolatedRows":1,"numDenominatorRows":10074,"executionTime":"0.036935 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = QUANTITY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n            WHERE cdmTable.QUANTITY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the PROCEDURE_OCCURRENCE table less than 1.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_procedure_occurrence_quantity","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039061 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            WHERE cdmTable.QUANTITY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the SPECIMEN table less than 1.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.QUANTITY is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.041569 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            WHERE CAST(cdmTable.SPECIMEN_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    WHERE SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN table less than '19500101'.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.038694 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n            WHERE CAST(cdmTable.SPECIMEN_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    WHERE SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN table less than '19500101'.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.037445 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033665 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032480 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032511 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031080 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032578 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.050387 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031184 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033937 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CDM_SOURCE cdmTable\n      \t    WHERE cast(cdmTable.CDM_RELEASE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n  \tWHERE CDM_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031719 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CDM_SOURCE cdmTable\n      \t    WHERE cast(cdmTable.SOURCE_RELEASE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n  \tWHERE SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.035931 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_ERA cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_ERA_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n  \tWHERE CONDITION_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.036839 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_ERA cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_ERA_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n  \tWHERE CONDITION_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.052382 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044842 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.045443 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040755 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.033851 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEATH cdmTable\n      \t    WHERE cast(cdmTable.DEATH_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n  \tWHERE DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030617 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEATH cdmTable\n      \t    WHERE cast(cdmTable.DEATH_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n  \tWHERE DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.032454 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033782 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030366 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030260 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029932 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DOSE_ERA cdmTable\n      \t    WHERE cast(cdmTable.DOSE_ERA_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n  \tWHERE DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031102 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DOSE_ERA cdmTable\n      \t    WHERE cast(cdmTable.DOSE_ERA_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n  \tWHERE DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.032477 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_ERA cdmTable\n      \t    WHERE cast(cdmTable.DRUG_ERA_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n  \tWHERE DRUG_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_END_DATE field of the DRUG_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036195 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_ERA cdmTable\n      \t    WHERE cast(cdmTable.DRUG_ERA_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n  \tWHERE DRUG_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_START_DATE field of the DRUG_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.039861 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DAYS_SUPPLY\nplausibleValueHigh = 365\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.DAYS_SUPPLY' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cdmTable.DAYS_SUPPLY > 365\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE DAYS_SUPPLY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAYS_SUPPLY field of the DRUG_EXPOSURE table greater than 365.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DAYS_SUPPLY","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_days_supply","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.043577 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DRUG_EXPOSURE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE DRUG_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.043160 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DRUG_EXPOSURE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE DRUG_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.042598 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DRUG_EXPOSURE_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE DRUG_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.041960 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DRUG_EXPOSURE_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE DRUG_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":163,"pctViolatedRows":0.0063,"numDenominatorRows":26065,"executionTime":"0.045234 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = QUANTITY\nplausibleValueHigh = 1095\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.QUANTITY' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cdmTable.QUANTITY > 1095\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the DRUG_EXPOSURE table greater than 1095.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040999 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = REFILLS\nplausibleValueHigh = 24\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.REFILLS' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cdmTable.REFILLS > 24\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE REFILLS IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the REFILLS field of the DRUG_EXPOSURE table greater than 24.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"REFILLS","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_refills","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.REFILLS is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040704 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.VERBATIM_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n  \tWHERE VERBATIM_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032439 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n  \tWHERE EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036043 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n  \tWHERE EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030341 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n  \tWHERE EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031205 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n  \tWHERE EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.271489 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.MEASUREMENT cdmTable\n      \t    WHERE cast(cdmTable.MEASUREMENT_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n  \tWHERE MEASUREMENT_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MEASUREMENT_DATE field of the MEASUREMENT table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":419437,"executionTime":"0.289933 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.MEASUREMENT cdmTable\n      \t    WHERE cast(cdmTable.MEASUREMENT_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n  \tWHERE MEASUREMENT_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MEASUREMENT_DATETIME field of the MEASUREMENT table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.036072 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.NOTE cdmTable\n      \t    WHERE cast(cdmTable.NOTE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n  \tWHERE NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.034326 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.NOTE cdmTable\n      \t    WHERE cast(cdmTable.NOTE_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n  \tWHERE NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033417 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE_NLP.NLP_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.NOTE_NLP cdmTable\n      \t    WHERE cast(cdmTable.NLP_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE_NLP cdmTable\n  \tWHERE NLP_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NLP_DATETIME field of the NOTE_NLP table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.383289 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n  \tWHERE OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.362415 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n  \tWHERE OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033605 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_PERIOD_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n  \tWHERE OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033782 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_PERIOD_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n  \tWHERE OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031317 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.PAYER_PLAN_PERIOD_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n  \tWHERE PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032996 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.PAYER_PLAN_PERIOD_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n  \tWHERE PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034449 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.BIRTH_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PERSON cdmTable\n      \t    WHERE cast(cdmTable.BIRTH_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n  \tWHERE BIRTH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the BIRTH_DATETIME field of the PERSON table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_birth_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.BIRTH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033834 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\nplausibleValueHigh = 31\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PERSON cdmTable\n      \t    WHERE cdmTable.DAY_OF_BIRTH > 31\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n  \tWHERE DAY_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAY_OF_BIRTH field of the PERSON table greater than 31.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032212 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\nplausibleValueHigh = 12\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PERSON cdmTable\n      \t    WHERE cdmTable.MONTH_OF_BIRTH > 12\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n  \tWHERE MONTH_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MONTH_OF_BIRTH field of the PERSON table greater than 12.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035386 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\nplausibleValueHigh = YEAR(GETDATE())+1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PERSON cdmTable\n      \t    WHERE cdmTable.YEAR_OF_BIRTH > EXTRACT(YEAR FROM CURRENT_DATE)+1\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PERSON cdmTable\n  \tWHERE YEAR_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the YEAR_OF_BIRTH field of the PERSON table greater than YEAR(GETDATE())+1.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034253 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.PROCEDURE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n  \tWHERE PROCEDURE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034637 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.PROCEDURE_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n  \tWHERE PROCEDURE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.034137 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.PROCEDURE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n  \tWHERE PROCEDURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.035976 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.PROCEDURE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n  \tWHERE PROCEDURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.048354 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.SPECIMEN cdmTable\n      \t    WHERE cast(cdmTable.SPECIMEN_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n  \tWHERE SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.050663 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.SPECIMEN cdmTable\n      \t    WHERE cast(cdmTable.SPECIMEN_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n  \tWHERE SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033637 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034046 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031986 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030632 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032102 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033152 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032555 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033525 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033793 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleTemporalAfterTableName = CDM_SOURCE\nplausibleTemporalAfterFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CDM_SOURCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.SOURCE_RELEASE_DATE AS DATE)\n\t\t > CAST(cdmTable.CDM_RELEASE_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE that occurs prior to the date in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.032443 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\nplausibleTemporalAfterTableName = CONDITION_ERA\nplausibleTemporalAfterFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.CONDITION_ERA_START_DATE AS DATE)\n\t\t > CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA that occurs prior to the date in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.033969 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_ERA cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.037125 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\nplausibleTemporalAfterFieldName = CONDITION_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.CONDITION_START_DATE AS DATE)\n\t\t > CAST(cdmTable.CONDITION_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.045292 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\nplausibleTemporalAfterFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.CONDITION_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.CONDITION_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.052992 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.CONDITION_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.048530 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.CONDITION_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.035066 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEATH cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEATH_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034872 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEATH cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEATH_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032783 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033038 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032761 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032573 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032857 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DOSE_ERA_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033531 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DOSE_ERA cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DOSE_ERA_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.035810 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\nplausibleTemporalAfterTableName = DRUG_ERA\nplausibleTemporalAfterFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DRUG_ERA_START_DATE AS DATE)\n\t\t > CAST(cdmTable.DRUG_ERA_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_END_DATE field of the DRUG_ERA that occurs prior to the date in the DRUG_ERA_START_DATE field of the DRUG_ERA table.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036632 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_ERA cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DRUG_ERA_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_START_DATE field of the DRUG_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":192,"pctViolatedRows":0.0074,"numDenominatorRows":26065,"executionTime":"0.043720 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":192,"pctViolatedRows":0.0074,"numDenominatorRows":26065,"executionTime":"0.045597 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.050831 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.052479 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.036828 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\nplausibleTemporalAfterTableName = DRUG_EXPOSURE\nplausibleTemporalAfterFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VERBATIM_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE that occurs prior to the date in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035763 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\nplausibleTemporalAfterTableName = DRUG_STRENGTH\nplausibleTemporalAfterFieldName = VALID_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.VALID_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VALID_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VALID_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_END_DATE field of the DRUG_STRENGTH that occurs prior to the date in the VALID_START_DATE field of the DRUG_STRENGTH table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_strength_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035217 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleTemporalAfterTableName = EPISODE\nplausibleTemporalAfterFieldName = EPISODE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.EPISODE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.EPISODE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE that occurs prior to the date in the EPISODE_START_DATE field of the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032212 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleTemporalAfterTableName = EPISODE\nplausibleTemporalAfterFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.EPISODE_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.EPISODE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE that occurs prior to the date in the EPISODE_START_DATETIME field of the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032747 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.EPISODE_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031249 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.EPISODE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.EPISODE_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.524096 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.MEASUREMENT cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.MEASUREMENT_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MEASUREMENT_DATE field of the MEASUREMENT that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.039344 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.NOTE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.NOTE_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.034844 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.NOTE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.NOTE_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.847642 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"1.461514 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033252 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleTemporalAfterTableName = OBSERVATION_PERIOD\nplausibleTemporalAfterFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE)\n\t\t > CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD that occurs prior to the date in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":19,"pctViolatedRows":0.019,"numDenominatorRows":999,"executionTime":"0.032426 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_period_observation_period_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031751 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleTemporalAfterTableName = PAYER_PLAN_PERIOD\nplausibleTemporalAfterFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE)\n\t\t > CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD that occurs prior to the date in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032553 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.040576 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.PROCEDURE_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.039939 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.PROCEDURE_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.032718 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\nplausibleTemporalAfterTableName = PROCEDURE_OCCURRENCE\nplausibleTemporalAfterFieldName = PROCEDURE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.PROCEDURE_DATE AS DATE)\n\t\t > CAST(cdmTable.PROCEDURE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.034967 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\nplausibleTemporalAfterTableName = PROCEDURE_OCCURRENCE\nplausibleTemporalAfterFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.PROCEDURE_DATETIME AS DATE)\n\t\t > CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE that occurs prior to the date in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.032022 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\nplausibleTemporalAfterTableName = SOURCE_TO_CONCEPT_MAP\nplausibleTemporalAfterFieldName = VALID_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.VALID_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VALID_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VALID_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_END_DATE field of the SOURCE_TO_CONCEPT_MAP that occurs prior to the date in the VALID_START_DATE field of the SOURCE_TO_CONCEPT_MAP table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_source_to_concept_map_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.065481 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.SPECIMEN_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.067631 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.SPECIMEN cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.SPECIMEN_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034482 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleTemporalAfterTableName = VISIT_DETAIL\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035607 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleTemporalAfterTableName = VISIT_DETAIL\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034385 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032222 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033152 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\nplausibleTemporalAfterFieldName = VISIT_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VISIT_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATE field of the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033625 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\nplausibleTemporalAfterFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.VISIT_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033169 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033302 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_etl_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1751,"executionTime":"0.033806 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table that occurs after death.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8315,"executionTime":"0.038114 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8315,"executionTime":"0.040587 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8315,"executionTime":"0.038901 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8315,"executionTime":"0.040193 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.036980 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.031702 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.039262 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.031864 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031868 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":6,"pctViolatedRows":0.0058,"numDenominatorRows":1042,"executionTime":"0.033371 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DRUG_ERA_START_DATE field of the DRUG_ERA table that occurs after death.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5081,"executionTime":"0.039430 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5081,"executionTime":"0.038356 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":9,"pctViolatedRows":0.0018,"numDenominatorRows":5081,"executionTime":"0.038993 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":9,"pctViolatedRows":0.0018,"numDenominatorRows":5081,"executionTime":"0.039883 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5081,"executionTime":"0.040299 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VERBATIM_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031385 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031748 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038310 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"1.536576 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":1,"pctViolatedRows":0.007,"numDenominatorRows":143,"executionTime":"0.031316 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":1,"pctViolatedRows":0.007,"numDenominatorRows":143,"executionTime":"0.035079 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.036132 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.PROCEDURE_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.035428 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.PROCEDURE_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.036064 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.PROCEDURE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.036676 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.032336 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.031301 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.029611 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.032239 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.032988 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":300,"executionTime":"0.032664 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.032370 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":300,"executionTime":"0.034068 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_etl_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.049025 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.CONDITION_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.CONDITION_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":41,"pctViolatedRows":0.3106,"numDenominatorRows":132,"executionTime":"0.033135 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.DEVICE_EXPOSURE_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_device_exposure_device_exposure_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":20,"pctViolatedRows":0.0008,"numDenominatorRows":26065,"executionTime":"0.049105 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.DRUG_EXPOSURE_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":267521,"pctViolatedRows":0.5174,"numDenominatorRows":517055,"executionTime":"0.377940 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.MEASUREMENT_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.MEASUREMENT_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_measurement_measurement_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.034248 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.NOTE_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.NOTE_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":47082,"executionTime":"0.274145 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.OBSERVATION_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.OBSERVATION_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":1,"pctViolatedRows":0.0002,"numDenominatorRows":5540,"executionTime":"0.038790 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.PROCEDURE_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.PROCEDURE_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030937 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.VISIT_DETAIL_END_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032114 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.VISIT_DETAIL_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.035959 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table that occurs prior to birth.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.035715 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table that occurs prior to birth.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037804 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_END_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036990 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.CONDITION_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26464,"executionTime":"0.051546 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039387 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.CONDITION_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031946 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEATH_DATE IS NOT NULL AND \n            CAST(cdmTable.DEATH_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n    WHERE cdmTable.DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEATH_DATE field of the DEATH table that occurs prior to birth.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033843 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEATH cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEATH_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEATH_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEATH cdmTable\n    WHERE cdmTable.DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEATH_DATETIME field of the DEATH table that occurs prior to birth.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.032227 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031707 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031103 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032945 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032154 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs prior to birth.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031518 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs prior to birth.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.038505 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DRUG_ERA_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_ERA_END_DATE field of the DRUG_ERA table that occurs prior to birth.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.039720 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_ERA_START_DATE field of the DRUG_ERA table that occurs prior to birth.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.054008 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.053154 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table that occurs prior to birth.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.049788 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26065,"executionTime":"0.054124 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table that occurs prior to birth.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037357 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL AND \n            CAST(cdmTable.VERBATIM_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table that occurs prior to birth.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034684 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.EPISODE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037059 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.EPISODE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032845 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL AND \n            CAST(cdmTable.EPISODE_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032440 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.EPISODE_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":735767,"executionTime":"0.569111 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL AND \n            CAST(cdmTable.MEASUREMENT_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the MEASUREMENT_DATE field of the MEASUREMENT table that occurs prior to birth.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":419437,"executionTime":"0.418570 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL AND \n            CAST(cdmTable.MEASUREMENT_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the MEASUREMENT_DATETIME field of the MEASUREMENT table that occurs prior to birth.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.034616 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.NOTE_DATE IS NOT NULL AND \n            CAST(cdmTable.NOTE_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    WHERE cdmTable.NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs prior to birth.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3869,"executionTime":"0.032883 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.NOTE_DATETIME IS NOT NULL AND \n            CAST(cdmTable.NOTE_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    WHERE cdmTable.NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATETIME field of the NOTE table that occurs prior to birth.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1161982,"executionTime":"0.867838 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    WHERE cdmTable.OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs prior to birth.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.222495 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs prior to birth.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033298 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":19,"pctViolatedRows":0.019,"numDenominatorRows":999,"executionTime":"0.032121 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_period_observation_period_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030869 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL AND \n            CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030743 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL AND \n            CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.039066 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PROCEDURE_DATE IS NOT NULL AND \n            CAST(cdmTable.PROCEDURE_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":10074,"executionTime":"0.054770 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL AND \n            CAST(cdmTable.PROCEDURE_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.037278 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PROCEDURE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.PROCEDURE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.039862 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PROCEDURE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs prior to birth.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.074050 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.SPECIMEN_DATE IS NOT NULL AND \n            CAST(cdmTable.SPECIMEN_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    WHERE cdmTable.SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs prior to birth.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.097546 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL AND \n            CAST(cdmTable.SPECIMEN_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATETIME field of the SPECIMEN table that occurs prior to birth.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031307 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032154 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031297 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032511 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032282 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_END_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034691 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035498 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032355 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1751,"executionTime":"0.036421 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_ERA_END_DATE field of the CONDITION_ERA table that occurs after death.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_era_condition_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1751,"executionTime":"0.031166 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA table that occurs after death.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037545 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035995 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8315,"executionTime":"0.039966 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038615 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":12,"executionTime":"0.035336 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034670 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.034868 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031590 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031838 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031195 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":6,"pctViolatedRows":0.0058,"numDenominatorRows":1042,"executionTime":"0.035548 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_ERA_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_ERA_END_DATE field of the DRUG_ERA table that occurs after death.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_era_drug_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":6,"pctViolatedRows":0.0058,"numDenominatorRows":1042,"executionTime":"0.033177 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_ERA_START_DATE field of the DRUG_ERA table that occurs after death.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5081,"executionTime":"0.040397 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_exposure_drug_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5081,"executionTime":"0.041902 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_END_DATETIME field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_exposure_drug_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":9,"pctViolatedRows":0.0018,"numDenominatorRows":5081,"executionTime":"0.040268 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":9,"pctViolatedRows":0.0018,"numDenominatorRows":5081,"executionTime":"0.040390 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037167 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = VERBATIM_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.VERBATIM_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VERBATIM_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VERBATIM_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VERBATIM_END_DATE field of the DRUG_EXPOSURE table that occurs after death.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"VERBATIM_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_drug_exposure_verbatim_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_EXPOSURE.VERBATIM_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033571 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032720 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041189 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034857 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":42,"pctViolatedRows":0.0002,"numDenominatorRows":273171,"executionTime":"0.283488 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL \n            AND CAST(cdmTable.MEASUREMENT_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.MEASUREMENT_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the MEASUREMENT_DATE field of the MEASUREMENT table that occurs after death.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_measurement_measurement_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":16,"pctViolatedRows":0.0001,"numDenominatorRows":163172,"executionTime":"0.248236 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'MEASUREMENT.MEASUREMENT_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.MEASUREMENT cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL \n            AND CAST(cdmTable.MEASUREMENT_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.MEASUREMENT cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.MEASUREMENT_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the MEASUREMENT_DATETIME field of the MEASUREMENT table that occurs after death.","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_measurement_measurement_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":755,"executionTime":"0.035819 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.NOTE_DATE IS NOT NULL \n            AND CAST(cdmTable.NOTE_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs after death.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":755,"executionTime":"0.035508 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.NOTE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.NOTE_DATETIME IS NOT NULL \n            AND CAST(cdmTable.NOTE_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.NOTE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATETIME field of the NOTE table that occurs after death.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":48,"pctViolatedRows":0.0001,"numDenominatorRows":369246,"executionTime":"0.379167 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs after death.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.229259 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs after death.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":1,"pctViolatedRows":0.007,"numDenominatorRows":143,"executionTime":"0.032646 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":1,"pctViolatedRows":0.007,"numDenominatorRows":143,"executionTime":"0.031333 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030463 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034594 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.036452 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PROCEDURE_DATE IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PROCEDURE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0008,"numDenominatorRows":2590,"executionTime":"0.037446 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0017,"numDenominatorRows":1146,"executionTime":"0.033316 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PROCEDURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PROCEDURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_END_DATE field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_procedure_occurrence_procedure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0017,"numDenominatorRows":1146,"executionTime":"0.035985 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PROCEDURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PROCEDURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PROCEDURE_END_DATETIME field of the PROCEDURE_OCCURRENCE table that occurs after death.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_procedure_occurrence_procedure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":14217,"executionTime":"0.045943 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.SPECIMEN_DATE IS NOT NULL \n            AND CAST(cdmTable.SPECIMEN_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs after death.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":14217,"executionTime":"0.049017 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SPECIMEN cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL \n            AND CAST(cdmTable.SPECIMEN_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SPECIMEN cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATETIME field of the SPECIMEN table that occurs after death.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.030959 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.028307 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.031991 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.030762 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.032010 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031084 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.031088 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038162 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_etl_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_etl_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032774 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nSOURCE_RELEASE_DATE is the start date and SOURCE_RELEASE_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleStartBeforeEndFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n            AND cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n            AND CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE) > CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CDM_SOURCE cdmTable\n    WHERE cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n        AND cdmTable.SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE that occurs after the date in the SOURCE_RELEASE_DATE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4190,"executionTime":"0.032783 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nCONDITION_ERA_START_DATE is the start date and CONDITION_ERA_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_ERA\ncdmFieldName = CONDITION_ERA_START_DATE\nplausibleStartBeforeEndFieldName = CONDITION_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_ERA.CONDITION_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_ERA cdmTable\n        WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL \n            AND cdmTable.CONDITION_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_ERA_START_DATE AS DATE) > CAST(cdmTable.CONDITION_ERA_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_ERA cdmTable\n    WHERE cdmTable.CONDITION_ERA_START_DATE IS NOT NULL \n        AND cdmTable.CONDITION_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_ERA_START_DATE field of the CONDITION_ERA that occurs after the date in the CONDITION_ERA_END_DATE.","cdmTableName":"CONDITION_ERA","cdmFieldName":"CONDITION_ERA_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_condition_era_condition_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036407 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nCONDITION_START_DATE is the start date and CONDITION_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleStartBeforeEndFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n            AND cdmTable.CONDITION_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > CAST(cdmTable.CONDITION_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n        AND cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038453 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nCONDITION_START_DATETIME is the start date and CONDITION_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleStartBeforeEndFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n            AND cdmTable.CONDITION_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > CAST(cdmTable.CONDITION_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n        AND cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATETIME.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_condition_occurrence_condition_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.030536 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDEVICE_EXPOSURE_START_DATE is the start date and DEVICE_EXPOSURE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleStartBeforeEndFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n            AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n        AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032104 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDEVICE_EXPOSURE_START_DATETIME is the start date and DEVICE_EXPOSURE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleStartBeforeEndFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n            AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n        AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATETIME.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032861 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDOSE_ERA_START_DATE is the start date and DOSE_ERA_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleStartBeforeEndFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n            AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > CAST(cdmTable.DOSE_ERA_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n        AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA that occurs after the date in the DOSE_ERA_END_DATE.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6793,"executionTime":"0.036773 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDRUG_ERA_START_DATE is the start date and DRUG_ERA_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_ERA\ncdmFieldName = DRUG_ERA_START_DATE\nplausibleStartBeforeEndFieldName = DRUG_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_ERA.DRUG_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_ERA cdmTable\n        WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL \n            AND cdmTable.DRUG_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_ERA_START_DATE AS DATE) > CAST(cdmTable.DRUG_ERA_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_ERA cdmTable\n    WHERE cdmTable.DRUG_ERA_START_DATE IS NOT NULL \n        AND cdmTable.DRUG_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_ERA_START_DATE field of the DRUG_ERA that occurs after the date in the DRUG_ERA_END_DATE.","cdmTableName":"DRUG_ERA","cdmFieldName":"DRUG_ERA_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_drug_era_drug_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":192,"pctViolatedRows":0.0074,"numDenominatorRows":26065,"executionTime":"0.039600 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDRUG_EXPOSURE_START_DATE is the start date and DRUG_EXPOSURE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATE\nplausibleStartBeforeEndFieldName = DRUG_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL \n            AND cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_START_DATE AS DATE) > CAST(cdmTable.DRUG_EXPOSURE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATE IS NOT NULL \n        AND cdmTable.DRUG_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATE field of the DRUG_EXPOSURE that occurs after the date in the DRUG_EXPOSURE_END_DATE.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_drug_exposure_drug_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":192,"pctViolatedRows":0.0074,"numDenominatorRows":26065,"executionTime":"0.040669 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDRUG_EXPOSURE_START_DATETIME is the start date and DRUG_EXPOSURE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = DRUG_EXPOSURE_START_DATETIME\nplausibleStartBeforeEndFieldName = DRUG_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_EXPOSURE.DRUG_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n        WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL \n            AND cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DRUG_EXPOSURE_START_DATETIME AS DATE) > CAST(cdmTable.DRUG_EXPOSURE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_EXPOSURE cdmTable\n    WHERE cdmTable.DRUG_EXPOSURE_START_DATETIME IS NOT NULL \n        AND cdmTable.DRUG_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DRUG_EXPOSURE_START_DATETIME field of the DRUG_EXPOSURE that occurs after the date in the DRUG_EXPOSURE_END_DATETIME.","cdmTableName":"DRUG_EXPOSURE","cdmFieldName":"DRUG_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_drug_exposure_drug_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032932 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVALID_START_DATE is the start date and VALID_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\nplausibleStartBeforeEndFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NOT NULL \n            AND cdmTable.VALID_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VALID_START_DATE AS DATE) > CAST(cdmTable.VALID_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.DRUG_STRENGTH cdmTable\n    WHERE cdmTable.VALID_START_DATE IS NOT NULL \n        AND cdmTable.VALID_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_START_DATE field of the DRUG_STRENGTH that occurs after the date in the VALID_END_DATE.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_drug_strength_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031773 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nEPISODE_START_DATE is the start date and EPISODE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleStartBeforeEndFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n            AND cdmTable.EPISODE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATE AS DATE) > CAST(cdmTable.EPISODE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n        AND cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE that occurs after the date in the EPISODE_END_DATE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032736 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nEPISODE_START_DATETIME is the start date and EPISODE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleStartBeforeEndFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n            AND cdmTable.EPISODE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > CAST(cdmTable.EPISODE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n        AND cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE that occurs after the date in the EPISODE_END_DATETIME.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030756 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nOBSERVATION_PERIOD_START_DATE is the start date and OBSERVATION_PERIOD_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleStartBeforeEndFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n            AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n        AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD that occurs after the date in the OBSERVATION_PERIOD_END_DATE.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030875 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nPAYER_PLAN_PERIOD_START_DATE is the start date and PAYER_PLAN_PERIOD_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleStartBeforeEndFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n            AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n        AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD that occurs after the date in the PAYER_PLAN_PERIOD_END_DATE.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.034023 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nPROCEDURE_DATE is the start date and PROCEDURE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATE\nplausibleStartBeforeEndFieldName = PROCEDURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_DATE IS NOT NULL \n            AND cdmTable.PROCEDURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_DATE AS DATE) > CAST(cdmTable.PROCEDURE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_DATE IS NOT NULL \n        AND cdmTable.PROCEDURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATE field of the PROCEDURE_OCCURRENCE that occurs after the date in the PROCEDURE_END_DATE.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_procedure_occurrence_procedure_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5540,"executionTime":"0.033657 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nPROCEDURE_DATETIME is the start date and PROCEDURE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_DATETIME\nplausibleStartBeforeEndFieldName = PROCEDURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROCEDURE_OCCURRENCE.PROCEDURE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n        WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL \n            AND cdmTable.PROCEDURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.PROCEDURE_DATETIME AS DATE) > CAST(cdmTable.PROCEDURE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n    WHERE cdmTable.PROCEDURE_DATETIME IS NOT NULL \n        AND cdmTable.PROCEDURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PROCEDURE_DATETIME field of the PROCEDURE_OCCURRENCE that occurs after the date in the PROCEDURE_END_DATETIME.","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_procedure_occurrence_procedure_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3051,"executionTime":"0.032941 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVALID_START_DATE is the start date and VALID_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\nplausibleStartBeforeEndFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NOT NULL \n            AND cdmTable.VALID_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VALID_START_DATE AS DATE) > CAST(cdmTable.VALID_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    WHERE cdmTable.VALID_START_DATE IS NOT NULL \n        AND cdmTable.VALID_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_START_DATE field of the SOURCE_TO_CONCEPT_MAP that occurs after the date in the VALID_END_DATE.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_source_to_concept_map_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035854 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_DETAIL_START_DATE is the start date and VISIT_DETAIL_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleStartBeforeEndFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n            AND cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n        AND cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL that occurs after the date in the VISIT_DETAIL_END_DATE.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033206 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_DETAIL_START_DATETIME is the start date and VISIT_DETAIL_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleStartBeforeEndFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n            AND cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n        AND cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL that occurs after the date in the VISIT_DETAIL_END_DATETIME.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.039590 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_START_DATE is the start date and VISIT_END_DATE is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleStartBeforeEndFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n            AND cdmTable.VISIT_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATE AS DATE) > CAST(cdmTable.VISIT_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n        AND cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE that occurs after the date in the VISIT_END_DATE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030952 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_START_DATETIME is the start date and VISIT_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_etl_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleStartBeforeEndFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n            AND cdmTable.VISIT_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATETIME AS DATE) > CAST(cdmTable.VISIT_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_etl_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n        AND cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE that occurs after the date in the VISIT_END_DATETIME.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037059 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 26662\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 26662\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 26662\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 26662 (TESTICULAR HYPOFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"26662","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_26662","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=26662 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039932 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 26935\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 26935\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 26935\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 26935 (DISORDER OF ENDOCRINE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"26935","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_26935","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=26935 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.066084 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 30969\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 30969\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 30969\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 30969 (TESTICULAR HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"30969","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_30969","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=30969 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039657 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 73801\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 73801\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 73801\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 73801 (SCROTAL VARICES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"73801","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_73801","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=73801 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037935 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 74322\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 74322\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 74322\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 74322 (BENIGN NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"74322","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_74322","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=74322 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036528 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 78193\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 78193\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 78193\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 78193 (ORCHITIS AND EPIDIDYMITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"78193","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_78193","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=78193 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041383 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 79758\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 79758\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 79758\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 79758 (PRIMARY MALIGNANT NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"79758","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_79758","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=79758 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037659 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 141917\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 141917\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 141917\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 141917 (BALANITIS XEROTICA OBLITERANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"141917","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_141917","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=141917 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036560 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192367\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192367\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192367\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192367 (DYSPLASIA OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192367","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192367","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192367 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037137 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192676\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192676\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192676\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192676 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 1), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192676","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192676","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192676 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037029 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192683\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192683\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192683\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192683 (UTEROVAGINAL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192683","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192683","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192683 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037662 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192854\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192854\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192854\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192854 (INTRAMURAL LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192854","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192854","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192854 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036441 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192858\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192858\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192858\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192858 (OVARIAN HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192858","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192858","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192858 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039424 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193254\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193254\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193254\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193254 (DISORDER OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193254","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193254","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193254 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036669 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193261\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193261\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193261 (VAGINOSPASM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035585 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193262\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193262\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193262\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193262 (INFLAMMATORY DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193262","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193262","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193262 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042257 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193277\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193277\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193277\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193277 (DELIVERIES BY CESAREAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193277","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193277","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193277 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039051 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193437\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193437\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193437\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193437 (NEOPLASM OF UNCERTAIN BEHAVIOR OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193437","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193437","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045653 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193439\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193439\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193439\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193439 (BENIGN NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193439","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193439","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193439 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037575 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193522\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193522\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193522\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193522 (ACUTE PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193522","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193522","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193522 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035931 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193530\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193530\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193530\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193530 (FOLLICULAR CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193530","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193530","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193530 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034992 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193739\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193739\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193739\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193739 (OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193739","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193739","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193739 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036857 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193818\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193818\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193818\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193818 (CALCULUS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193818","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193818","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193818 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038883 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194092\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194092\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194092\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194092 (UTERINE PROLAPSE WITHOUT VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194092","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194092","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194092 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037030 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194286\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194286\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194286\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194286 (MALIGNANT NEOPLASM OF CORPUS UTERI, EXCLUDING ISTHMUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194286","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194286","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194286 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036245 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194412\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194412\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194412\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194412 (DYSPLASIA OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194412","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194412","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194412 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036964 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194420\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194420\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194420\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194420 (ENDOMETRIOSIS OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194420","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194420","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194420 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039617 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194611\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194611\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194611\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194611 (CARCINOMA IN SITU OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194611","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194611","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194611 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037647 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194696\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194696\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194696\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194696 (DYSMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194696","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194696","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194696 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036719 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194871\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194871\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194871\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194871 (TRICHOMONAL VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194871","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194871","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194871 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4,"executionTime":"0.037373 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194997\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194997\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194997\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194997 (PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194997","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194997","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035770 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195009\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195009\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195009\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195009 (LEUKOPLAKIA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195009","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195009","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195009 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035204 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195012\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195012\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195012\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195012 (INTERMENSTRUAL BLEEDING - IRREGULAR), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195012","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195012","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195012 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036633 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195197\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195197\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195197\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195197 (PRIMARY MALIGNANT NEOPLASM OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195197","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195197","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195197 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035591 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195316\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195316\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195316\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195316 (ATYPICAL ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195316","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195316","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195316 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036175 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195321\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195321\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195321\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195321 (POSTMENOPAUSAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195321","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195321","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195321 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.035302 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195483\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195483\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195483\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195483 (PRIMARY MALIGNANT NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195483","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195483","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034276 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195500\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195500\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195500\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195500 (BENIGN NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195500","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195500","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195500 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035047 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195501\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195501\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195501\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195501 (POLYCYSTIC OVARIES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195501","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195501","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195501 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038057 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195683\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195683\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195683\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195683 (OPEN WOUND OF PENIS WITHOUT COMPLICATION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195683","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195683","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195683 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032043 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195769\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195769\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195769\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195769 (SUBMUCOUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195769","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195769","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195769 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037908 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195770\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195770\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195770\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195770 (SUBSEROUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195770","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195770","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195770 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038030 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195793\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195793\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195793\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195793 (NEOPLASM OF UNCERTAIN BEHAVIOR OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195793","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195793","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.037715 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195867\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195867\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195867\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195867 (NONINFLAMMATORY DISORDER OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195867","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195867","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036860 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195873\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195873\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195873\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195873 (LEUKORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195873","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195873","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195873 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042577 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196048\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196048\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196048\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196048 (PRIMARY MALIGNANT NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196048","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196048","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196048 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039055 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196051\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196051\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196051\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196051 (OVERLAPPING MALIGNANT NEOPLASM OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196051","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196051","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196051 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037632 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196068\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196068\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196068\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196068 (CARCINOMA IN SITU OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196068","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196068","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196068 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037374 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196157\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196157\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196157\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196157 (INDURATIO PENIS PLASTICA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196157","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196157","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196157 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4,"executionTime":"0.033780 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196158\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196158\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196158\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196158 (DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196158","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196158","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034395 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196163\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196163\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196163\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196163 (CERVICITIS AND ENDOCERVICITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196163","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196163","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196163 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034851 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196165\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196165\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196165\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196165 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 2), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196165","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196165","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196165 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040524 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196168\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196168\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196168\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196168 (IRREGULAR PERIODS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196168","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196168","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196168 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.033612 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196359\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196359\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196359\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196359 (PRIMARY MALIGNANT NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196359","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196359","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040874 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196364\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196364\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196364\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196364 (BENIGN NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196364","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196364","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196364 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036928 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196473\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196473\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196473\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196473 (HYPERTROPHY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196473","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196473","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196473 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036308 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196734\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196734\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196734\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196734 (DISORDER OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196734","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196734","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196734 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4,"executionTime":"0.035027 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196738\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196738\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196738\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196738 (DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196738","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196738","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039534 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196758\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196758\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196758\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196758 (TUMOR OF BODY OF UTERUS AFFECTING PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196758","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196758","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196758 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040231 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197032\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197032\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197032\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197032 (HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197032","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197032","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197032 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036261 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197039\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197039\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197039\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197039 (MALE GENITAL ORGAN VASCULAR DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197039","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197039","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197039 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8,"executionTime":"0.049259 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197044\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197044\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197044\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197044 (FEMALE INFERTILITY ASSOCIATED WITH ANOVULATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197044","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197044","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.042673 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197236\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197236\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197236\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197236 (UTERINE LEIOMYOMA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197236","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197236","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3,"executionTime":"0.046816 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197237\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197237\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197237\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197237 (BENIGN NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197237","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197237","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036386 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197507\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197507\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197507\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197507 (PRIMARY MALIGNANT NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197507","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197507","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197507 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037031 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197601\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197601\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197601\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197601 (SPERMATOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197601","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197601","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197601 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":15,"executionTime":"0.047428 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197605\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197605\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197605\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197605 (INFLAMMATORY DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197605","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197605","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036382 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197606\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197606\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197606\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197606 (FEMALE INFERTILITY OF TUBAL ORIGIN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197606","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197606","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197606 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":26,"executionTime":"0.036215 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197607\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197607\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197607\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197607 (EXCESSIVE AND FREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197607","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197607","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035953 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197609\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197609\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197609\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197609 (CERVICAL, VAGINAL AND VULVAL INFLAMMATORY DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197609","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197609","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197609 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036334 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197610\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197610\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197610\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197610 (CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197610","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197610","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035537 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197938\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197938\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197938\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197938 (UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197938","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197938","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197938 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035278 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198082\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198082\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198082\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198082 (OVERLAPPING MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198082","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198082","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198082 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041456 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198108\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198108\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198108\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198108 (BENIGN NEOPLASM OF FALLOPIAN TUBES AND UTERINE LIGAMENTS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198108","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198108","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198108 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036774 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198194\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198194\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198194\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198194 (FEMALE GENITAL ORGAN SYMPTOMS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198194","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198194","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198194 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043536 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198197\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198197\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198197\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198197 (MALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198197","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198197","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198197 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034486 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198198\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198198\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198198\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198198 (POLYP OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198198","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198198","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198198 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036080 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198202\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198202\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198202\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198202 (CYSTOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198202","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198202","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198202 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035164 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198212\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198212\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198212\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198212 (SPOTTING PER VAGINA IN PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198212","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198212","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198212 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034632 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198363\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198363\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198363\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198363 (CANDIDIASIS OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198363","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198363","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198363 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039198 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198471\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198471\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198471\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198471 (COMPLEX ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198471","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198471","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198471 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038519 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198483\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198483\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198483\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198483 (STRICTURE OR ATRESIA OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198483","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198483","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198483 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":18,"executionTime":"0.038763 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198803\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198803\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198803\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198803 (BENIGN PROSTATIC HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198803","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198803","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038082 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198806\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198806\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198806\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198806 (ABSCESS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198806","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198806","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198806 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036437 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199067\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199067\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199067\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199067 (FEMALE PELVIC INFLAMMATORY DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199067","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199067","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199067 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036405 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199078 (VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037034 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199752\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199752\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199752\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199752 (SECONDARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199752","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199752","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199752 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.041920 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199764\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199764\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199764\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199764 (BENIGN NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199764","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199764","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036629 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199876\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199876\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199876\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199876 (PROLAPSE OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199876","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199876","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199876 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036789 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199877\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199877\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199877\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199877 (MUCOUS POLYP OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199877","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199877","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199877 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038294 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199878\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199878\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199878\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199878 (LIGHT AND INFREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199878","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199878","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199878 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041704 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199881\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199881\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199881\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199881 (ENDOMETRIOSIS OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199881","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199881","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199881 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5,"executionTime":"0.048963 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200051\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200051\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200051\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200051 (PRIMARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200051","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200051","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047143 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200052\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200052\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200052\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200052 (PRIMARY MALIGNANT NEOPLASM OF UTERINE ADNEXA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200052","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200052","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200052 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041531 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200147\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200147\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200147\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200147 (ATROPHY OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200147","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200147","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200147 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035940 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200445\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200445\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200445\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200445 (CHRONIC PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200445","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200445","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200445 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035850 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200452\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200452\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200452\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200452 (DISORDER OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200452","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200452","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200452 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.036903 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200461\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200461\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200461\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200461 (ENDOMETRIOSIS OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200461","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200461","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037312 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200670\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200670\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200670\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200670 (BENIGN NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200670","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200670","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200670 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039034 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200675\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200675\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200675\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200675 (NEOPLASM OF UNCERTAIN BEHAVIOR OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200675","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200675","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200675 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.042207 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200775\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200775\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200775\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200775 (ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200775","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200775","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044391 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200779\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200779\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200779\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200779 (POLYP OF CORPUS UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200779","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200779","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200779 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038682 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200780\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200780\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200780\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200780 (DISORDER OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200780","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200780","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200780 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11,"executionTime":"0.045893 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200962\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200962\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200962\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200962 (PRIMARY MALIGNANT NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200962","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200962","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038009 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200970\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200970\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200970\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200970 (CARCINOMA IN SITU OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200970","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200970","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200970 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039301 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201072\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201072\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201072\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201072 (BENIGN PROSTATIC HYPERTROPHY WITHOUT OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201072","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201072","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201072 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040309 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201078 (ATROPHIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038902 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201211\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201211\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201211\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201211 (HERPETIC VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201211","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201211","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201211 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040777 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201238\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201238\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201238\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201238 (PRIMARY MALIGNANT NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201238","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201238","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201238 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041454 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201244\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201244\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201244\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201244 (BENIGN NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201244","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201244","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201244 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041077 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201257\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201257\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201257\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201257 (DISORDER OF ENDOCRINE OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201257","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201257","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201257 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040058 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201346\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201346\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201346\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201346 (EDEMA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201346","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201346","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201346 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039798 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201355\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201355\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201355\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201355 (EROSION AND ECTROPION OF THE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201355","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201355","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201355 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036918 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201527\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201527\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201527\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201527 (NEOPLASM OF UNCERTAIN BEHAVIOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201527","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201527","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201527 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037844 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201617\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201617\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201617\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201617 (PROSTATIC CYST), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201617","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201617","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201617 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037672 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201625\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201625\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201625\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201625 (MALPOSITION OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201625","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201625","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201625 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036847 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201801\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201801\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201801\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201801 (PRIMARY MALIGNANT NEOPLASM OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201801","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201801","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041625 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201817\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201817\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201817\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201817 (BENIGN NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201817","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201817","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201817 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039073 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201823\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201823\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201823\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201823 (BENIGN NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201823","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201823","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201823 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037649 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201907\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201907\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201907\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201907 (EDEMA OF MALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201907","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201907","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201907 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041072 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201909\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201909\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201909\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201909 (FEMALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201909","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201909","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201909 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036277 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201913\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201913\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201913\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201913 (TORSION OF THE OVARY, OVARIAN PEDICLE OR FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201913","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201913","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201913 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038133 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 314409\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 314409\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 314409\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 314409 (VASCULAR DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"314409","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_314409","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=314409 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036920 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 315586\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 315586\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 315586\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 315586 (PRIAPISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"315586","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_315586","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=315586 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038590 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 433716\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 433716\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 433716\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 433716 (PRIMARY MALIGNANT NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"433716","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_433716","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=433716 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036233 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 434251\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 434251\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 434251\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 434251 (INJURY OF MALE EXTERNAL GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"434251","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_434251","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=434251 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038664 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 435315\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 435315\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 435315\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 435315 (TORSION OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"435315","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_435315","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=435315 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038562 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 435648\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 435648\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 435648\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 435648 (RETRACTILE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"435648","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_435648","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=435648 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038596 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436155\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436155\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436155 (REDUNDANT PREPUCE AND PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040959 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436358\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436358\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436358\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436358 (PRIMARY MALIGNANT NEOPLASM OF EXOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436358","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436358","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436358 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046472 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436366\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436366\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436366\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436366 (BENIGN NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436366","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436366","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436366 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037898 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436466\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436466\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436466\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436466 (BALANOPOSTHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436466","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436466","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436466 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038044 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 437501\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 437501\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 437501\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 437501 (PRIMARY MALIGNANT NEOPLASM OF LABIA MAJORA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"437501","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_437501","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=437501 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039557 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 437655\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 437655\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 437655\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 437655 (UNDESCENDED TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"437655","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_437655","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=437655 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038478 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 438477\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 438477\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 438477\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 438477 (ATROPHY OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"438477","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_438477","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=438477 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039937 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 439871\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 439871\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 439871\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 439871 (HEMOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"439871","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_439871","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=439871 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037927 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 440971\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 440971\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 440971\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 440971 (NEOPLASM OF UNCERTAIN BEHAVIOR OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"440971","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_440971","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=440971 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043824 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441068\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441068\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441068\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441068 (TORSION OF APPENDIX OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441068","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441068","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=441068 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038084 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441077\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441077\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441077\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441077 (STENOSIS OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441077","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441077","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=441077 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035325 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441805\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441805\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441805\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441805 (PRIMARY MALIGNANT NEOPLASM OF ENDOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441805","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441805","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034115 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 442781\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 442781\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 442781\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 442781 (DISORDER OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"442781","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_442781","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=442781 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039039 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443211\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443211\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443211\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443211 (BENIGN PROSTATIC HYPERTROPHY WITH OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443211","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443211","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443211 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041847 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443435\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443435\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443435\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443435 (PRIMARY UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443435","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443435","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443435 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038532 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443800\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443800\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443800\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443800 (AMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443800","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443800","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443800 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040003 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 444078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 444078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 444078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 444078 (INFLAMMATION OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"444078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_444078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=444078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038894 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 444106\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 444106\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 444106\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 444106 (CANDIDIASIS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"444106","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_444106","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=444106 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035830 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2003947\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003947\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2003947\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2003947 (CLOSED [PERCUTANEOUS] [NEEDLE] BIOPSY OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2003947","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003947","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2003947 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032885 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2003966\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003966\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2003966\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2003966 (OTHER TRANSURETHRAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2003966","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003966","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2003966 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033853 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2003983\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2003983\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2003983\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2003983 (OTHER PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2003983","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2003983","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2003983 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035216 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004031\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004031\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004031\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004031 (OTHER REPAIR OF SCROTUM AND TUNICA VAGINALIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004031","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004031","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004031 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033336 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004063\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004063\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004063\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004063 (UNILATERAL ORCHIECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004063","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004063","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004063 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034247 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004070\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004070\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004070\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004070 (OTHER REPAIR OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004070","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004070","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004070 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035285 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004090\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004090\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004090\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004090 (EXCISION OF VARICOCELE AND HYDROCELE OF SPERMATIC CORD), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004090","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004090","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004090 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033251 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004164\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004164\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004164\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004164 (LOCAL EXCISION OR DESTRUCTION OF LESION OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004164","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004164","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004164 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032630 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004263\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004263\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004263\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004263 (OTHER REMOVAL OF BOTH OVARIES AND TUBES AT SAME OPERATIVE EPISODE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004263","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004263","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004263 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031766 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004329\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004329\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004329\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004329 (OTHER BILATERAL DESTRUCTION OR OCCLUSION OF FALLOPIAN TUBES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004329","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004329","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004329 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042676 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004342\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004342\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004342\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004342 (REMOVAL OF BOTH FALLOPIAN TUBES AT SAME OPERATIVE EPISODE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004342","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004342","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004342 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033122 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004443\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004443\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004443\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004443 (CLOSED BIOPSY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004443","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004443","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004443 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033725 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2004627\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2004627\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2004627\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2004627 (VAGINAL SUSPENSION AND FIXATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2004627","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2004627","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2004627 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031913 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109825\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109825\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109825\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109825 (TRANSURETHRAL ELECTROSURGICAL RESECTION OF PROSTATE, INCLUDING CONTROL OF POSTOPERATIVE BLEEDING, COMPLETE (VASECTOMY, MEATOTOMY, CYSTOURETHROSCOPY, URETHRAL CALIBRATION AND/OR DILATION, AND INTERNAL URETHROTOMY ARE INCLUDED)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109825","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109825","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109825 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032349 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109833\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109833\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109833\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109833 (LASER VAPORIZATION OF PROSTATE, INCLUDING CONTROL OF POSTOPERATIVE BLEEDING, COMPLETE (VASECTOMY, MEATOTOMY, CYSTOURETHROSCOPY, URETHRAL CALIBRATION AND/OR DILATION, INTERNAL URETHROTOMY AND TRANSURETHRAL RESECTION OF PROSTATE ARE INCLUDED IF PERFORMED)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109833","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109833","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109833 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028576 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109900\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109900\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109900\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109900 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), SIMPLE; CHEMICAL), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109900","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109900","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109900 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034373 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109902\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109902\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109902\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109902 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), SIMPLE; CRYOSURGERY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109902","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109902","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109902 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038745 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109905\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109905\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109905\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109905 (DESTRUCTION OF LESION(S), PENIS (EG, CONDYLOMA, PAPILLOMA, MOLLUSCUM CONTAGIOSUM, HERPETIC VESICLE), EXTENSIVE (EG, LASER SURGERY, ELECTROSURGERY, CRYOSURGERY, CHEMOSURGERY)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109905","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109905","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109905 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033975 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109906\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109906\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109906\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109906 (BIOPSY OF PENIS, (SEPARATE PROCEDURE)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109906","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109906","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109906 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032773 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109916\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109916\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109916\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109916 (CIRCUMCISION, USING CLAMP OR OTHER DEVICE WITH REGIONAL DORSAL PENILE OR RING BLOCK), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109916","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109916","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109916 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036730 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109968\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109968\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109968\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109968 (FORESKIN MANIPULATION INCLUDING LYSIS OF PREPUTIAL ADHESIONS AND STRETCHING), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109968","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109968","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109968 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035133 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109973\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109973\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109973\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109973 (ORCHIECTOMY, SIMPLE (INCLUDING SUBCAPSULAR), WITH OR WITHOUT TESTICULAR PROSTHESIS, SCROTAL OR INGUINAL APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109973","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109973","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109973 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033926 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2109981\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2109981\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2109981\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2109981 (ORCHIOPEXY, INGUINAL APPROACH, WITH OR WITHOUT HERNIA REPAIR), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2109981","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2109981","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2109981 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032817 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110004\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110004\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110004\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110004 (DRAINAGE OF SCROTAL WALL ABSCESS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110004","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110004","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110004 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036596 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110011\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110011\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110011\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110011 (VASECTOMY, UNILATERAL OR BILATERAL (SEPARATE PROCEDURE), INCLUDING POSTOPERATIVE SEMEN EXAMINATION(S)), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110011","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110011","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110011 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032679 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110026\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110026\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110026\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110026 (BIOPSY, PROSTATE; NEEDLE OR PUNCH, SINGLE OR MULTIPLE, ANY APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110026","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110026","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110026 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037115 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110039\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110039\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110039\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110039 (PROSTATECTOMY, RETROPUBIC RADICAL, WITH OR WITHOUT NERVE SPARING; WITH BILATERAL PELVIC LYMPHADENECTOMY, INCLUDING EXTERNAL ILIAC, HYPOGASTRIC, AND OBTURATOR NODES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110039","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110039","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110039 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033857 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110044\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110044\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110044\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110044 (LAPAROSCOPY, SURGICAL PROSTATECTOMY, RETROPUBIC RADICAL, INCLUDING NERVE SPARING, INCLUDES ROBOTIC ASSISTANCE, WHEN PERFORMED), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110044","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110044","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110044 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033926 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110078 (COLPOSCOPY OF THE VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110078 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033906 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110116\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110116\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110116\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110116 (COLPOPEXY, VAGINAL; EXTRA-PERITONEAL APPROACH (SACROSPINOUS, ILIOCOCCYGEUS)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110116","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110116","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110116 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035278 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110142\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110142\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110142\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110142 (LAPAROSCOPY, SURGICAL, COLPOPEXY (SUSPENSION OF VAGINAL APEX)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110142","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110142","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110142 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031210 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110144\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110144\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110144\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110144 (COLPOSCOPY OF THE CERVIX INCLUDING UPPER/ADJACENT VAGINA, WITH BIOPSY(S) OF THE CERVIX AND ENDOCERVICAL CURETTAGE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110144","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110144","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110144 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034374 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110169\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110169\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110169\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110169 (ENDOMETRIAL SAMPLING (BIOPSY) WITH OR WITHOUT ENDOCERVICAL SAMPLING (BIOPSY), WITHOUT CERVICAL DILATION, ANY METHOD (SEPARATE PROCEDURE)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110169","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110169","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110169 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035736 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110175\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110175\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110175\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110175 (TOTAL ABDOMINAL HYSTERECTOMY (CORPUS AND CERVIX), WITH OR WITHOUT REMOVAL OF TUBE(S), WITH OR WITHOUT REMOVAL OF OVARY(S)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110175","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110175","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110175 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032733 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110194\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110194\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110194\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110194 (INSERTION OF INTRAUTERINE DEVICE (IUD)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110194","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110194","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110194 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032318 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110195\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110195\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110195\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110195 (REMOVAL OF INTRAUTERINE DEVICE (IUD)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110195","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110195","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110195 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032524 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110203\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110203\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110203\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110203 (ENDOMETRIAL ABLATION, THERMAL, WITHOUT HYSTEROSCOPIC GUIDANCE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110203","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110203","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110203 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032878 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110222\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110222\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110222\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110222 (HYSTEROSCOPY, SURGICAL; WITH SAMPLING (BIOPSY) OF ENDOMETRIUM AND/OR POLYPECTOMY, WITH OR WITHOUT D & C), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110222","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110222","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110222 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033581 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110227\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110227\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110227\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110227 (HYSTEROSCOPY, SURGICAL; WITH ENDOMETRIAL ABLATION (EG, ENDOMETRIAL RESECTION, ELECTROSURGICAL ABLATION, THERMOABLATION)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110227","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110227","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110227 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032195 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110230\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110230\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110230\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110230 (LAPAROSCOPY, SURGICAL, WITH TOTAL HYSTERECTOMY, FOR UTERUS 250 G OR LESS; WITH REMOVAL OF TUBE(S) AND/OR OVARY(S)), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110230","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110230","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110230 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036792 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110307\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110307\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110307\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110307 (ROUTINE OBSTETRIC CARE INCLUDING ANTEPARTUM CARE, VAGINAL DELIVERY (WITH OR WITHOUT EPISIOTOMY, AND/OR FORCEPS) AND POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110307","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110307","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110307 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035676 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110315\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110315\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110315\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110315 (ROUTINE OBSTETRIC CARE INCLUDING ANTEPARTUM CARE, CESAREAN DELIVERY, AND POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110315","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110315","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110315 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036699 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110316\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110316\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110316\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110316 (CESAREAN DELIVERY ONLY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110316","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110316","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110316 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035190 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110317\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110317\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110317\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110317 (CESAREAN DELIVERY ONLY, INCLUDING POSTPARTUM CARE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110317","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110317","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110317 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036520 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2110326\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2110326\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2110326\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2110326 (TREATMENT OF MISSED ABORTION, COMPLETED SURGICALLY; FIRST TRIMESTER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2110326","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2110326","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2110326 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034600 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211747\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211747\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211747\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211747 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION, FIRST TRIMESTER (< 14 WEEKS 0 DAYS), TRANSABDOMINAL APPROACH; SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211747","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211747","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211747 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034748 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211749\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211749\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211749\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211749 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION, AFTER FIRST TRIMESTER (> OR = 14 WEEKS 0 DAYS), TRANSABDOMINAL APPROACH; SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211749","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211749","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211749 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034989 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211751\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211751\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211751\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211751 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FETAL AND MATERNAL EVALUATION PLUS DETAILED FETAL ANATOMIC EXAMINATION, TRANSABDOMINAL APPROACH; SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211751","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211751","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211751 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031166 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211753\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211753\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211753\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211753 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FIRST TRIMESTER FETAL NUCHAL TRANSLUCENCY MEASUREMENT, TRANSABDOMINAL OR TRANSVAGINAL APPROACH; SINGLE OR FIRST GESTATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211753","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211753","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211753 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032284 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211755\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211755\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211755\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211755 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, LIMITED (EG, FETAL HEART BEAT, PLACENTAL LOCATION, FETAL POSITION AND/OR QUALITATIVE AMNIOTIC FLUID VOLUME), 1 OR MORE FETUSES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211755","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211755","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211755 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034348 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211756\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211756\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211756\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211756 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, FOLLOW-UP (EG, RE-EVALUATION OF FETAL SIZE BY MEASURING STANDARD GROWTH PARAMETERS AND AMNIOTIC FLUID VOLUME, RE-EVALUATION OF ORGAN SYSTEM(S) SUSPECTED OR CONFIRMED TO BE ABNORMAL ON A PREV), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211756","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211756","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211756 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031573 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211757\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211757\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211757\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211757 (ULTRASOUND, PREGNANT UTERUS, REAL TIME WITH IMAGE DOCUMENTATION, TRANSVAGINAL), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211757","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211757","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211757 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033589 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211765\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211765\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211765\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211765 (ULTRASOUND, TRANSVAGINAL), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211765","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211765","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211765 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035095 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2211769\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2211769\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2211769\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2211769 (ULTRASOUND, SCROTUM AND CONTENTS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2211769","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2211769","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2211769 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035753 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2617204\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2617204\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2617204\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2617204 (CERVICAL OR VAGINAL CANCER SCREENING, PELVIC AND CLINICAL BREAST EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2617204","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2617204","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2617204 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033672 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2721063\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2721063\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2721063\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2721063 (ANNUAL GYNECOLOGICAL EXAMINATION, NEW PATIENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2721063","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2721063","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2721063 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033422 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2721064\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2721064\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2721064\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2721064 (ANNUAL GYNECOLOGICAL EXAMINATION, ESTABLISHED PATIENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2721064","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2721064","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2721064 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035712 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2780478\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2780478\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2780478\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2780478 (RESECTION OF PROSTATE, PERCUTANEOUS ENDOSCOPIC APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2780478","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2780478","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2780478 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035249 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 2780523\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 2780523\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 2780523\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 2780523 (RESECTION OF PREPUCE, EXTERNAL APPROACH), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"2780523","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_2780523","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=2780523 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037641 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4005743\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4005743\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4005743\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4005743 (FEMALE STERILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4005743","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4005743","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4005743 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039105 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4005933\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4005933\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4005933\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4005933 (HYPOSPADIAS, PENILE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4005933","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4005933","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4005933 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041495 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4012343\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4012343\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4012343\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4012343 (VAGINAL DISCHARGE SYMPTOM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4012343","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4012343","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4012343 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036548 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4016155\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4016155\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4016155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4016155 (PROSTATISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4016155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4016155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4016155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037044 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4021531\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4021531\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4021531\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4021531 (TOTAL ABDOMINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4021531","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4021531","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4021531 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":4,"executionTime":"0.039167 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4032594\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4032594\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4032594\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4032594 (INFLAMMATION OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4032594","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4032594","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036467 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4032622\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4032622\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4032622\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4032622 (LAPAROSCOPIC SUPRACERVICAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4032622","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4032622","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4032622 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037622 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4038747\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4038747\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4038747\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4038747 (OBSTETRIC EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4038747","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4038747","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4038747 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038591 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4048225\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4048225\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4048225\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4048225 (NEOPLASM OF ENDOMETRIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4048225","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4048225","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4048225 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039491 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4050091\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4050091\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4050091\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4050091 (OPEN WOUND OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4050091","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4050091","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4050091 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038503 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4051956\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4051956\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4051956\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4051956 (VULVOVAGINAL DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4051956","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4051956","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4051956 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":24,"executionTime":"0.033550 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4052532\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4052532\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4052532\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4052532 (HYSTEROSCOPY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4052532","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4052532","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035665 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4054550\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4054550\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4054550\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4054550 (OPEN WOUND OF SCROTUM AND TESTES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4054550","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4054550","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4054550 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035754 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4056903\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4056903\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4056903\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4056903 (VAGINITIS ASSOCIATED WITH ANOTHER DISORDER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4056903","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4056903","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4056903 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033333 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4058792\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4058792\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4058792\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4058792 (DOUCHE OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4058792","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4058792","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4058792 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035495 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060207\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060207\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060207\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060207 (VULVAL IRRITATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060207","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060207","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060207 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036923 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060556\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060556\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060556\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060556 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060556","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060556","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060556 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037779 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060558\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060558\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060558\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060558 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM - DELIVERED), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060558","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060558","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060558 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037270 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060559\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060559\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060559\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060559 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM WITH ANTENATAL PROBLEM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060559","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060559","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060559 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039736 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4061050\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4061050\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4061050\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4061050 (SUBACUTE AND CHRONIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4061050","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4061050","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4061050 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039187 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4071874\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4071874\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4071874\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4071874 (PAIN IN SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4071874","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4071874","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4071874 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033520 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4073700\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4073700\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4073700\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4073700 (TRANSURETHRAL LASER PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4073700","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4073700","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4073700 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038424 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4081648\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4081648\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4081648\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4081648 (ACUTE VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4081648","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4081648","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4081648 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034105 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4083772\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4083772\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4083772\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4083772 (ECHOGRAPHY OF SCROTUM AND CONTENTS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4083772","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4083772","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4083772 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047061 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4090039\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4090039\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4090039\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4090039 (PENILE ARTERIAL INSUFFICIENCY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4090039","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4090039","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4090039 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.067384 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4092515\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4092515\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4092515\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4092515 (MALIGNANT NEOPLASM, OVERLAPPING LESION OF CERVIX UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4092515","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4092515","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4092515 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.058393 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4093346\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4093346\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4093346\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4093346 (LARGE PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4093346","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4093346","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4093346 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040895 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4095940\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4095940\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4095940\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4095940 (FINDING OF PATTERN OF MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4095940","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4095940","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4095940 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":6,"executionTime":"0.036382 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4096783\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4096783\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4096783\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4096783 (RADICAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4096783","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4096783","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049928 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4109081\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4109081\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4109081\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4109081 (PAIN IN PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4109081","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4109081","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4109081 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":9,"executionTime":"0.036080 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4127886\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4127886\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4127886\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4127886 (HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4127886","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4127886","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042320 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4128329\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4128329\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4128329\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4128329 (MENOPAUSE PRESENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4128329","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4128329","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4128329 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041073 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4129155\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4129155\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4129155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4129155 (VAGINAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4129155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4129155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4129155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036677 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4138738\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4138738\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4138738\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4138738 (VAGINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4138738","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4138738","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4138738 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.056054 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4140828\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4140828\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4140828\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4140828 (ACUTE VULVITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4140828","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4140828","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4140828 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039859 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4141940\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4141940\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4141940\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4141940 (ENDOMETRIAL ABLATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4141940","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4141940","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4141940 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043596 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4143116\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4143116\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4143116\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4143116 (AZOOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4143116","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4143116","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4143116 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049245 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4146777\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4146777\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4146777\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4146777 (RADICAL ABDOMINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4146777","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4146777","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4146777 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048119 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4147021\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4147021\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4147021\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4147021 (CONTUSION, SCROTUM OR TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4147021","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4147021","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4147021 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.050977 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4149084\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4149084\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4149084\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4149084 (VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4149084","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4149084","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4149084 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.050316 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4150042\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4150042\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4150042\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4150042 (VAGINAL ULCER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4150042","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4150042","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4150042 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049262 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4150816\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4150816\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4150816\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4150816 (BICORNUATE UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4150816","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4150816","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4150816 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047190 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4155529\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4155529\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4155529\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4155529 (MECHANICAL COMPLICATION OF INTRAUTERINE CONTRACEPTIVE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4155529","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4155529","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4155529 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046476 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4156113\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4156113\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4156113\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4156113 (MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4156113","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4156113","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4156113 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036556 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4161944\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4161944\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4161944\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4161944 (LOW CERVICAL CESAREAN SECTION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4161944","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4161944","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4161944 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035384 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4162860\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4162860\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4162860\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4162860 (PRIMARY MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4162860","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4162860","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4162860 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038069 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4163261\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4163261\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4163261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4163261 (MALIGNANT TUMOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4163261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4163261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4163261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038161 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4171394\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4171394\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4171394\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4171394 (ABNORMAL MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4171394","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4171394","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4171394 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038938 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4171915\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4171915\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4171915\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4171915 (ORCHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4171915","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4171915","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4171915 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042407 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4180978\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4180978\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4180978\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4180978 (VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4180978","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4180978","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4180978 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034761 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4181912\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4181912\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4181912\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4181912 (CONE BIOPSY OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4181912","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4181912","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4181912 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037898 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4194652\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4194652\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4194652\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4194652 (PRURITUS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4194652","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4194652","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4194652 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037725 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4199600\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4199600\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4199600\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4199600 (CANDIDAL BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4199600","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4199600","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4199600 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037124 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4234536\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4234536\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4234536\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4234536 (TRANSURETHRAL PROSTATECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4234536","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4234536","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4234536 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037523 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4235215\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4235215\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4235215\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4235215 (SWELLING OF TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4235215","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4235215","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4235215 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033367 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4238715\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4238715\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4238715\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4238715 (REMOVAL OF INTRAUTERINE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4238715","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4238715","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4238715 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039818 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4243919\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4243919\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4243919\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4243919 (INCISION OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4243919","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4243919","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4243919 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036730 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4260520\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4260520\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4260520\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4260520 (BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4260520","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4260520","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4260520 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038085 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4270932\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4270932\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4270932\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4270932 (PAIN IN TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4270932","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4270932","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4270932 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034089 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4275113\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4275113\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4275113\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4275113 (INSERTION OF INTRAUTERINE CONTRACEPTIVE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4275113","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4275113","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4275113 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037056 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4279913\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4279913\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4279913\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4279913 (PRIMARY OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4279913","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4279913","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4279913 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038658 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4281030\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4281030\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4281030\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4281030 (SECONDARY MALIGNANT NEOPLASM OF RIGHT OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4281030","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4281030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4281030 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037146 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4294393\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4294393\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4294393\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4294393 (ULCER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4294393","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4294393","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4294393 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3,"executionTime":"0.037340 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4294805\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4294805\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4294805\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4294805 (LAPAROSCOPIC-ASSISTED VAGINAL HYSTERECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4294805","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4294805","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035718 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4295261\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4295261\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4295261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4295261 (POSTMENOPAUSAL STATE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4295261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4295261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4295261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036520 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4303258\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4303258\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4303258\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4303258 (BACTERIAL VAGINOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4303258","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4303258","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4303258 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035755 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4306780\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4306780\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4306780\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4306780 (GYNECOLOGIC EXAMINATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4306780","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4306780","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4306780 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032844 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4310552\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4310552\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4310552\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4310552 (ORCHIDOPEXY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4310552","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4310552","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4310552 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038722 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4320332\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4320332\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4320332\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4320332 (HYDROCELE OF TUNICA VAGINALIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4320332","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4320332","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4320332 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042154 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4321575\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4321575\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4321575\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4321575 (LYSIS OF PENILE ADHESIONS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4321575","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4321575","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4321575 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039231 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4330583\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 4330583\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\tWHERE PROCEDURE_CONCEPT_ID = 4330583\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4330583 (VASECTOMY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4330583","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_procedure_occurrence_procedure_concept_id_4330583","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"PROCEDURE_CONCEPT_ID=4330583 is missing from the PROCEDURE_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036678 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4339088\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4339088\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4339088\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4339088 (TESTICULAR MASS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4339088","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4339088","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4339088 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035292 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40481080\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40481080\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40481080\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40481080 (BENIGN LOCALIZED HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40481080","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40481080","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40481080 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039707 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40482030\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40482030\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40482030\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40482030 (DYSPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40482030","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40482030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40482030 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036799 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40482406\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40482406\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40482406\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40482406 (LOW LYING PLACENTA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40482406","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40482406","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40482406 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035583 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40483613\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40483613\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40483613\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40483613 (INFLAMMATORY DISEASE OF FEMALE GENITAL STRUCTURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40483613","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40483613","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40483613 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036801 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40490888\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40490888\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40490888\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40490888 (HERNIATION OF RECTUM INTO VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40490888","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40490888","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40490888 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038091 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 42709954\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 42709954\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 42709954\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 42709954 (PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"42709954","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_42709954","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=42709954 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035261 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45757415\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45757415\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45757415\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45757415 (BENIGN ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45757415","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45757415","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45757415 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":8,"executionTime":"0.036916 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45766654\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45766654\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45766654\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45766654 (DISORDER OF SKIN OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45766654","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45766654","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039312 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45770892\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45770892\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45770892\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45770892 (PRIMARY MALIGNANT NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45770892","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45770892","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45770892 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037261 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45772671\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45772671\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45772671\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45772671 (NODULAR PROSTATE WITHOUT URINARY OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45772671","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45772671","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45772671 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":81,"executionTime":"55.055991 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4090861, 4025213\nplausibleGenderUseDescendants = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4090861, 4025213)\n\t\tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4090861, 4025213)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4090861, 4025213 (MALE GENITALIA FINDING, MALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4090861, 4025213","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4090861,4025213","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":2,"notesValue":"0"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"33.093403 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481\nplausibleGenderUseDescendants = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)\n\t\tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.CONDITION_OCCURRENCE cdmTable\n\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481 (FEMALE GENITALIA FINDING, DISORDER OF INTRAUTERINE CONTRACEPTIVE DEVICE, MENOPAUSE FINDING, DISORDER OF FEMALE GENITAL SYSTEM, MALIGNANT NEOPLASM OF UTERINE ADNEXA, FINDING RELATED TO PREGNANCY, FEMALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4095793,443343,4024004,4172857,444094,197810,4158481","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":2,"notesValue":"0"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":117,"executionTime":"44.585996 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4041261\nplausibleGenderUseDescendants = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4041261)\n\t\tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4041261)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4041261 (PROCEDURE ON FEMALE GENITAL SYSTEM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4041261","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_procedure_occurrence_procedure_concept_id_4041261","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":2,"notesValue":"0"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"41.929869 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\nvocabDatabaseSchema = omop_etl_schema\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = PROCEDURE_CONCEPT_ID\nconceptId = 4250917, 4077750, 4043199, 4040577\nplausibleGenderUseDescendants = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\t\tJOIN omop_etl_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4250917, 4077750, 4043199, 4040577)\n\t\tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_etl_schema.PROCEDURE_OCCURRENCE cdmTable\n\t\tJOIN omop_etl_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.PROCEDURE_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4250917, 4077750, 4043199, 4040577)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4250917, 4077750, 4043199, 4040577 (OPERATION ON PROSTATE, OPERATION ON SCROTUM, PROCEDURE ON PENIS, PROCEDURE ON TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"PROCEDURE_OCCURRENCE","cdmFieldName":"PROCEDURE_CONCEPT_ID","conceptId":"4250917, 4077750, 4043199, 4040577","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_procedure_occurrence_procedure_concept_id_4250917,4077750,4043199,4040577","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":2,"notesValue":"0"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196055 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3006315\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006315\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006315\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3006315 (BASOPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3006315","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3006315","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3006315 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.210466 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3004410\nplausibleUnitConceptIds = 8554,8737,9225,9579\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004410\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8737,9225,9579) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004410\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3004410 (HEMOGLOBIN A1C/HEMOGLOBIN.TOTAL IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,8737,9225,9579)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3004410","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3004410","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3004410 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192592 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40487382\nplausibleUnitConceptIds = 8784,8848,8961\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40487382\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40487382\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40487382 (TOTAL LYMPHOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40487382","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40487382","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40487382 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197207 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013721\nplausibleUnitConceptIds = 8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013721\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013721\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013721 (ASPARTATE AMINOTRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013721","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013721","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013721 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197472 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3019198\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019198\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019198\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3019198 (LYMPHOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3019198","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3019198","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3019198 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.201977 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3034426\nplausibleUnitConceptIds = 8555\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034426\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8555) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034426\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3034426 (PROTHROMBIN TIME (PT)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8555)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3034426","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3034426","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3034426 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191522 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3043688\nplausibleUnitConceptIds = 8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3043688\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3043688\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3043688 (HEMOGLOBIN [MASS/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3043688","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3043688","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3043688 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.194341 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3046485\nplausibleUnitConceptIds = 8523,8554,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3046485\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3046485\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3046485 (UREA NITROGEN/CREATININE [MASS RATIO] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8554,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3046485","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3046485","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3046485 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5261,"executionTime":"0.189302 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4216098\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4216098\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4216098\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4216098 (EOSINOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4216098","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4216098","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5561,"executionTime":"0.493442 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4245152\nplausibleUnitConceptIds = 8736,8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4245152\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8736,8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4245152\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4245152 (POTASSIUM MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8736,8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4245152","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4245152","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.436487 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 43055141\nplausibleUnitConceptIds = -1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 43055141\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 43055141\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 43055141 (PAIN SEVERITY - 0-10 VERBAL NUMERIC RATING [SCORE] - REPORTED) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"43055141","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_43055141","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=43055141 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.450320 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3006923\nplausibleUnitConceptIds = 8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006923\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006923\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3006923 (ALANINE AMINOTRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3006923","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3006923","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3006923 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.437331 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3021044\nplausibleUnitConceptIds = 8837\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3021044\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8837) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3021044\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3021044 (IRON BINDING CAPACITY [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8837)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3021044","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3021044","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3021044 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":12724,"executionTime":"0.399514 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024171\nplausibleUnitConceptIds = 8483,8541\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024171\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024171\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024171 (RESPIRATORY RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8483,8541)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024171","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024171","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.194033 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3027114\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027114\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027114\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3027114 (CHOLESTEROL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3027114","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3027114","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3027114 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189720 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40762499\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40762499\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40762499\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40762499 (OXYGEN SATURATION IN ARTERIAL BLOOD BY PULSE OXIMETRY) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40762499","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40762499","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40762499 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195838 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3000963\nplausibleUnitConceptIds = 8636,8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000963\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000963\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3000963 (HEMOGLOBIN [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3000963","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3000963","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3000963 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.185036 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001604\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001604\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001604\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001604 (MONOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001604","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001604","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001604 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.185440 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3019069\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019069\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019069\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3019069 (MONOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3019069","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3019069","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3019069 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192501 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3022509\nplausibleUnitConceptIds = 8765\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022509\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8765) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022509\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3022509 (HYALINE CASTS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY LOW POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8765)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3022509","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3022509","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3022509 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197144 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3028288\nplausibleUnitConceptIds = 8840,9028\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028288\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028288\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3028288 (CHOLESTEROL IN LDL [MASS/VOLUME] IN SERUM OR PLASMA BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840,9028)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3028288","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3028288","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3028288 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5230,"executionTime":"0.193784 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4148615\nplausibleUnitConceptIds = 8784,8848,8961\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4148615\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4148615\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4148615 (NEUTROPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4148615","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4148615","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.216450 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 44806420\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 44806420\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 44806420\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 44806420 (ESTIMATION OF GLOMERULAR FILTRATION RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"44806420","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_44806420","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=44806420 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188018 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3028437\nplausibleUnitConceptIds = 8840,9028\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028437\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028437\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3028437 (CHOLESTEROL IN LDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840,9028)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3028437","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3028437","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3028437 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.194370 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3016991\nplausibleUnitConceptIds = 8837\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3016991\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8837) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3016991\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3016991 (THYROXINE (T4) [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8837)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3016991","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3016991","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3016991 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.200412 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3026925\nplausibleUnitConceptIds = 8820,8845\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026925\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8820,8845) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026925\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3026925 (TRIIODOTHYRONINE (T3) FREE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8820,8845)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3026925","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3026925","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3026925 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195182 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3028615\nplausibleUnitConceptIds = 8784,8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028615\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3028615\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3028615 (EOSINOPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3028615","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3028615","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3028615 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190204 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3051205\nplausibleUnitConceptIds = 8786\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3051205\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8786) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3051205\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3051205 (CRYSTALS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8786)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3051205","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3051205","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3051205 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191375 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4098046\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4098046\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4098046\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4098046 (PULSE OXIMETRY) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4098046","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4098046","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4098046 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196972 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3005131\nplausibleUnitConceptIds = 8840,9028\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3005131\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840,9028) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3005131\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3005131 (GLUCOSE MEAN VALUE [MASS/VOLUME] IN BLOOD ESTIMATED FROM GLYCATED HEMOGLOBIN) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840,9028)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3005131","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3005131","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3005131 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195950 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3011163\nplausibleUnitConceptIds = 8523,8529,8554,8596,8606,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3011163\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8529,8554,8596,8606,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3011163\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3011163 (CHOLESTEROL.TOTAL/CHOLESTEROL IN HDL [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8529,8554,8596,8606,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3011163","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3011163","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3011163 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188646 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3044491\nplausibleUnitConceptIds = 8576,8840,9028\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3044491\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840,9028) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3044491\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3044491 (CHOLESTEROL NON HDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8576,8840,9028)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3044491","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3044491","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3044491 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.208945 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4017361\nplausibleUnitConceptIds = 8753,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4017361\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4017361\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4017361 (BLOOD UREA NITROGEN MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4017361","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4017361","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4017361 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193221 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3006504\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006504\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006504\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3006504 (EOSINOPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3006504","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3006504","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3006504 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191453 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3000483\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000483\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000483\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3000483 (GLUCOSE [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3000483","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3000483","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3000483 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189489 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3033543\nplausibleUnitConceptIds = 8523,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3033543\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3033543\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3033543 (SPECIFIC GRAVITY OF URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3033543","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3033543","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3033543 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.235567 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3045716\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3045716\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3045716\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3045716 (ANION GAP IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3045716","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3045716","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3045716 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.181318 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4101713\nplausibleUnitConceptIds = 8636,8736,8753,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4101713\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8736,8753,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4101713\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4101713 (HIGH DENSITY LIPOPROTEIN CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8736,8753,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4101713","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4101713","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4101713 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.209438 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4103762\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4103762\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4103762\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4103762 (ANION GAP MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4103762","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4103762","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4103762 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189567 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001008\nplausibleUnitConceptIds = 8765,8786,8889\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001008\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8765,8786,8889) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001008\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001008 (EPITHELIAL CELLS.SQUAMOUS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8765,8786,8889)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001008","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001008","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001008 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192032 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3009744\nplausibleUnitConceptIds = 8564,8636,8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009744\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8564,8636,8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009744\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3009744 (MCHC [MASS/VOLUME] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8564,8636,8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3009744","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3009744","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3009744 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188065 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013115\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013115\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013115\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013115 (EOSINOPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013115","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013115","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013115 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190717 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3019550\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019550\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019550\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3019550 (SODIUM [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3019550","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3019550","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3019550 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186778 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020416\nplausibleUnitConceptIds = 44777575,8734,8815\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020416\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777575,8734,8815) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020416\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020416 (ERYTHROCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777575,8734,8815)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020416","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020416","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020416 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196827 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3035583\nplausibleUnitConceptIds = 8786,8889\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035583\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8786,8889) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035583\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3035583 (LEUKOCYTES [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8786,8889)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3035583","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3035583","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3035583 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.200212 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3035995\nplausibleUnitConceptIds = 8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035995\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035995\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3035995 (ALKALINE PHOSPHATASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3035995","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3035995","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3035995 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192091 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3038553\nplausibleUnitConceptIds = 9531\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3038553\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (9531) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3038553\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3038553 (BODY MASS INDEX (BMI) [RATIO]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (9531)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3038553","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3038553","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3038553 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.185519 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 35610320\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 35610320\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 35610320\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 35610320 (DIASTOLIC ARTERIAL PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"35610320","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_35610320","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=35610320 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186189 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001490\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001490\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001490\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001490 (NUCLEATED ERYTHROCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001490","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001490","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001490 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198546 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4195214\nplausibleUnitConceptIds = 8523,8554,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4195214\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4195214\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4195214 (CHOLESTEROL/HDL RATIO MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8554,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4195214","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4195214","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4195214 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.229822 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 36306178\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 36306178\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 36306178\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 36306178 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"36306178","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_36306178","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=36306178 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195246 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37393850\nplausibleUnitConceptIds = 8636,8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393850\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393850\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37393850 (MCHC - MEAN CORPUSCULAR HAEMOGLOBIN CONCENTRATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37393850","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37393850","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37393850 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.205752 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3004501\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004501\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004501\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3004501 (GLUCOSE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3004501","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3004501","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3004501 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186276 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3008598\nplausibleUnitConceptIds = 8817\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008598\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8817) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008598\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3008598 (THYROXINE (T4) FREE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8817)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3008598","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3008598","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3008598 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188990 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3018010\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3018010\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3018010\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3018010 (NEUTROPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3018010","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3018010","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3018010 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187291 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3022192\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022192\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022192\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3022192 (TRIGLYCERIDE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3022192","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3022192","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3022192 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190692 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4151768\nplausibleUnitConceptIds = 9448,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4151768\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (9448,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4151768\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4151768 (PACK YEARS) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (9448,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4151768","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4151768","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4151768 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189184 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4197602\nplausibleUnitConceptIds = 8719,9040,9093\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4197602\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8719,9040,9093) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4197602\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4197602 (SERUM TSH MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8719,9040,9093)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4197602","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4197602","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4197602 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197243 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 46236952\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 46236952\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 46236952\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 46236952 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"46236952","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_46236952","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=46236952 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198188 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3006906\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006906\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006906\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3006906 (CALCIUM [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3006906","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3006906","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3006906 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189675 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3007070\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3007070\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3007070\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3007070 (CHOLESTEROL IN HDL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3007070","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3007070","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3007070 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190073 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020460\nplausibleUnitConceptIds = 8751,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020460\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8751,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020460\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020460 (C REACTIVE PROTEIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8751,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020460","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020460","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020460 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.205821 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3023314\nplausibleUnitConceptIds = 44777604,8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023314\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023314\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3023314 (HEMATOCRIT [VOLUME FRACTION] OF BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777604,8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3023314","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3023314","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3023314 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196475 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3035941\nplausibleUnitConceptIds = 8564,9655\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035941\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8564,9655) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035941\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3035941 (MCH [ENTITIC MASS]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8564,9655)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3035941","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3035941","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3035941 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196621 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3037072\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037072\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037072\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3037072 (UROBILINOGEN [MASS/VOLUME] IN URINE BY TEST STRIP) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3037072","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3037072","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3037072 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.252594 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4151358\nplausibleUnitConceptIds = 44777604,8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4151358\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4151358\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4151358 (HEMATOCRIT DETERMINATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777604,8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4151358","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4151358","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4151358 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188644 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4194332\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4194332\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4194332\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4194332 (MONOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4194332","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4194332","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4194332 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.194533 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001123\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001123\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001123\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001123 (PLATELET MEAN VOLUME [ENTITIC VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001123","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001123","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001123 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":2827,"pctViolatedRows":1,"numDenominatorRows":2827,"executionTime":"0.200619 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3012888\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3012888\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3012888\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3012888 (DIASTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3012888","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3012888","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.207808 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013707\nplausibleUnitConceptIds = 8752\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013707\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8752) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013707\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013707 (ERYTHROCYTE SEDIMENTATION RATE BY WESTERGREN METHOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8752)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013707","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013707","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013707 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.204459 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3037511\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037511\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037511\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3037511 (LYMPHOCYTES/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3037511","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3037511","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3037511 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193393 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3040168\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3040168\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3040168\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3040168 (IMMATURE GRANULOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3040168","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3040168","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3040168 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5345,"executionTime":"0.207848 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4097430\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4097430\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4097430\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4097430 (SODIUM MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4097430","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4097430","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.201452 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3005424\nplausibleUnitConceptIds = 8617\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3005424\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8617) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3005424\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3005424 (BODY SURFACE AREA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8617)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3005424","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3005424","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3005424 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.234048 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013603\nplausibleUnitConceptIds = 8748,8842\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013603\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8748,8842) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013603\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013603 (PROSTATE SPECIFIC AG [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8748,8842)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013603","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013603","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013603 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191104 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020509\nplausibleUnitConceptIds = 8523,8554,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020509\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020509\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020509 (ALBUMIN/GLOBULIN [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8554,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020509","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020509","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020509 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.202075 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3036277\nplausibleUnitConceptIds = 8582,9327,9330,9546\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3036277\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8582,9327,9330,9546) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3036277\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3036277 (BODY HEIGHT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8582,9327,9330,9546)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3036277","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3036277","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3036277 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189643 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4301868\nplausibleUnitConceptIds = 8483,8541,8581\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4301868\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,8581) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4301868\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4301868 (PULSE RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8483,8541,8581)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4301868","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4301868","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4301868 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.215835 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40762636\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40762636\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40762636\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40762636 (BODY MASS INDEX (BMI) [PERCENTILE]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40762636","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40762636","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40762636 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189949 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40765040\nplausibleUnitConceptIds = 8842,8845\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40765040\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8842,8845) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40765040\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40765040 (25-HYDROXYVITAMIN D3+25-HYDROXYVITAMIN D2 [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8842,8845)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40765040","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40765040","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40765040 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196595 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024386\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024386\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024386\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024386 (PLATELET MEAN VOLUME [ENTITIC VOLUME] IN BLOOD BY REES-ECKER) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024386","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024386","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3024386 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.184277 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3009201\nplausibleUnitConceptIds = 44777578,8719,9040,9093\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009201\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,8719,9040,9093) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009201\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3009201 (THYROTROPIN [UNITS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777578,8719,9040,9093)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3009201","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3009201","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3009201 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193231 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024731\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024731\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024731\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024731 (MCV [ENTITIC VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024731","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024731","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3024731 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198225 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3050479\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3050479\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3050479\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3050479 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3050479","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3050479","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3050479 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187039 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4012479\nplausibleUnitConceptIds = 8636,8753,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4012479\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8753,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4012479\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4012479 (LOW DENSITY LIPOPROTEIN CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8753,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4012479","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4012479","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4012479 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1432,"executionTime":"0.193562 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4152194\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4152194\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4152194\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4152194 (SYSTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4152194","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4152194","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197339 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37393840\nplausibleUnitConceptIds = 44777604,8523,8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393840\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777604,8523,8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393840\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37393840 (HAEMATOCRIT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777604,8523,8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37393840","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37393840","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37393840 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197751 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3000593\nplausibleUnitConceptIds = 8845\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000593\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8845) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000593\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3000593 (COBALAMIN (VITAMIN B12) [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8845)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3000593","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3000593","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3000593 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189703 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3002888\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002888\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002888\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3002888 (ERYTHROCYTE DISTRIBUTION WIDTH [ENTITIC VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3002888","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3002888","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3002888 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.183485 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3010910\nplausibleUnitConceptIds = 8647,8785,8815,8931\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010910\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8647,8785,8815,8931) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010910\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3010910 (ERYTHROCYTES [#/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8647,8785,8815,8931)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3010910","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3010910","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3010910 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198228 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013290\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013290\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013290\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013290 (CARBON DIOXIDE [PARTIAL PRESSURE] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013290","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013290","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013290 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.184658 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3027970\nplausibleUnitConceptIds = 8636,8713,8950\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027970\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713,8950) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027970\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3027970 (GLOBULIN [MASS/VOLUME] IN SERUM BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713,8950)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3027970","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3027970","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3027970 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187795 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4239408\nplausibleUnitConceptIds = 8483,8541,8581\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4239408\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,8581) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4239408\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4239408 (HEART RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8483,8541,8581)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4239408","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4239408","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4239408 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193798 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3010813\nplausibleUnitConceptIds = 44777588,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010813\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777588,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010813\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3010813 (LEUKOCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777588,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3010813","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3010813","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3010813 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188843 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3023103\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023103\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023103\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3023103 (POTASSIUM [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3023103","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3023103","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3023103 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189319 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4030871\nplausibleUnitConceptIds = 8734,8815,8931,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4030871\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8734,8815,8931,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4030871\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4030871 (RED BLOOD CELL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8734,8815,8931,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4030871","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4030871","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4030871 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1434,"executionTime":"0.189020 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4154790\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4154790\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4154790\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4154790 (DIASTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4154790","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4154790","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192092 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4217013\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4217013\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4217013\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4217013 (SYSTOLIC ARTERIAL PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4217013","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4217013","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4217013 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.183792 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001318\nplausibleUnitConceptIds = 8554,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001318\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001318\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001318 (CHOLESTEROL.TOTAL/CHOLESTEROL IN HDL [PERCENTILE]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001318","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001318","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001318 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":1941,"pctViolatedRows":1,"numDenominatorRows":1941,"executionTime":"0.193333 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3004249\nplausibleUnitConceptIds = 8876\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004249\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8876) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004249\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3004249 (SYSTOLIC BLOOD PRESSURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8876)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3004249","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3004249","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.201792 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3009596\nplausibleUnitConceptIds = 8576,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009596\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009596\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3009596 (CHOLESTEROL IN VLDL [MASS/VOLUME] IN SERUM OR PLASMA BY CALCULATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8576,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3009596","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3009596","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3009596 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187154 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3025315\nplausibleUnitConceptIds = 8739,9346,9373,9529\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3025315\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8739,9346,9373,9529) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3025315\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3025315 (BODY WEIGHT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8739,9346,9373,9529)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3025315","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3025315","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3025315 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.205307 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3053283\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3053283\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3053283\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3053283 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3053283","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3053283","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3053283 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.243661 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4008265\nplausibleUnitConceptIds = 8736,8753,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4008265\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8736,8753,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4008265\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4008265 (TOTAL CHOLESTEROL MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8736,8753,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4008265","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4008265","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4008265 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.237221 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 36303797\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 36303797\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 36303797\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 36303797 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG NON-BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"36303797","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_36303797","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=36303797 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.222896 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37398460\nplausibleUnitConceptIds = 32995,8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37398460\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (32995,8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37398460\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37398460 (SERUM ALKALINE PHOSPHATASE LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (32995,8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37398460","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37398460","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37398460 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.267249 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013682\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013682\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013682\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013682 (UREA NITROGEN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013682","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013682","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013682 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.213051 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3026361\nplausibleUnitConceptIds = 32706,8785,8815,8931\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026361\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (32706,8785,8815,8931) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026361\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3026361 (ERYTHROCYTES [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (32706,8785,8815,8931)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3026361","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3026361","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3026361 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":17091,"executionTime":"0.197140 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3027018\nplausibleUnitConceptIds = 8483,8541,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027018\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3027018\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3027018 (HEART RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8483,8541,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3027018","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3027018","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190604 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4013965\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4013965\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4013965\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4013965 (OXYGEN SATURATION MEASUREMENT, ARTERIAL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4013965","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4013965","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4013965 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188915 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013429\nplausibleUnitConceptIds = 8784,8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013429\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013429\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013429 (BASOPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013429","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013429","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013429 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191035 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3023599\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023599\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3023599\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3023599 (MCV [ENTITIC VOLUME] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3023599","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3023599","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3023599 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196315 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3036588\nplausibleUnitConceptIds = 8525,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3036588\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8525,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3036588\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3036588 (NEUTROPHIL CYTOPLASMIC AB.PERINUCLEAR [PRESENCE] IN SERUM) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8525,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3036588","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3036588","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3036588 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5235,"executionTime":"0.243502 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4298431\nplausibleUnitConceptIds = 8848,8961\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4298431\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4298431\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4298431 (WHITE BLOOD CELL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4298431","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4298431","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.181161 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3017732\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3017732\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3017732\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3017732 (NEUTROPHILS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3017732","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3017732","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3017732 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193105 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024561\nplausibleUnitConceptIds = 8636,8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024561\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024561\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024561 (ALBUMIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024561","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024561","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3024561 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189889 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3034639\nplausibleUnitConceptIds = 8713,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034639\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8713,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034639\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3034639 (HEMOGLOBIN A1C [MASS/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8713,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3034639","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3034639","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3034639 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.179965 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013650\nplausibleUnitConceptIds = 8784,8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013650\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013650\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013650 (NEUTROPHILS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013650","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013650","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013650 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190357 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3021886\nplausibleUnitConceptIds = 8636,8713,8950\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3021886\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713,8950) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3021886\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3021886 (GLOBULIN [MASS/VOLUME] IN SERUM) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713,8950)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3021886","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3021886","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3021886 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":5269,"executionTime":"0.190890 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4254663\nplausibleUnitConceptIds = 8848\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4254663\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4254663\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4254663 (LYMPHOCYTE COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4254663","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4254663","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.246927 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001420\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001420\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001420\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001420 (MAGNESIUM [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001420","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001420","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001420 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186499 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3007461\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3007461\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3007461\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3007461 (PLATELETS [#/VOLUME] IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3007461","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3007461","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3007461 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189422 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3012030\nplausibleUnitConceptIds = 8564\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3012030\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8564) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3012030\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3012030 (MCH [ENTITIC MASS] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8564)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3012030","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3012030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3012030 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193567 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40764999\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40764999\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40764999\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40764999 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40764999","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40764999","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40764999 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189981 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3008893\nplausibleUnitConceptIds = 8817\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008893\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8817) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008893\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3008893 (TESTOSTERONE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8817)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3008893","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3008893","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3008893 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187371 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3016723\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3016723\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3016723\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3016723 (CREATININE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3016723","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3016723","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3016723 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191913 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3026910\nplausibleUnitConceptIds = 8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026910\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3026910\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3026910 (GAMMA GLUTAMYL TRANSFERASE [ENZYMATIC ACTIVITY/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3026910","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3026910","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3026910 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.208724 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3033575\nplausibleUnitConceptIds = 8784,8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3033575\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3033575\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3033575 (MONOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3033575","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3033575","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3033575 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190256 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3041084\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3041084\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3041084\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3041084 (IMMATURE GRANULOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3041084","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3041084","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3041084 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":229,"executionTime":"0.188646 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4184637\nplausibleUnitConceptIds = 8554,8632,8737\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4184637\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8632,8737) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4184637\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4184637 (HEMOGLOBIN A1C MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,8632,8737)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4184637","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4184637","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198391 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4313591\nplausibleUnitConceptIds = 8483,8541\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4313591\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8483,8541) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4313591\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4313591 (RESPIRATORY RATE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8483,8541)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4313591","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4313591","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4313591 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186088 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37393851\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393851\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393851\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37393851 (MCV - MEAN CORPUSCULAR VOLUME) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37393851","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37393851","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37393851 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.248882 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 1619025\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 1619025\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 1619025\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 1619025 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (CKD-EPI 2021)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"1619025","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_1619025","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=1619025 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.200315 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3013869\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013869\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3013869\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3013869 (BASOPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3013869","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3013869","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3013869 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.303364 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3035472\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035472\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035472\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3035472 (ALBUMIN/PROTEIN.TOTAL IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3035472","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3035472","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3035472 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.199201 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3039000\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3039000\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3039000\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3039000 (ANION GAP IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3039000","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3039000","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3039000 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.201150 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3000905\nplausibleUnitConceptIds = 8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000905\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000905\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3000905 (LEUKOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3000905","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3000905","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3000905 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.196952 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3015632\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3015632\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3015632\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3015632 (CARBON DIOXIDE, TOTAL [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3015632","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3015632","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3015632 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195410 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3032710\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3032710\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3032710\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3032710 (CALCIUM.IONIZED/CALCIUM.TOTAL CORRECTED FOR ALBUMIN IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3032710","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3032710","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3032710 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.209488 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4197971\nplausibleUnitConceptIds = 8554,8632,8737\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4197971\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8632,8737) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4197971\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4197971 (HBA1C MEASUREMENT (DCCT ALIGNED)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,8632,8737)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4197971","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4197971","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4197971 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190196 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 42869452\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 42869452\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 42869452\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 42869452 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"42869452","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_42869452","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=42869452 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.199171 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3002109\nplausibleUnitConceptIds = 8523,8596,8606,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002109\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8596,8606,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002109\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3002109 (CHOLESTEROL IN LDL/CHOLESTEROL IN HDL [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8596,8606,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3002109","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3002109","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3002109 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.189439 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3004327\nplausibleUnitConceptIds = 8784,8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004327\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8784,8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3004327\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3004327 (LYMPHOCYTES [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8784,8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3004327","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3004327","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3004327 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192345 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3006322\nplausibleUnitConceptIds = 586323\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006322\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (586323) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3006322\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3006322 (ORAL TEMPERATURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (586323)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3006322","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3006322","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3006322 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.678803 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3008342\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008342\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3008342\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3008342 (NEUTROPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3008342","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3008342","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3008342 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.513595 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020630\nplausibleUnitConceptIds = 8636,8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020630\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8636,8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020630\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020630 (PROTEIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8636,8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020630","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020630","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020630 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.470876 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3001122\nplausibleUnitConceptIds = 8748,8842\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001122\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8748,8842) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3001122\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3001122 (FERRITIN [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8748,8842)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3001122","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3001122","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3001122 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.464839 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3009542\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009542\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3009542\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3009542 (HEMATOCRIT [VOLUME FRACTION] OF BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3009542","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3009542","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3009542 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.464750 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3010189\nplausibleUnitConceptIds = 8765,8786\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010189\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8765,8786) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010189\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3010189 (EPITHELIAL CELLS [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8765,8786)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3010189","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3010189","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3010189 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.374719 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3010457\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010457\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3010457\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3010457 (EOSINOPHILS/100 LEUKOCYTES IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3010457","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3010457","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3010457 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.438350 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4192368\nplausibleUnitConceptIds = 8583\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4192368\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8583) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4192368\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4192368 (PLATELET MEAN VOLUME DETERMINATION) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8583)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4192368","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4192368","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4192368 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193951 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3014576\nplausibleUnitConceptIds = 8753,9557\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3014576\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,9557) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3014576\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3014576 (CHLORIDE [MOLES/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,9557)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3014576","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3014576","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3014576 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.234668 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024128\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024128\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024128\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024128 (BILIRUBIN.TOTAL [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024128","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024128","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3024128 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.182806 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3018311\nplausibleUnitConceptIds = 8523,8554,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3018311\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8554,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3018311\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3018311 (UREA NITROGEN/CREATININE [MASS RATIO] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8554,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3018311","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3018311","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3018311 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192805 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020891\nplausibleUnitConceptIds = 586323,9289\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020891\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (586323,9289) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020891\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020891 (BODY TEMPERATURE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (586323,9289)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020891","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020891","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020891 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187474 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3037556\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037556\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3037556\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3037556 (URATE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3037556","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3037556","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3037556 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195275 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37399332\nplausibleUnitConceptIds = 44777578,9040\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37399332\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,9040) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37399332\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37399332 (SERUM TSH (THYROID STIMULATING HORMONE) LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777578,9040)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37399332","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37399332","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37399332 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.190589 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3011904\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3011904\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3011904\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3011904 (PHOSPHATE [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3011904","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3011904","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3011904 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197296 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3019897\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019897\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019897\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3019897 (ERYTHROCYTE DISTRIBUTION WIDTH [RATIO] BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3019897","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3019897","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3019897 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.188483 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3025255\nplausibleUnitConceptIds = 8786\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3025255\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8786) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3025255\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3025255 (BACTERIA [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8786)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3025255","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3025255","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3025255 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198930 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4076704\nplausibleUnitConceptIds = 8753,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4076704\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8753,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4076704\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4076704 (HIGH DENSITY LIPOPROTEIN MEASUREMENT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8753,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4076704","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4076704","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4076704 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.222581 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4172647\nplausibleUnitConceptIds = 8848,8961,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4172647\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848,8961,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4172647\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4172647 (BASOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848,8961,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4172647","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4172647","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4172647 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.186139 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37393531\nplausibleUnitConceptIds = 32995,8645,8923\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393531\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (32995,8645,8923) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37393531\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37393531 (SERUM ALANINE AMINOTRANSFERASE LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (32995,8645,8923)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37393531","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37393531","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37393531 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.195249 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 40771529\nplausibleUnitConceptIds = 8554,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 40771529\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 40771529\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 40771529 (IMMATURE GRANULOCYTES/100 LEUKOCYTES IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"40771529","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_40771529","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=40771529 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192385 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3000034\nplausibleUnitConceptIds = 8576,8723,8751,8840,8859\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000034\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8723,8751,8840,8859) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3000034\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3000034 (MICROALBUMIN [MASS/VOLUME] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8576,8723,8751,8840,8859)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3000034","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3000034","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3000034 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.205311 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3035124\nplausibleUnitConceptIds = 8786,8889\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035124\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8786,8889) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3035124\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3035124 (ERYTHROCYTES [#/AREA] IN URINE SEDIMENT BY MICROSCOPY HIGH POWER FIELD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8786,8889)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3035124","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3035124","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3035124 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.201890 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3002030\nplausibleUnitConceptIds = 8554,8848\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002030\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554,8848) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002030\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3002030 (LYMPHOCYTES/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554,8848)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3002030","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3002030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3002030 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.191020 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3019170\nplausibleUnitConceptIds = 44777578,8719,8860,9040,9093,9550\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019170\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (44777578,8719,8860,9040,9093,9550) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3019170\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3019170 (THYROTROPIN [UNITS/VOLUME] IN SERUM OR PLASMA BY DETECTION LIMIT <= 0.005 MIU/L) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (44777578,8719,8860,9040,9093,9550)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3019170","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3019170","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3019170 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192982 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3020149\nplausibleUnitConceptIds = 8842\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020149\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8842) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3020149\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3020149 (25-HYDROXYVITAMIN D3 [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8842)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3020149","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3020149","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3020149 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.197339 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3022174\nplausibleUnitConceptIds = 8647,8784,8785,8848,8961\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022174\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8647,8784,8785,8848,8961) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022174\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3022174 (LEUKOCYTES [#/VOLUME] IN BODY FLUID) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8647,8784,8785,8848,8961)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3022174","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3022174","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3022174 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.184733 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3024929\nplausibleUnitConceptIds = 8816,8848,8961,9436,9444\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024929\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8816,8848,8961,9436,9444) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3024929\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3024929 (PLATELETS [#/VOLUME] IN BLOOD BY AUTOMATED COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8816,8848,8961,9436,9444)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3024929","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3024929","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3024929 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.203338 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3049187\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3049187\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3049187\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3049187 (GLOMERULAR FILTRATION RATE/1.73 SQ M.PREDICTED AMONG NON-BLACKS [VOLUME RATE/AREA] IN SERUM, PLASMA OR BLOOD BY CREATININE-BASED FORMULA (MDRD)) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3049187","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3049187","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3049187 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.183752 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 37398676\nplausibleUnitConceptIds = 8848\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 37398676\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8848) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 37398676\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 37398676 (BASOPHIL COUNT) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8848)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"37398676","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_37398676","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=37398676 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.181327 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4112223\nplausibleUnitConceptIds = 8523,8596,-1\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4112223\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8596,-1) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4112223\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4112223 (BUN/CREATININE RATIO) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8596,-1)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4112223","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4112223","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4112223 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193587 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3017250\nplausibleUnitConceptIds = 8576,8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3017250\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8576,8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3017250\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3017250 (CREATININE [MASS/VOLUME] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8576,8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3017250","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3017250","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3017250 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.187576 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 4191837\nplausibleUnitConceptIds = 8840\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 4191837\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8840) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 4191837\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 4191837 (CALCULATED LDL CHOLESTEROL LEVEL) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8840)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"4191837","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_4191837","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=4191837 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.192394 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3022096\nplausibleUnitConceptIds = 8554\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022096\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8554) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3022096\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3022096 (BASOPHILS/100 LEUKOCYTES IN BLOOD) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8554)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3022096","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3022096","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3022096 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.199090 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3034485\nplausibleUnitConceptIds = 8523,8723,8838,9017,9072\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034485\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8523,8723,8838,9017,9072) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3034485\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3034485 (ALBUMIN/CREATININE [MASS RATIO] IN URINE) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8523,8723,8838,9017,9072)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3034485","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3034485","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3034485 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.193262 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 44790183\nplausibleUnitConceptIds = 720870,8795\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 44790183\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (720870,8795) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 44790183\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 44790183 (GLOMERULAR FILTRATION RATE TESTING) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (720870,8795)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"44790183","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_44790183","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=44790183 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.198396 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3002400\nplausibleUnitConceptIds = 8749,8837\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002400\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8749,8837) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3002400\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3002400 (IRON [MASS/VOLUME] IN SERUM OR PLASMA) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8749,8837)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3002400","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3002400","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3002400 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.194922 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_UNIT_CONCEPT_IDS - find any MEASUREMENT records that are associated with an incorrect UNIT_CONCEPT_ID\nParameters used in this template:\ncdmDatabaseSchema = omop_etl_schema\ncdmTableName = MEASUREMENT\ncdmFieldName = MEASUREMENT_CONCEPT_ID\nconceptId = 3003338\nplausibleUnitConceptIds = 8713\n**********/\nSELECT \n  num_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t  COUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t  m.* \n\t\tFROM omop_etl_schema.MEASUREMENT m\n\t\tWHERE m.MEASUREMENT_CONCEPT_ID = 3003338\n\t\t  \tAND COALESCE (m.unit_concept_id, -1) NOT IN (8713) -- '-1' stands for the cases when unit_concept_id is null\n\t\t  \tAND m.value_as_number IS NOT NULL \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t  COUNT(*) AS num_rows\n\tFROM omop_etl_schema.MEASUREMENT m\n\tWHERE m.MEASUREMENT_CONCEPT_ID = 3003338\n\t  \tAND value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"plausibleUnitConceptIds","checkLevel":"CONCEPT","checkDescription":"The number and percent of records for a given CONCEPT_ID 3003338 (MCHC [MASS/VOLUME]) with implausible units (i.e., UNIT_CONCEPT_ID NOT IN  (8713)).","cdmTableName":"MEASUREMENT","cdmFieldName":"MEASUREMENT_CONCEPT_ID","conceptId":"3003338","sqlFile":"concept_plausible_unit_concept_ids.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"concept_plausibleunitconceptids_measurement_measurement_concept_id_3003338","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"MEASUREMENT_CONCEPT_ID=3003338 is missing from the MEASUREMENT table.","thresholdValue":5,"notesValue":"Approved UNIT_CONCEPT_IDs for the given MEASUREMENT_CONCEPT_ID"}],"Metadata":[{"cdmSourceName":"PASAR","cdmSourceAbbreviation":"PASAR","cdmHolder":"APAC_OHDSI","sourceDescription":"PASAR","sourceDocumentationReference":"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10834714","cdmEtlReference":"","sourceReleaseDate":"2024-08-09","cdmReleaseDate":"2024-11-06","cdmVersion":"v5.4","cdmVersionConceptId":756265,"vocabularyVersion":"","dqdVersion":"2.6.1"}],"Overview":{"countTotal":[2309],"countPassed":[2280],"countErrorFailed":[4],"countThresholdFailed":[29],"countOverallFailed":[29],"percentPassed":[98.74],"percentFailed":[1.26],"countTotalPlausibility":[800],"countTotalConformance":[1040],"countTotalCompleteness":[469],"countFailedPlausibility":[7],"countFailedConformance":[8],"countFailedCompleteness":[14],"countPassedPlausibility":[240],"countPassedConformance":[732],"countPassedCompleteness":[302]}}
