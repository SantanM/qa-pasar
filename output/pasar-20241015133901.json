{"startTimestamp":["2024-10-15 13:36:37"],"endTimestamp":["2024-10-15 13:39:01"],"executionTime":["2 mins"],"executionTimeSeconds":[2.3999],"CheckResults":[{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.050621 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PERSON table is present as expected based on the specification.","cdmTableName":"PERSON","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_person","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028499 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD table is present as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_observation_period","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036814 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE table is present as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_visit_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.052871 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if VISIT_DETAIL table is present as expected based on the specification.","cdmTableName":"VISIT_DETAIL","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_visit_detail","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035276 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CONDITION_OCCURRENCE table is present as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_condition_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032274 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE table is present as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_device_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.116180 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if OBSERVATION table is present as expected based on the specification.","cdmTableName":"OBSERVATION","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_observation","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028986 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DEATH table is present as expected based on the specification.","cdmTableName":"DEATH","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_death","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033220 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if NOTE table is present as expected based on the specification.","cdmTableName":"NOTE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_note","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039024 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if NOTE_NLP table is present as expected based on the specification.","cdmTableName":"NOTE_NLP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_note_nlp","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032045 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if SPECIMEN table is present as expected based on the specification.","cdmTableName":"SPECIMEN","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_specimen","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032551 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if FACT_RELATIONSHIP table is present as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_fact_relationship","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.037975 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if LOCATION table is present as expected based on the specification.","cdmTableName":"LOCATION","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_location","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028563 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CARE_SITE table is present as expected based on the specification.","cdmTableName":"CARE_SITE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_care_site","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039679 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PROVIDER table is present as expected based on the specification.","cdmTableName":"PROVIDER","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_provider","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.046103 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD table is present as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_payer_plan_period","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033995 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if COST table is present as expected based on the specification.","cdmTableName":"COST","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027570 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DOSE_ERA table is present as expected based on the specification.","cdmTableName":"DOSE_ERA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_dose_era","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039868 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if EPISODE table is present as expected based on the specification.","cdmTableName":"EPISODE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_episode","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035821 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if EPISODE_EVENT table is present as expected based on the specification.","cdmTableName":"EPISODE_EVENT","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_episode_event","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032268 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if METADATA table is present as expected based on the specification.","cdmTableName":"METADATA","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_metadata","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028382 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if CDM_SOURCE table is present as expected based on the specification.","cdmTableName":"CDM_SOURCE","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_cdm_source","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026459 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if SOURCE_TO_CONCEPT_MAP table is present as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_source_to_concept_map","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028982 secs","queryText":"/*********\nCDM_TABLE\nVerify the table exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        num_violated_rows \n    FROM\n    (\n        SELECT\n            CASE \n                WHEN COUNT(*) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmTable","checkLevel":"TABLE","checkDescription":"A yes or no value indicating if DRUG_STRENGTH table is present as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","sqlFile":"table_cdm_table.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"table_cdmtable_drug_strength","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.042112 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.OBSERVATION_PERIOD cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION_PERIOD table","cdmTableName":"OBSERVATION_PERIOD","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_observation_period","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.051172 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.VISIT_OCCURRENCE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_OCCURRENCE table","cdmTableName":"VISIT_OCCURRENCE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_visit_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":959,"pctViolatedRows":0.96,"numDenominatorRows":999,"executionTime":"0.043906 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.VISIT_DETAIL cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the VISIT_DETAIL table","cdmTableName":"VISIT_DETAIL","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_visit_detail","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":552,"pctViolatedRows":0.5526,"numDenominatorRows":999,"executionTime":"0.039426 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the CONDITION_OCCURRENCE table","cdmTableName":"CONDITION_OCCURRENCE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_condition_occurrence","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":955,"pctViolatedRows":0.956,"numDenominatorRows":999,"executionTime":"0.032655 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.DEVICE_EXPOSURE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DEVICE_EXPOSURE table","cdmTableName":"DEVICE_EXPOSURE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_device_exposure","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.512161 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.OBSERVATION cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the OBSERVATION table","cdmTableName":"OBSERVATION","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_observation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":95},{"numViolatedRows":856,"pctViolatedRows":0.8569,"numDenominatorRows":999,"executionTime":"0.031946 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.DEATH cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DEATH table","cdmTableName":"DEATH","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_death","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":719,"pctViolatedRows":0.7197,"numDenominatorRows":999,"executionTime":"0.042180 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.NOTE cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the NOTE table","cdmTableName":"NOTE","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_note","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":385,"pctViolatedRows":0.3854,"numDenominatorRows":999,"executionTime":"0.039749 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.SPECIMEN cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the SPECIMEN table","cdmTableName":"SPECIMEN","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_specimen","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.038011 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the PAYER_PLAN_PERIOD table","cdmTableName":"PAYER_PLAN_PERIOD","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_payer_plan_period","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.029810 secs","queryText":"/*********\nTable Level:  \nMEASURE_PERSON_COMPLETENESS\nDetermine what #/% of persons have at least one record in the cdmTable\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.person_id) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.person cdmTable\n\t\t\tLEFT JOIN omop_sqldev_schema.DOSE_ERA cdmTable2 \n\t\t\t    ON cdmTable.person_id = cdmTable2.person_id\n\t\tWHERE cdmTable2.person_id IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.person cdmTable\n) denominator\n;\n","checkName":"measurePersonCompleteness","checkLevel":"TABLE","checkDescription":"The number and percent of persons in the CDM that do not have at least one record in the DOSE_ERA table","cdmTableName":"DOSE_ERA","sqlFile":"table_person_completeness.sql","category":"Completeness","context":"Validation","checkId":"table_measurepersoncompleteness_dose_era","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026700 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026714 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_NAME is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025197 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_SOURCE_VALUE is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_care_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027133 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025920 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLACE_OF_SERVICE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLACE_OF_SERVICE_CONCEPT_ID is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025533 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLACE_OF_SERVICE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLACE_OF_SERVICE_SOURCE_VALUE is present in the CARE_SITE table as expected based on the specification.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_care_site_place_of_service_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024847 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_ETL_REFERENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_ETL_REFERENCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_ETL_REFERENCE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_ETL_REFERENCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_etl_reference","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027227 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_HOLDER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_HOLDER is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038235 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_RELEASE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_RELEASE_DATE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024635 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_SOURCE_ABBREVIATION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_SOURCE_ABBREVIATION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026531 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_SOURCE_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_SOURCE_NAME is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025422 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_VERSION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_VERSION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_version","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031953 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CDM_VERSION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CDM_VERSION_CONCEPT_ID is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029312 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DESCRIPTION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_DESCRIPTION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_DESCRIPTION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DESCRIPTION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_description","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031375 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DOCUMENTATION_REFERENCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_DOCUMENTATION_REFERENCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_DOCUMENTATION_REFERENCE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DOCUMENTATION_REFERENCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_documentation_reference","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026504 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_RELEASE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_RELEASE_DATE is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029872 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VOCABULARY_VERSION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VOCABULARY_VERSION is present in the CDM_SOURCE table as expected based on the specification.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026809 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030475 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_END_DATE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029142 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_END_DATETIME is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028507 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_OCCURRENCE_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031805 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_SOURCE_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.041325 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_SOURCE_VALUE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.037355 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_START_DATE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035517 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_START_DATETIME is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034801 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_STATUS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_STATUS_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031648 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_STATUS_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_STATUS_SOURCE_VALUE is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031898 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CONDITION_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CONDITION_TYPE_CONCEPT_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036753 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032087 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032207 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"STOP_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032099 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031315 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the CONDITION_OCCURRENCE table as expected based on the specification.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027373 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = AMOUNT_ALLOWED\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_ALLOWED) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_ALLOWED is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"AMOUNT_ALLOWED","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_amount_allowed","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026159 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_DOMAIN_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_DOMAIN_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_domain_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032348 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_EVENT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024686 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024587 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COST_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COST_TYPE_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_cost_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029123 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CURRENCY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CURRENCY_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_currency_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035520 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRG_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_drg_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026497 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRG_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRG_SOURCE_VALUE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"DRG_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_drg_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026072 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PATIENT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PATIENT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PATIENT is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PATIENT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_patient","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027134 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PAYER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PAYER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PAYER is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PAYER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_payer","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027542 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PRIMARY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_BY_PRIMARY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_BY_PRIMARY is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PRIMARY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_by_primary","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024254 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_DISPENSING_FEE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_DISPENSING_FEE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_DISPENSING_FEE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_DISPENSING_FEE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_dispensing_fee","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025163 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_INGREDIENT_COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_INGREDIENT_COST) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_INGREDIENT_COST is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_INGREDIENT_COST","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_ingredient_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027016 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COINSURANCE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_COINSURANCE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_COINSURANCE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COINSURANCE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_coinsurance","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026798 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COPAY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_COPAY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_COPAY is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COPAY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_copay","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026501 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_DEDUCTIBLE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAID_PATIENT_DEDUCTIBLE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAID_PATIENT_DEDUCTIBLE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_DEDUCTIBLE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_paid_patient_deductible","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027356 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_payer_plan_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026229 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(REVENUE_CODE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if REVENUE_CODE_CONCEPT_ID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_revenue_code_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024987 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(REVENUE_CODE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if REVENUE_CODE_SOURCE_VALUE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_revenue_code_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023410 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_CHARGE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_CHARGE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_CHARGE is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_CHARGE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_charge","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026709 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_COST\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_COST) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_COST is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_COST","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_cost","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025580 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_PAID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TOTAL_PAID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.COST cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TOTAL_PAID is present in the COST table as expected based on the specification.","cdmTableName":"COST","cdmFieldName":"TOTAL_PAID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_cost_total_paid","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027460 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030492 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_SOURCE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031358 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CAUSE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CAUSE_SOURCE_VALUE is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_cause_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027240 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_DATE is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024458 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_DATETIME is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025572 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEATH_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEATH_TYPE_CONCEPT_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023290 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEATH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DEATH table as expected based on the specification.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026069 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024347 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_END_DATE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026142 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_END_DATETIME is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025661 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025679 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_START_DATE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023067 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_EXPOSURE_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_EXPOSURE_START_DATETIME is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027516 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_SOURCE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026947 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_SOURCE_VALUE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025366 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEVICE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEVICE_TYPE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026339 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025431 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PRODUCTION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRODUCTION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRODUCTION_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PRODUCTION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_production_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036017 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026845 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025986 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIQUE_DEVICE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIQUE_DEVICE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIQUE_DEVICE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIQUE_DEVICE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unique_device_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025844 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026708 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_CONCEPT_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024621 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025563 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026316 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the DEVICE_EXPOSURE table as expected based on the specification.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026589 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_END_DATE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022094 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025164 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_ERA_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_ERA_START_DATE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_era_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029148 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOSE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOSE_VALUE is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_dose_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028581 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027769 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025246 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the DOSE_ERA table as expected based on the specification.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_dose_era_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024002 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_amount_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030206 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(AMOUNT_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if AMOUNT_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_amount_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027377 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = BOX_SIZE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(BOX_SIZE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if BOX_SIZE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"BOX_SIZE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_box_size","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027424 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DENOMINATOR_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DENOMINATOR_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_denominator_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029983 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DENOMINATOR_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DENOMINATOR_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_denominator_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025964 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DRUG_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DRUG_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_drug_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028584 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INGREDIENT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INGREDIENT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_ingredient_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028102 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INVALID_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INVALID_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INVALID_REASON is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INVALID_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_invalid_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029613 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NUMERATOR_UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NUMERATOR_UNIT_CONCEPT_ID is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_numerator_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026397 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NUMERATOR_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NUMERATOR_VALUE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_numerator_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027814 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_END_DATE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_valid_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030837 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_START_DATE is present in the DRUG_STRENGTH table as expected based on the specification.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_drug_strength_valid_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026805 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027916 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_END_DATE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027648 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_END_DATETIME is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025776 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026458 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_NUMBER is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026534 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_OBJECT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_OBJECT_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_object_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027251 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_PARENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_PARENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_PARENT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_PARENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_parent_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030676 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_SOURCE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024035 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_SOURCE_VALUE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027001 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_START_DATE is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025347 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_START_DATETIME is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026877 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_TYPE_CONCEPT_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_episode_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025507 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the EPISODE table as expected based on the specification.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025811 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_EVENT_FIELD_CONCEPT_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_episode_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026640 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EPISODE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EPISODE_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_episode_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031455 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if EVENT_ID is present in the EPISODE_EVENT table as expected based on the specification.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_episode_event_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027153 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOMAIN_CONCEPT_ID_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOMAIN_CONCEPT_ID_1 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_domain_concept_id_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024487 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DOMAIN_CONCEPT_ID_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DOMAIN_CONCEPT_ID_2 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_domain_concept_id_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026118 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FACT_ID_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FACT_ID_1 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_fact_id_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027365 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FACT_ID_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FACT_ID_2 is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_fact_id_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026167 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RELATIONSHIP_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RELATIONSHIP_CONCEPT_ID is present in the FACT_RELATIONSHIP table as expected based on the specification.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_fact_relationship_relationship_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024225 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADDRESS_1) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADDRESS_1 is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_1","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_address_1","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026388 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADDRESS_2) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADDRESS_2 is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_2","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_address_2","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029766 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = CITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CITY is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"CITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_city","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025288 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTRY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTRY_CONCEPT_ID is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_country_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031961 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTRY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTRY_SOURCE_VALUE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_country_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025856 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(COUNTY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if COUNTY is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"COUNTY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_county","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028646 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LATITUDE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LATITUDE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LATITUDE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LATITUDE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_latitude","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036986 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026238 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_SOURCE_VALUE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_location_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025504 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LONGITUDE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LONGITUDE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LONGITUDE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"LONGITUDE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_longitude","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030265 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = STATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STATE is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"STATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_state","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042391 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ZIP\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ZIP) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.LOCATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ZIP is present in the LOCATION table as expected based on the specification.","cdmTableName":"LOCATION","cdmFieldName":"ZIP","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_location_zip","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028244 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027986 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_DATE is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027194 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_DATETIME is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025327 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026032 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(METADATA_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if METADATA_TYPE_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_metadata_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024334 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NAME is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033009 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_CONCEPT_ID is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029488 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_NUMBER is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026408 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_STRING) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.METADATA cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_STRING is present in the METADATA table as expected based on the specification.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_metadata_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038255 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ENCODING_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ENCODING_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039832 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LANGUAGE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LANGUAGE_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035923 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_CLASS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_CLASS_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032450 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_DATE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034029 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_DATETIME is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036787 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_EVENT_FIELD_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036507 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_EVENT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031486 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.044991 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_SOURCE_VALUE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035608 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TEXT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TEXT is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034856 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TITLE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TITLE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TITLE is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TITLE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_title","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035350 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_TYPE_CONCEPT_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035352 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.049495 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036578 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035505 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the NOTE table as expected based on the specification.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027263 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LEXICAL_VARIANT) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LEXICAL_VARIANT is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_lexical_variant","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026735 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_DATE is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027206 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_DATETIME is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024889 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_SYSTEM\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NLP_SYSTEM) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NLP_SYSTEM is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_SYSTEM","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_nlp_system","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026329 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026750 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024086 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026950 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NOTE_NLP_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NOTE_NLP_SOURCE_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_note_nlp_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024386 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SECTION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SECTION_CONCEPT_ID is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_section_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027713 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SNIPPET\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SNIPPET) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SNIPPET is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"SNIPPET","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_snippet","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028777 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_EXISTS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_EXISTS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_EXISTS is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_EXISTS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_exists","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025988 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_MODIFIERS\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_MODIFIERS) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_MODIFIERS is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_MODIFIERS","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_modifiers","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024786 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_TEMPORAL\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TERM_TEMPORAL) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TERM_TEMPORAL is present in the NOTE_NLP table as expected based on the specification.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_TEMPORAL","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_note_nlp_term_temporal","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.232047 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBS_EVENT_FIELD_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBS_EVENT_FIELD_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_obs_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.151466 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.168298 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_DATE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.152903 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_DATETIME is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.343370 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_EVENT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_EVENT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_EVENT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.142979 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.207222 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_SOURCE_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.214345 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.162538 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_TYPE_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.148448 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.181121 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.183094 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUALIFIER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUALIFIER_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_qualifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.215555 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUALIFIER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUALIFIER_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_qualifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.186564 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.215813 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.176208 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_CONCEPT_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.164246 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_NUMBER) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_NUMBER is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.178753 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_AS_STRING) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_AS_STRING is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.227228 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALUE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALUE_SOURCE_VALUE is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.206795 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.201256 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the OBSERVATION table as expected based on the specification.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026962 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_END_DATE is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027420 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025100 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(OBSERVATION_PERIOD_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if OBSERVATION_PERIOD_START_DATE is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_observation_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027931 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERIOD_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERIOD_TYPE_CONCEPT_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_period_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022020 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the OBSERVATION_PERIOD table as expected based on the specification.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_observation_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026593 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = FAMILY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(FAMILY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if FAMILY_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"FAMILY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_family_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022094 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026443 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_END_DATE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024388 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026633 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_PLAN_PERIOD_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_PLAN_PERIOD_START_DATE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024939 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026801 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PAYER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PAYER_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_payer_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025877 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027802 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027249 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030345 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PLAN_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PLAN_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_plan_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027894 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026386 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026260 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPONSOR_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPONSOR_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_sponsor_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022679 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027578 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_SOURCE_CONCEPT_ID is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023208 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(STOP_REASON_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if STOP_REASON_SOURCE_VALUE is present in the PAYER_PLAN_PERIOD table as expected based on the specification.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_payer_plan_period_stop_reason_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026021 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(BIRTH_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if BIRTH_DATETIME is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_birth_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024014 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026783 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DAY_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DAY_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_day_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031071 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029106 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029313 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ETHNICITY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ETHNICITY_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_ethnicity_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027825 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025948 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030778 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022573 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(LOCATION_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if LOCATION_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028756 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(MONTH_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if MONTH_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_month_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024011 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025292 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PERSON_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_person_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027006 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027195 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023061 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_SOURCE_CONCEPT_ID is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022959 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(RACE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if RACE_SOURCE_VALUE is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029072 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(YEAR_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PERSON cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if YEAR_OF_BIRTH is present in the PERSON table as expected based on the specification.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024519 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024211 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = DEA\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DEA) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DEA is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"DEA","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_dea","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.022050 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025997 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024950 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(GENDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if GENDER_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024211 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = NPI\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(NPI) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if NPI is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"NPI","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_npi","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023268 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.023718 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_NAME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_NAME is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_NAME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_name","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026875 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_provider_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024729 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029477 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_SOURCE_CONCEPT_ID is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030011 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIALTY_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIALTY_SOURCE_VALUE is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024167 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(YEAR_OF_BIRTH) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if YEAR_OF_BIRTH is present in the PROVIDER table as expected based on the specification.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_provider_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024246 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = INVALID_REASON\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(INVALID_REASON) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if INVALID_REASON is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"INVALID_REASON","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_invalid_reason","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024007 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CODE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CODE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_code","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026372 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE_DESCRIPTION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CODE_DESCRIPTION) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CODE_DESCRIPTION is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE_DESCRIPTION","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_code_description","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027333 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_CONCEPT_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028063 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SOURCE_VOCABULARY_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SOURCE_VOCABULARY_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_VOCABULARY_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_source_vocabulary_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027841 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TARGET_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TARGET_CONCEPT_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_target_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027736 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(TARGET_VOCABULARY_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if TARGET_VOCABULARY_ID is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_target_vocabulary_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027904 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_END_DATE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_valid_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029366 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VALID_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VALID_START_DATE is present in the SOURCE_TO_CONCEPT_MAP table as expected based on the specification.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_source_to_concept_map_valid_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034582 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ANATOMIC_SITE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ANATOMIC_SITE_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_anatomic_site_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034811 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ANATOMIC_SITE_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ANATOMIC_SITE_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_anatomic_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032795 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISEASE_STATUS_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISEASE_STATUS_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_disease_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.041819 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISEASE_STATUS_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISEASE_STATUS_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_disease_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034116 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035918 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(QUANTITY) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if QUANTITY is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032203 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034489 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_DATE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032952 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_DATETIME is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033221 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033259 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_SOURCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_SOURCE_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_source_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034749 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032587 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(SPECIMEN_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if SPECIMEN_TYPE_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033633 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_CONCEPT_ID is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035363 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(UNIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if UNIT_SOURCE_VALUE is present in the SPECIMEN table as expected based on the specification.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_specimen_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027437 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027418 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027209 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026528 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027939 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028288 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PARENT_VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PARENT_VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_parent_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029730 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029712 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRECEDING_VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRECEDING_VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_preceding_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024136 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028841 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.024858 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_END_DATE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026259 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_END_DATETIME is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028257 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025793 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_SOURCE_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027476 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_SOURCE_VALUE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032184 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_START_DATE is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042809 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_START_DATETIME is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042319 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_DETAIL_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_DETAIL_TYPE_CONCEPT_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.045166 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the VISIT_DETAIL table as expected based on the specification.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042747 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.043703 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(ADMITTED_FROM_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if ADMITTED_FROM_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.046259 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(CARE_SITE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if CARE_SITE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042776 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.036627 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(DISCHARGED_TO_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if DISCHARGED_TO_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030892 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PERSON_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PERSON_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.028580 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PRECEDING_VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PRECEDING_VISIT_OCCURRENCE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032668 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(PROVIDER_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if PROVIDER_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030195 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027772 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_END_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_END_DATE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029937 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_END_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_END_DATETIME is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027067 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_OCCURRENCE_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_OCCURRENCE_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029264 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_SOURCE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_SOURCE_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.026732 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_SOURCE_VALUE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_SOURCE_VALUE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.027326 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_START_DATE) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_START_DATE is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033590 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_START_DATETIME) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_START_DATETIME is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029347 secs","queryText":"/*********\nCDM_FIELD\nVerify the field exists.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT num_violated_rows FROM (\n        SELECT\n            CASE \n                WHEN COUNT(VISIT_TYPE_CONCEPT_ID) = 0 THEN 0\n                ELSE 0\n            END AS num_violated_rows\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT 1 AS num_rows\n) denominator\n;\n","checkName":"cdmField","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if VISIT_TYPE_CONCEPT_ID is present in the VISIT_OCCURRENCE table as expected based on the specification.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_cdm_field.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_cdmfield_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.034622 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.CARE_SITE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n        WHERE cdmTable.CARE_SITE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the CARE_SITE that is considered not nullable.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.041338 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_HOLDER' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_HOLDER IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_HOLDER of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033657 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_RELEASE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_RELEASE_DATE of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033359 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_SOURCE_ABBREVIATION' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_SOURCE_ABBREVIATION IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_ABBREVIATION of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.029937 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_SOURCE_NAME' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_SOURCE_NAME IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_NAME of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038319 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.CDM_VERSION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION_CONCEPT_ID of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.042059 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.SOURCE_RELEASE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_RELEASE_DATE of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.035836 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.VOCABULARY_VERSION' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.VOCABULARY_VERSION IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VOCABULARY_VERSION of the CDM_SOURCE that is considered not nullable.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.050842 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.039576 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.038632 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATE of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.039440 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_TYPE_CONCEPT_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.039007 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_OCCURRENCE that is considered not nullable.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030218 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_DOMAIN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_DOMAIN_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_DOMAIN_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031308 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_EVENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_EVENT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_EVENT_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035913 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030867 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_TYPE_CONCEPT_ID of the COST that is considered not nullable.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030792 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.DEATH_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATE of the DEATH that is considered not nullable.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.042882 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEATH that is considered not nullable.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029395 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_CONCEPT_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030835 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029956 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATE of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032312 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_TYPE_CONCEPT_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031023 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEVICE_EXPOSURE that is considered not nullable.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033983 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_END_DATE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033607 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033267 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_START_DATE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031930 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_VALUE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_VALUE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_VALUE of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034663 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032985 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034209 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DOSE_ERA that is considered not nullable.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029721 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028603 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.INGREDIENT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the INGREDIENT_CONCEPT_ID of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034958 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_END_DATE of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032109 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_START_DATE of the DRUG_STRENGTH that is considered not nullable.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_drug_strength_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036787 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043190 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029891 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_OBJECT_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033029 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATE of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032915 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_TYPE_CONCEPT_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032179 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the EPISODE that is considered not nullable.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035059 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_EVENT_FIELD_CONCEPT_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033675 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EPISODE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035711 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EVENT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n        WHERE cdmTable.EVENT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EVENT_ID of the EPISODE_EVENT that is considered not nullable.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_episode_event_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031290 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_1 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_1 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031969 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_2 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_2 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034250 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.FACT_ID_1 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_1 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032397 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.FACT_ID_2 IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_2 of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031764 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.RELATIONSHIP_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RELATIONSHIP_CONCEPT_ID of the FACT_RELATIONSHIP that is considered not nullable.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029587 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.LOCATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.LOCATION cdmTable\n        WHERE cdmTable.LOCATION_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the LOCATION that is considered not nullable.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032847 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_CONCEPT_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033144 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033373 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_TYPE_CONCEPT_ID of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033363 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.NAME' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.METADATA cdmTable\n        WHERE cdmTable.NAME IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NAME of the METADATA that is considered not nullable.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_metadata_name","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.044731 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.ENCODING_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ENCODING_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.047053 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.LANGUAGE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LANGUAGE_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.048645 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_CLASS_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_CLASS_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.043863 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATE of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.037579 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.046311 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TEXT' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_TEXT IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TEXT of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.042862 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TYPE_CONCEPT_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.035702 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the NOTE that is considered not nullable.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030238 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.LEXICAL_VARIANT' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.LEXICAL_VARIANT IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LEXICAL_VARIANT of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_lexical_variant","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037365 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NLP_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NLP_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATE of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_nlp_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031349 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030208 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_NLP_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_ID of the NOTE_NLP that is considered not nullable.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.228344 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_CONCEPT_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.214025 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATE of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.105443 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.225345 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_TYPE_CONCEPT_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.240353 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION that is considered not nullable.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033781 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_END_DATE of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031823 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029569 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_START_DATE of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036059 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERIOD_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERIOD_TYPE_CONCEPT_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035964 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION_PERIOD that is considered not nullable.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_observation_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030370 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_END_DATE of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045410 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030687 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_START_DATE of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032573 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PAYER_PLAN_PERIOD that is considered not nullable.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030705 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033724 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.036409 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035727 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_CONCEPT_ID of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031845 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.YEAR_OF_BIRTH IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PERSON that is considered not nullable.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030670 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.PROVIDER_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.PROVIDER_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PROVIDER that is considered not nullable.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.038000 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CODE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CODE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_CODE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_CODE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CODE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_code","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CODE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.032737 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_CONCEPT_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.034754 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_VOCABULARY_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.SOURCE_VOCABULARY_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_VOCABULARY_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_VOCABULARY_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_source_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.034687 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.TARGET_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TARGET_CONCEPT_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.034309 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.TARGET_VOCABULARY_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TARGET_VOCABULARY_ID of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_target_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.033077 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_END_DATE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.031084 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALID_START_DATE of the SOURCE_TO_CONCEPT_MAP that is considered not nullable.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_source_to_concept_map_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040066 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039306 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_CONCEPT_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.042533 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATE of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.035279 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.045915 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_TYPE_CONCEPT_ID of the SPECIMEN that is considered not nullable.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031727 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034854 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_CONCEPT_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031542 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATE of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035742 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034033 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATE of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031582 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_TYPE_CONCEPT_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032918 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_DETAIL that is considered not nullable.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034308 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.PERSON_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030134 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_CONCEPT_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032046 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_END_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATE of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.046008 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036207 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATE IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATE of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034735 secs","queryText":"/*********\nFIELD_IS_REQUIRED\nCheck that values in fields where isRequired == TRUE are non-null\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_TYPE_CONCEPT_ID IS NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isRequired","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_TYPE_CONCEPT_ID of the VISIT_OCCURRENCE that is considered not nullable.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_is_not_nullable.sql","category":"Conformance","subcategory":"Relational","context":"Validation","checkId":"field_isrequired_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.033799 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032258 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CARE_SITE.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031815 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLACE_OF_SERVICE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLACE_OF_SERVICE_CONCEPT_ID in the CARE_SITE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033160 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CDM_VERSION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CDM_VERSION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CDM_VERSION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CDM_VERSION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CDM_VERSION_CONCEPT_ID in the CDM_SOURCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.072934 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.078224 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_OCCURRENCE_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.038671 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_SOURCE_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.081995 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_STATUS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_STATUS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_STATUS_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.079018 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CONDITION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CONDITION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CONDITION_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CONDITION_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CONDITION_TYPE_CONCEPT_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.091441 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.042570 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.042192 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.083462 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the CONDITION_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032379 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_EVENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_EVENT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_EVENT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_EVENT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_EVENT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032539 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031386 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COST_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COST_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COST_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COST_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COST_TYPE_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031291 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CURRENCY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CURRENCY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CURRENCY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CURRENCY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CURRENCY_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034904 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRG_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033171 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_PLAN_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_PLAN_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_PLAN_PERIOD_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030932 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.REVENUE_CODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.REVENUE_CODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.REVENUE_CODE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.REVENUE_CODE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the REVENUE_CODE_CONCEPT_ID in the COST is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034819 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CAUSE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CAUSE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CAUSE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CAUSE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CAUSE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.038542 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CAUSE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CAUSE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CAUSE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CAUSE_SOURCE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031460 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEATH_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEATH_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEATH_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEATH_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEATH_TYPE_CONCEPT_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.036974 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DEATH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.034305 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029629 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_EXPOSURE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_EXPOSURE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_EXPOSURE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_EXPOSURE_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030403 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029793 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DEVICE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DEVICE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DEVICE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DEVICE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DEVICE_TYPE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029413 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032314 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.036386 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.QUANTITY AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.QUANTITY) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.QUANTITY IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the QUANTITY in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.QUANTITY is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035424 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031314 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031663 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032514 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the DEVICE_EXPOSURE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_device_exposure_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028677 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOSE_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOSE_ERA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOSE_ERA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOSE_ERA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOSE_ERA_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030066 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029556 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033139 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the DOSE_ERA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031578 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.AMOUNT_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.AMOUNT_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.AMOUNT_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.AMOUNT_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the AMOUNT_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_amount_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034982 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = BOX_SIZE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.BOX_SIZE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.BOX_SIZE AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.BOX_SIZE AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.BOX_SIZE) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.BOX_SIZE IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the BOX_SIZE in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"BOX_SIZE","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_box_size","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.BOX_SIZE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034720 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DENOMINATOR_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DENOMINATOR_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DENOMINATOR_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_denominator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030411 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DRUG_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DRUG_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DRUG_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032753 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.INGREDIENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.INGREDIENT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.INGREDIENT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.INGREDIENT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the INGREDIENT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028913 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NUMERATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NUMERATOR_UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NUMERATOR_UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NUMERATOR_UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NUMERATOR_UNIT_CONCEPT_ID in the DRUG_STRENGTH is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_drug_strength_numerator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031415 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033300 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_NUMBER AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_NUMBER AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_NUMBER) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_NUMBER IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_NUMBER in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033031 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_OBJECT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_OBJECT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_OBJECT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_OBJECT_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033067 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_SOURCE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031499 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_TYPE_CONCEPT_ID in the EPISODE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032840 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE_EVENT\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the EPISODE_EVENT_FIELD_CONCEPT_ID in the EPISODE_EVENT is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035179 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOMAIN_CONCEPT_ID_1) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOMAIN_CONCEPT_ID_1 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOMAIN_CONCEPT_ID_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031427 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DOMAIN_CONCEPT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DOMAIN_CONCEPT_ID_2) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DOMAIN_CONCEPT_ID_2 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DOMAIN_CONCEPT_ID_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033468 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.FACT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.FACT_ID_1 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.FACT_ID_1) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.FACT_ID_1 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the FACT_ID_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033324 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.FACT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.FACT_ID_2 AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.FACT_ID_2) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.FACT_ID_2 IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the FACT_ID_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029930 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RELATIONSHIP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RELATIONSHIP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RELATIONSHIP_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RELATIONSHIP_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RELATIONSHIP_CONCEPT_ID in the FACT_RELATIONSHIP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030934 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.COUNTRY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.COUNTRY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.COUNTRY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.COUNTRY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the COUNTRY_CONCEPT_ID in the LOCATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031936 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the LOCATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035034 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031149 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032638 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.METADATA_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.METADATA_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.METADATA_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.METADATA_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the METADATA_TYPE_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031852 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VALUE_AS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VALUE_AS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VALUE_AS_CONCEPT_ID in the METADATA is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.093757 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ENCODING_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ENCODING_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ENCODING_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ENCODING_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ENCODING_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.091941 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LANGUAGE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LANGUAGE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LANGUAGE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LANGUAGE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LANGUAGE_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.091374 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_CLASS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_CLASS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_CLASS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_CLASS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_CLASS_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.046910 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_EVENT_FIELD_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.089404 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.089022 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_TYPE_CONCEPT_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.089546 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.055366 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.044017 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.096984 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the NOTE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032648 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034693 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032536 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030707 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the NOTE_NLP_SOURCE_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033864 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SECTION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SECTION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SECTION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SECTION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SECTION_CONCEPT_ID in the NOTE_NLP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.305371 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBS_EVENT_FIELD_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBS_EVENT_FIELD_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"1.244713 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"1.451917 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.286378 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_SOURCE_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"1.524741 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_TYPE_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"2.089780 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.567493 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.252087 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.QUALIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.QUALIFIER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.QUALIFIER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.QUALIFIER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the QUALIFIER_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.274359 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.272092 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"1.502055 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the OBSERVATION is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031985 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.OBSERVATION_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.OBSERVATION_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.OBSERVATION_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.OBSERVATION_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the OBSERVATION_PERIOD_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_observation_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043471 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERIOD_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERIOD_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERIOD_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERIOD_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERIOD_TYPE_CONCEPT_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030792 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the OBSERVATION_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_observation_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030618 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030772 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_PLAN_PERIOD_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_PLAN_PERIOD_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_PLAN_PERIOD_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_PLAN_PERIOD_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033788 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PAYER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PAYER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PAYER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PAYER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PAYER_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029881 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032387 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLAN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLAN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLAN_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLAN_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLAN_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031267 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PLAN_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PLAN_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PLAN_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PLAN_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PLAN_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031023 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPONSOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPONSOR_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPONSOR_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPONSOR_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPONSOR_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037772 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPONSOR_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPONSOR_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPONSOR_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPONSOR_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032274 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.STOP_REASON_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.STOP_REASON_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.STOP_REASON_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.STOP_REASON_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the STOP_REASON_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032029 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.STOP_REASON_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the STOP_REASON_SOURCE_CONCEPT_ID in the PAYER_PLAN_PERIOD is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031302 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_care_site_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.CARE_SITE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031655 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DAY_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DAY_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DAY_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DAY_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DAY_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032736 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ETHNICITY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ETHNICITY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ETHNICITY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ETHNICITY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ETHNICITY_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030972 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ETHNICITY_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ETHNICITY_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_ethnicity_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035677 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033628 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035470 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.LOCATION_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.LOCATION_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.LOCATION_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the LOCATION_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.038619 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.MONTH_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.MONTH_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.MONTH_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.MONTH_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the MONTH_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032694 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031115 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.036098 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RACE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RACE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RACE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RACE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RACE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033690 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.RACE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.RACE_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.RACE_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.RACE_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the RACE_SOURCE_CONCEPT_ID in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.038496 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.YEAR_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.YEAR_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the YEAR_OF_BIRTH in the PERSON is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032999 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032155 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.042965 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.GENDER_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.GENDER_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the GENDER_SOURCE_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_gender_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031176 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.039163 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIALTY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIALTY_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIALTY_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIALTY_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIALTY_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032638 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIALTY_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIALTY_SOURCE_CONCEPT_ID in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032735 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.YEAR_OF_BIRTH AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.YEAR_OF_BIRTH) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.YEAR_OF_BIRTH IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the YEAR_OF_BIRTH in the PROVIDER is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_provider_year_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.YEAR_OF_BIRTH is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.033059 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SOURCE_CONCEPT_ID in the SOURCE_TO_CONCEPT_MAP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.033046 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.TARGET_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.TARGET_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.TARGET_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.TARGET_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the TARGET_CONCEPT_ID in the SOURCE_TO_CONCEPT_MAP is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.046782 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ANATOMIC_SITE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ANATOMIC_SITE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ANATOMIC_SITE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ANATOMIC_SITE_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.045502 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISEASE_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISEASE_STATUS_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISEASE_STATUS_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISEASE_STATUS_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISEASE_STATUS_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.097625 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.085117 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.094348 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.096088 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.SPECIMEN_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.SPECIMEN_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.SPECIMEN_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the SPECIMEN_TYPE_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039964 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.UNIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.UNIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the UNIT_CONCEPT_ID in the SPECIMEN is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033515 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032249 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISCHARGED_TO_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISCHARGED_TO_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033257 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PARENT_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PARENT_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PARENT_VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PARENT_VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PARENT_VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_parent_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PARENT_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032726 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031075 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PRECEDING_VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PRECEDING_VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PRECEDING_VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_preceding_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035780 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031138 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032209 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031348 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_DETAIL_TYPE_CONCEPT_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032943 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the VISIT_DETAIL is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032515 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.ADMITTED_FROM_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.ADMITTED_FROM_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.ADMITTED_FROM_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the ADMITTED_FROM_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032680 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.CARE_SITE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.CARE_SITE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.CARE_SITE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the CARE_SITE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036608 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.DISCHARGED_TO_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.DISCHARGED_TO_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the DISCHARGED_TO_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036932 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PERSON_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PERSON_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PERSON_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PERSON_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032608 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PRECEDING_VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PRECEDING_VISIT_OCCURRENCE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036234 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.PROVIDER_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.PROVIDER_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.PROVIDER_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the PROVIDER_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.037041 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034539 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_OCCURRENCE_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_OCCURRENCE_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_OCCURRENCE_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034300 secs","queryText":"/*********\nFIELD_CDM_DATATYPE\nIn some SQL dialects, check that integer fields only contain digits.\nIn others, check that integer fields are numeric and contain no decimal points\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE \n\t\t\t(CASE WHEN (CAST(cdmTable.VISIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 \n\t\t\tOR (CASE WHEN (CAST(cdmTable.VISIT_SOURCE_CONCEPT_ID AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 1 \n\t\t\t\tAND STRPOS(CAST(ABS(cdmTable.VISIT_SOURCE_CONCEPT_ID) AS varchar),'.') != 0))\n\t\t\tAND cdmTable.VISIT_SOURCE_CONCEPT_ID IS NOT NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE\n) denominator\n;\n","checkName":"cdmDatatype","checkLevel":"FIELD","checkDescription":"A yes or no value indicating if the VISIT_SOURCE_CONCEPT_ID in the VISIT_OCCURRENCE is the expected data type based on the specification.  Only checks integer fields.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_cdm_datatype.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_cdmdatatype_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.034312 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.CARE_SITE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n        WHERE cdmTable.CARE_SITE_ID IN ( \n            SELECT \n                CARE_SITE_ID \n            FROM omop_sqldev_schema.CARE_SITE\n            GROUP BY CARE_SITE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the CARE_SITE_ID field of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.074600 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_OCCURRENCE_ID IN ( \n            SELECT \n                CONDITION_OCCURRENCE_ID \n            FROM omop_sqldev_schema.CONDITION_OCCURRENCE\n            GROUP BY CONDITION_OCCURRENCE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the CONDITION_OCCURRENCE_ID field of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045178 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_ID IN ( \n            SELECT \n                COST_ID \n            FROM omop_sqldev_schema.COST\n            GROUP BY COST_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the COST_ID field of the COST.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.045752 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_ID IN ( \n            SELECT \n                DEVICE_EXPOSURE_ID \n            FROM omop_sqldev_schema.DEVICE_EXPOSURE\n            GROUP BY DEVICE_EXPOSURE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DEVICE_EXPOSURE_ID field of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034283 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_ID IN ( \n            SELECT \n                DOSE_ERA_ID \n            FROM omop_sqldev_schema.DOSE_ERA\n            GROUP BY DOSE_ERA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the DOSE_ERA_ID field of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032532 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_ID IN ( \n            SELECT \n                EPISODE_ID \n            FROM omop_sqldev_schema.EPISODE\n            GROUP BY EPISODE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the EPISODE_ID field of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035550 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.LOCATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.LOCATION cdmTable\n        WHERE cdmTable.LOCATION_ID IN ( \n            SELECT \n                LOCATION_ID \n            FROM omop_sqldev_schema.LOCATION\n            GROUP BY LOCATION_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the LOCATION_ID field of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031304 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.METADATA cdmTable\n        WHERE cdmTable.METADATA_ID IN ( \n            SELECT \n                METADATA_ID \n            FROM omop_sqldev_schema.METADATA\n            GROUP BY METADATA_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the METADATA_ID field of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.051967 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n        WHERE cdmTable.NOTE_ID IN ( \n            SELECT \n                NOTE_ID \n            FROM omop_sqldev_schema.NOTE\n            GROUP BY NOTE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the NOTE_ID field of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033763 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n        WHERE cdmTable.NOTE_NLP_ID IN ( \n            SELECT \n                NOTE_NLP_ID \n            FROM omop_sqldev_schema.NOTE_NLP\n            GROUP BY NOTE_NLP_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the NOTE_NLP_ID field of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.388660 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_ID IN ( \n            SELECT \n                OBSERVATION_ID \n            FROM omop_sqldev_schema.OBSERVATION\n            GROUP BY OBSERVATION_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the OBSERVATION_ID field of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031947 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_ID IN ( \n            SELECT \n                OBSERVATION_PERIOD_ID \n            FROM omop_sqldev_schema.OBSERVATION_PERIOD\n            GROUP BY OBSERVATION_PERIOD_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the OBSERVATION_PERIOD_ID field of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_observation_period_observation_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033280 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_ID IN ( \n            SELECT \n                PAYER_PLAN_PERIOD_ID \n            FROM omop_sqldev_schema.PAYER_PLAN_PERIOD\n            GROUP BY PAYER_PLAN_PERIOD_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PAYER_PLAN_PERIOD_ID field of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032215 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PERSON_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.PERSON_ID IN ( \n            SELECT \n                PERSON_ID \n            FROM omop_sqldev_schema.PERSON\n            GROUP BY PERSON_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PERSON_ID field of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030791 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.PROVIDER_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.PROVIDER_ID IN ( \n            SELECT \n                PROVIDER_ID \n            FROM omop_sqldev_schema.PROVIDER\n            GROUP BY PROVIDER_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the PROVIDER_ID field of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.085711 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_ID IN ( \n            SELECT \n                SPECIMEN_ID \n            FROM omop_sqldev_schema.SPECIMEN\n            GROUP BY SPECIMEN_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the SPECIMEN_ID field of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034221 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_ID IN ( \n            SELECT \n                VISIT_DETAIL_ID \n            FROM omop_sqldev_schema.VISIT_DETAIL\n            GROUP BY VISIT_DETAIL_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the VISIT_DETAIL_ID field of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036521 secs","queryText":"/*********\nFIELD_IS_PRIMARY_KEY\nPrimary Key - verify that values in fields where isPrimaryKey == Yes are unique\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_OCCURRENCE_ID IN ( \n            SELECT \n                VISIT_OCCURRENCE_ID \n            FROM omop_sqldev_schema.VISIT_OCCURRENCE\n            GROUP BY VISIT_OCCURRENCE_ID\n            HAVING COUNT(*) > 1 \n        )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isPrimaryKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a duplicate value in the VISIT_OCCURRENCE_ID field of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_is_primary_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isprimarykey_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032509 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.LOCATION_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.LOCATION fkTable \n                ON cdmTable.LOCATION_ID = fkTable.LOCATION_ID\n        WHERE fkTable.LOCATION_ID IS NULL \n            AND cdmTable.LOCATION_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LOCATION_ID field in the CARE_SITE table that does not exist in the LOCATION table.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_care_site_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CARE_SITE.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031584 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLACE_OF_SERVICE_CONCEPT_ID field in the CARE_SITE table that does not exist in the CONCEPT table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032113 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CDM_VERSION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CDM_VERSION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table that does not exist in the CONCEPT table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.082250 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.040869 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_SOURCE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.085433 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_STATUS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_STATUS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.083782 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CONDITION_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CONDITION_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.042567 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the CONDITION_OCCURRENCE table that does not exist in the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.040014 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the CONDITION_OCCURRENCE table that does not exist in the PROVIDER table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.036086 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.048781 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033175 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\nfkTableName = DOMAIN\nfkFieldName = DOMAIN_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_DOMAIN_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.COST cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.DOMAIN fkTable\n                ON cdmTable.COST_DOMAIN_ID = fkTable.DOMAIN_ID\n        WHERE fkTable.DOMAIN_ID IS NULL \n            AND cdmTable.COST_DOMAIN_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COST_DOMAIN_ID field in the COST table that does not exist in the DOMAIN table.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032288 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.COST cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.COST_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.COST_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COST_TYPE_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034825 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.COST cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CURRENCY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CURRENCY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CURRENCY_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035263 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.DRG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.COST cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DRG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRG_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032785 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.COST cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.REVENUE_CODE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.REVENUE_CODE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the REVENUE_CODE_CONCEPT_ID field in the COST table that does not exist in the CONCEPT table.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031975 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CAUSE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CAUSE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CAUSE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.035877 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.CAUSE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CAUSE_SOURCE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032481 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DEATH_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEATH_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEATH_TYPE_CONCEPT_ID field in the DEATH table that does not exist in the CONCEPT table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.034636 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DEATH table that does not exist in the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033912 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031502 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_SOURCE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035651 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DEVICE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DEVICE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032330 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DEVICE_EXPOSURE table that does not exist in the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030927 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the DEVICE_EXPOSURE table that does not exist in the PROVIDER table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029909 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030005 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_SOURCE_CONCEPT_ID field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.029507 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the DEVICE_EXPOSURE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030063 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the DEVICE_EXPOSURE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_device_exposure_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.027684 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that does not exist in the CONCEPT table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032540 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the DOSE_ERA table that does not exist in the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030599 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DOSE_ERA table that does not exist in the CONCEPT table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030307 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = AMOUNT_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.AMOUNT_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.AMOUNT_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the AMOUNT_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"AMOUNT_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_amount_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.AMOUNT_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029963 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DENOMINATOR_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DENOMINATOR_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DENOMINATOR_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DENOMINATOR_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DENOMINATOR_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_denominator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DENOMINATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036008 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DRUG_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DRUG_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031566 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.INGREDIENT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.INGREDIENT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the INGREDIENT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032215 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = NUMERATOR_UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NUMERATOR_UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NUMERATOR_UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NUMERATOR_UNIT_CONCEPT_ID field in the DRUG_STRENGTH table that does not exist in the CONCEPT table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"NUMERATOR_UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_drug_strength_numerator_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.NUMERATOR_UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039356 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035106 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_OBJECT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_OBJECT_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033114 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_SOURCE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035572 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035542 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the EPISODE table that does not exist in the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031981 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table that does not exist in the CONCEPT table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034242 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\nfkTableName = EPISODE\nfkFieldName = EPISODE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.EPISODE fkTable \n                ON cdmTable.EPISODE_ID = fkTable.EPISODE_ID\n        WHERE fkTable.EPISODE_ID IS NULL \n            AND cdmTable.EPISODE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_ID field in the EPISODE_EVENT table that does not exist in the EPISODE table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037262 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DOMAIN_CONCEPT_ID_1 = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DOMAIN_CONCEPT_ID_1 IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DOMAIN_CONCEPT_ID_1 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033263 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DOMAIN_CONCEPT_ID_2 = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DOMAIN_CONCEPT_ID_2 IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DOMAIN_CONCEPT_ID_2 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033907 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.RELATIONSHIP_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RELATIONSHIP_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RELATIONSHIP_CONCEPT_ID field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034381 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.LOCATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.COUNTRY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.COUNTRY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COUNTRY_CONCEPT_ID field in the LOCATION table that does not exist in the CONCEPT table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032128 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.METADATA_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.METADATA_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the METADATA_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032859 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.METADATA_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.METADATA_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the METADATA_TYPE_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034484 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.METADATA cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VALUE_AS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the METADATA table that does not exist in the CONCEPT table.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.099857 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ENCODING_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ENCODING_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ENCODING_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.099258 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.LANGUAGE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.LANGUAGE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LANGUAGE_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.094738 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_CLASS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_CLASS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_CLASS_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.042996 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_EVENT_FIELD_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.099471 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_TYPE_CONCEPT_ID field in the NOTE table that does not exist in the CONCEPT table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.044780 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the NOTE table that does not exist in the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.051352 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the NOTE table that does not exist in the PROVIDER table.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.046195 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the NOTE table that does not exist in the VISIT_DETAIL table.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.051288 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the NOTE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031143 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_NLP_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_NLP_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_NLP_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033116 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_NLP_SOURCE_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035937 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SECTION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SECTION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SECTION_CONCEPT_ID field in the NOTE_NLP table that does not exist in the CONCEPT table.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.304735 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.OBS_EVENT_FIELD_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBS_EVENT_FIELD_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"2.509371 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.670223 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_SOURCE_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"2.474903 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.454125 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the OBSERVATION table that does not exist in the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.456157 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the OBSERVATION table that does not exist in the PROVIDER table.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.320445 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.QUALIFIER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.QUALIFIER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the QUALIFIER_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.275975 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.259207 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VALUE_AS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VALUE_AS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VALUE_AS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VALUE_AS_CONCEPT_ID field in the OBSERVATION table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.279852 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_ID field in the OBSERVATION table that does not exist in the VISIT_DETAIL table.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.375390 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the OBSERVATION table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_visit_occurrence_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031586 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PERIOD_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PERIOD_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031410 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the OBSERVATION_PERIOD table that does not exist in the PERSON table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_observation_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031706 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PAYER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PAYER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PAYER_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033670 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PAYER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PAYER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PAYER_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031628 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the PAYER_PLAN_PERIOD table that does not exist in the PERSON table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031159 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PLAN_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLAN_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLAN_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031571 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.PLAN_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.PLAN_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PLAN_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031381 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPONSOR_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPONSOR_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPONSOR_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033467 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPONSOR_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPONSOR_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032784 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.STOP_REASON_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.STOP_REASON_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the STOP_REASON_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031533 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.STOP_REASON_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the STOP_REASON_SOURCE_CONCEPT_ID field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033982 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the PERSON table that does not exist in the CARE_SITE table.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_care_site_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.CARE_SITE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033111 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ETHNICITY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ETHNICITY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032204 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ETHNICITY_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_ethnicity_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.036798 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.049161 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033893 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.LOCATION_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.LOCATION fkTable \n                ON cdmTable.LOCATION_ID = fkTable.LOCATION_ID\n        WHERE fkTable.LOCATION_ID IS NULL \n            AND cdmTable.LOCATION_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the LOCATION_ID field in the PERSON table that does not exist in the LOCATION table.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.LOCATION_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032168 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the PERSON table that does not exist in the PROVIDER table.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034253 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.RACE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RACE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033522 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.RACE_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.RACE_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_SOURCE_CONCEPT_ID field in the PERSON table that does not exist in the CONCEPT table.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.035915 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the PROVIDER table that does not exist in the CARE_SITE table.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_care_site_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033929 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032725 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.GENDER_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.GENDER_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_SOURCE_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_gender_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.034615 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPECIALTY_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIALTY_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIALTY_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032894 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPECIALTY_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIALTY_SOURCE_CONCEPT_ID field in the PROVIDER table that does not exist in the CONCEPT table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.035132 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SOURCE_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the CONCEPT table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.039631 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.TARGET_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.TARGET_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the TARGET_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the CONCEPT table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":1329,"pctViolatedRows":1,"numDenominatorRows":1329,"executionTime":"0.033744 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_VOCABULARY_ID\nfkTableName = VOCABULARY\nfkFieldName = VOCABULARY_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VOCABULARY fkTable\n                ON cdmTable.TARGET_VOCABULARY_ID = fkTable.VOCABULARY_ID\n        WHERE fkTable.VOCABULARY_ID IS NULL \n            AND cdmTable.TARGET_VOCABULARY_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the TARGET_VOCABULARY_ID field in the SOURCE_TO_CONCEPT_MAP table that does not exist in the VOCABULARY table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_VOCABULARY_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_source_to_concept_map_target_vocabulary_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_VOCABULARY_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.043174 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ANATOMIC_SITE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ANATOMIC_SITE_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.046021 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DISEASE_STATUS_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISEASE_STATUS_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISEASE_STATUS_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.046836 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the SPECIMEN table that does not exist in the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.101077 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPECIMEN_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIMEN_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.103920 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.043758 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.UNIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.UNIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the SPECIMEN table that does not exist in the CONCEPT table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035148 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ADMITTED_FROM_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032455 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the VISIT_DETAIL table that does not exist in the CARE_SITE table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.037521 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DISCHARGED_TO_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031141 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.PARENT_VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.PARENT_VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PARENT_VISIT_DETAIL_ID field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_parent_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PARENT_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030742 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the VISIT_DETAIL table that does not exist in the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031788 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_DETAIL fkTable \n                ON cdmTable.PRECEDING_VISIT_DETAIL_ID = fkTable.VISIT_DETAIL_ID\n        WHERE fkTable.VISIT_DETAIL_ID IS NULL \n            AND cdmTable.PRECEDING_VISIT_DETAIL_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PRECEDING_VISIT_DETAIL_ID field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_preceding_visit_detail_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030739 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the VISIT_DETAIL table that does not exist in the PROVIDER table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033558 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031166 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_SOURCE_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.039035 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032872 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_OCCURRENCE_ID field in the VISIT_DETAIL table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033882 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.ADMITTED_FROM_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.ADMITTED_FROM_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031760 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CARE_SITE fkTable \n                ON cdmTable.CARE_SITE_ID = fkTable.CARE_SITE_ID\n        WHERE fkTable.CARE_SITE_ID IS NULL \n            AND cdmTable.CARE_SITE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CARE_SITE_ID field in the VISIT_OCCURRENCE table that does not exist in the CARE_SITE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033356 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.DISCHARGED_TO_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.DISCHARGED_TO_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035351 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PERSON fkTable \n                ON cdmTable.PERSON_ID = fkTable.PERSON_ID\n        WHERE fkTable.PERSON_ID IS NULL \n            AND cdmTable.PERSON_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERSON_ID field in the VISIT_OCCURRENCE table that does not exist in the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034980 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.VISIT_OCCURRENCE fkTable \n                ON cdmTable.PRECEDING_VISIT_OCCURRENCE_ID = fkTable.VISIT_OCCURRENCE_ID\n        WHERE fkTable.VISIT_OCCURRENCE_ID IS NULL \n            AND cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PRECEDING_VISIT_OCCURRENCE_ID field in the VISIT_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034933 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.PROVIDER fkTable \n                ON cdmTable.PROVIDER_ID = fkTable.PROVIDER_ID\n        WHERE fkTable.PROVIDER_ID IS NULL \n            AND cdmTable.PROVIDER_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PROVIDER_ID field in the VISIT_OCCURRENCE table that does not exist in the PROVIDER table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_provider_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.PROVIDER_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032750 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035347 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_SOURCE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_SOURCE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_SOURCE_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036263 secs","queryText":"/*********\nIS_FOREIGN_KEY\nForeign key check.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN \n                omop_sqldev_schema.CONCEPT fkTable\n                ON cdmTable.VISIT_TYPE_CONCEPT_ID = fkTable.CONCEPT_ID\n        WHERE fkTable.CONCEPT_ID IS NULL \n            AND cdmTable.VISIT_TYPE_CONCEPT_ID IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isForeignKey","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"is_foreign_key.sql","category":"Conformance","subcategory":"Relational","context":"Verification","checkId":"field_isforeignkey_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031310 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\nfkDomain = Metadata\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.CDM_VERSION_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Metadata')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table that do not conform to the METADATA domain.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.048873 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nfkDomain = Condition\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Condition')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the CONDITION domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.044393 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\nfkDomain = Condition Status\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.CONDITION_STATUS_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Condition Status')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the CONDITION STATUS domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.045162 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.CONDITION_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032623 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DEATH_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEATH_TYPE_CONCEPT_ID field in the DEATH table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033630 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\nfkDomain = Device\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DEVICE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Device')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the DEVICE domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032477 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DEVICE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032046 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table that do not conform to the UNIT domain.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034087 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that do not conform to the DRUG domain.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030537 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the DOSE_ERA table that do not conform to the UNIT domain.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033411 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = DRUG_CONCEPT_ID\nfkDomain = Drug\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Drug')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DRUG_STRENGTH table that do not conform to the DRUG domain.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_drug_strength_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.DRUG_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032382 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\nfkDomain = Episode\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.EPISODE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Episode')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_CONCEPT_ID field in the EPISODE table that do not conform to the EPISODE domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033643 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\nfkDomain = Procedure OR Regimen\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.EPISODE_OBJECT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Procedure OR Regimen')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_OBJECT_CONCEPT_ID field in the EPISODE table that do not conform to the PROCEDURE OR REGIMEN domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032253 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.EPISODE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031472 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\nfkDomain = Metadata\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Metadata')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table that do not conform to the METADATA domain.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032782 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\nfkDomain = Geography\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.LOCATION cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.COUNTRY_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Geography')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the COUNTRY_CONCEPT_ID field in the LOCATION table that do not conform to the GEOGRAPHY domain.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.051453 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.NOTE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.NOTE_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the NOTE_TYPE_CONCEPT_ID field in the NOTE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.414697 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"2.907204 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\nfkDomain = Unit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Unit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the UNIT_CONCEPT_ID field in the OBSERVATION table that do not conform to the UNIT domain.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031289 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.PERIOD_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032439 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\nfkDomain = Ethnicity\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.ETHNICITY_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Ethnicity')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ETHNICITY_CONCEPT_ID field in the PERSON table that do not conform to the ETHNICITY domain.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032366 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\nfkDomain = Gender\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Gender')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PERSON table that do not conform to the GENDER domain.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033010 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\nfkDomain = Race\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.RACE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Race')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the RACE_CONCEPT_ID field in the PERSON table that do not conform to the RACE domain.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.029998 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\nfkDomain = Gender\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Gender')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the GENDER_CONCEPT_ID field in the PROVIDER table that do not conform to the GENDER domain.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.062504 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033261 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032589 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030946 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.VISIT_DETAIL_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the VISIT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.040480 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035985 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032719 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031963 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\nfkDomain = Visit\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.VISIT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Visit')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the VISIT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033647 secs","queryText":"/*********\nFIELD_FK_DOMAIN\nCheck that all standard concept IDs belong to the appropriate domain for a given table and field.\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\nfkDomain = Type Concept\n**********/\nSELECT \n    num_violated_rows, \n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n            ON cdmTable.VISIT_TYPE_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND co.domain_id NOT IN ('Type Concept')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"fkDomain","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table that do not conform to the TYPE CONCEPT domain.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_fk_domain.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_fkdomain_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034850 secs","queryText":"/*********\nFK_CLASS\nCheck that drug concepts in DRUG_ERA.drug_concept_id, DOSE_ERA.drug_concept_id, \nand DRUG_STRENGTH.ingredient_concept_id are of class 'Ingredient'. \nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\nfkClass = Ingredient\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n                ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND (co.concept_class_id != 'Ingredient') \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"fkClass","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the DRUG_CONCEPT_ID field in the DOSE_ERA table that do not conform to the INGREDIENT class.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_fk_class.sql","category":"Conformance","subcategory":"Computational","context":"Verification","checkId":"field_fkclass_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034892 secs","queryText":"/*********\nFK_CLASS\nCheck that drug concepts in DRUG_ERA.drug_concept_id, DOSE_ERA.drug_concept_id, \nand DRUG_STRENGTH.ingredient_concept_id are of class 'Ingredient'. \nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = INGREDIENT_CONCEPT_ID\nfkClass = Ingredient\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.INGREDIENT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n            LEFT JOIN omop_sqldev_schema.concept co\n                ON cdmTable.INGREDIENT_CONCEPT_ID = co.concept_id\n        WHERE co.concept_id != 0 \n            AND (co.concept_class_id != 'Ingredient') \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"fkClass","checkLevel":"FIELD","checkDescription":"The number and percent of records that have a value in the INGREDIENT_CONCEPT_ID field in the DRUG_STRENGTH table that do not conform to the INGREDIENT class.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"INGREDIENT_CONCEPT_ID","sqlFile":"field_fk_class.sql","category":"Conformance","subcategory":"Computational","context":"Verification","checkId":"field_fkclass_drug_strength_ingredient_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.INGREDIENT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":111,"pctViolatedRows":1,"numDenominatorRows":111,"executionTime":"0.032503 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PLACE_OF_SERVICE_CONCEPT_ID field in the CARE_SITE table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_care_site_place_of_service_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1,"pctViolatedRows":1,"numDenominatorRows":1,"executionTime":"0.032243 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.CDM_VERSION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CDM_VERSION_CONCEPT_ID field in the CDM_SOURCE table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_cdm_source_cdm_version_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.042661 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.CONDITION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.045153 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.CONDITION_STATUS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_STATUS_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_status_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.046633 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.CONDITION_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CONDITION_TYPE_CONCEPT_ID field in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_condition_occurrence_condition_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034328 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.COST_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the COST_TYPE_CONCEPT_ID field in the COST table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.046482 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.CAUSE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the CAUSE_CONCEPT_ID field in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.033710 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DEATH_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEATH_TYPE_CONCEPT_ID field in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_death_death_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.034952 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DEVICE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEVICE_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_device_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.032826 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DEVICE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DEVICE_TYPE_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_device_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030942 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030926 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DRUG_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DRUG_CONCEPT_ID field in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033227 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032878 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.EPISODE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_CONCEPT_ID field in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032876 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.EPISODE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_TYPE_CONCEPT_ID field in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030971 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the EPISODE_EVENT_FIELD_CONCEPT_ID field in the EPISODE_EVENT table.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040916 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.COUNTRY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the COUNTRY_CONCEPT_ID field in the LOCATION table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.083632 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.ENCODING_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ENCODING_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_encoding_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.076558 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.LANGUAGE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the LANGUAGE_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_language_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.076862 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.NOTE_CLASS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_CLASS_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.075601 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_EVENT_FIELD_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field NOTE.NOTE_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.072323 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.NOTE_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_TYPE_CONCEPT_ID field in the NOTE table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_note_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034685 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.NOTE_NLP_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the NOTE_NLP_CONCEPT_ID field in the NOTE_NLP table.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033543 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.SECTION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SECTION_CONCEPT_ID field in the NOTE_NLP table.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"3.520151 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.OBS_EVENT_FIELD_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBS_EVENT_FIELD_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_obs_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.817803 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.OBSERVATION_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBSERVATION_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_observation_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.587707 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.OBSERVATION_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the OBSERVATION_TYPE_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_observation_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"3.003499 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.QUALIFIER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the QUALIFIER_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_qualifier_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"4.628431 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032984 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.PERIOD_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the PERIOD_TYPE_CONCEPT_ID field in the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032942 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.ETHNICITY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ETHNICITY_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032202 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the GENDER_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_gender_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":848,"pctViolatedRows":0.8488,"numDenominatorRows":999,"executionTime":"0.032752 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.RACE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the RACE_CONCEPT_ID field in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_person_race_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033406 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.GENDER_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the GENDER_CONCEPT_ID field in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032614 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.SPECIALTY_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIALTY_CONCEPT_ID field in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1294,"pctViolatedRows":0.9737,"numDenominatorRows":1329,"executionTime":"0.037137 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = TARGET_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.TARGET_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the TARGET_CONCEPT_ID field in the SOURCE_TO_CONCEPT_MAP table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"TARGET_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_source_to_concept_map_target_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.TARGET_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.049573 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.ANATOMIC_SITE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ANATOMIC_SITE_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_anatomic_site_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.047071 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DISEASE_STATUS_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISEASE_STATUS_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_disease_status_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.048264 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.SPECIMEN_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIMEN_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.055395 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.SPECIMEN_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the SPECIMEN_TYPE_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_specimen_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.048034 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.UNIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the UNIT_CONCEPT_ID field in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031682 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031488 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.031414 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.VISIT_DETAIL_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_DETAIL_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_visit_detail_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030597 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_DETAIL_TYPE_CONCEPT_ID field in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_detail_visit_detail_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032586 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.ADMITTED_FROM_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the ADMITTED_FROM_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031979 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.DISCHARGED_TO_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the DISCHARGED_TO_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032735 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.VISIT_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.034032 secs","queryText":"/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\nall standard concept id fields are standard and valid\nParameters used in this template:\nschema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t  \tJOIN omop_sqldev_schema.concept co \n\t  \t    ON cdmTable.VISIT_TYPE_CONCEPT_ID = co.concept_id\n\t\tWHERE co.concept_id != 0 \n\t\t\tAND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL)\n\t\t/*violatedRowsEnd*/\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"isStandardValidConcept","checkLevel":"FIELD","checkDescription":"The number and percent of records that do not have a standard, valid concept in the VISIT_TYPE_CONCEPT_ID field in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_is_standard_valid_concept.sql","category":"Conformance","subcategory":"Value","context":"Verification","checkId":"field_isstandardvalidconcept_visit_occurrence_visit_type_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.036956 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.038284 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_NAME of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.030183 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = CARE_SITE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.CARE_SITE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_SOURCE_VALUE of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"CARE_SITE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_care_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":111,"pctViolatedRows":1,"numDenominatorRows":111,"executionTime":"0.034590 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.032148 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.PLACE_OF_SERVICE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLACE_OF_SERVICE_CONCEPT_ID of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":13,"pctViolatedRows":0.1171,"numDenominatorRows":111,"executionTime":"0.030840 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CARE_SITE.PLACE_OF_SERVICE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n\t\tWHERE cdmTable.PLACE_OF_SERVICE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLACE_OF_SERVICE_SOURCE_VALUE of the CARE_SITE.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_care_site_place_of_service_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032179 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_ETL_REFERENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_ETL_REFERENCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_ETL_REFERENCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_ETL_REFERENCE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_ETL_REFERENCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_etl_reference","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031337 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_HOLDER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_HOLDER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_HOLDER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_HOLDER of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_HOLDER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_holder","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031853 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_RELEASE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_RELEASE_DATE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.039300 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_ABBREVIATION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_SOURCE_ABBREVIATION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_SOURCE_ABBREVIATION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_ABBREVIATION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_ABBREVIATION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_source_abbreviation","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031680 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_SOURCE_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_SOURCE_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_SOURCE_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_SOURCE_NAME of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_SOURCE_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_source_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031277 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_VERSION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033200 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_VERSION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_VERSION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.CDM_VERSION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CDM_VERSION_CONCEPT_ID of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_VERSION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_cdm_version_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033227 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DESCRIPTION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_DESCRIPTION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_DESCRIPTION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_DESCRIPTION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DESCRIPTION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_description","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.025717 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_DOCUMENTATION_REFERENCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_DOCUMENTATION_REFERENCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_DOCUMENTATION_REFERENCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_DOCUMENTATION_REFERENCE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_DOCUMENTATION_REFERENCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_documentation_reference","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030351 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.SOURCE_RELEASE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SOURCE_RELEASE_DATE of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.030754 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = VOCABULARY_VERSION\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.VOCABULARY_VERSION' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n\t\tWHERE cdmTable.VOCABULARY_VERSION IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VOCABULARY_VERSION of the CDM_SOURCE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"VOCABULARY_VERSION","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cdm_source_vocabulary_version","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.041144 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.038384 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_END_DATE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.040875 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_END_DATETIME of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.033798 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_OCCURRENCE_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.041430 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_SOURCE_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.040991 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_SOURCE_VALUE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.037300 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.036583 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_START_DATETIME of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.039930 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_STATUS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_STATUS_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.040477 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_STATUS_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_STATUS_SOURCE_VALUE of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.038116 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CONDITION_TYPE_CONCEPT_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.036397 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.039931 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.038836 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = STOP_REASON\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.STOP_REASON' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.STOP_REASON IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"STOP_REASON","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_stop_reason","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.040280 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.036533 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the CONDITION_OCCURRENCE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_condition_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030250 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = AMOUNT_ALLOWED\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.AMOUNT_ALLOWED' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.AMOUNT_ALLOWED IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the AMOUNT_ALLOWED of the COST.","cdmTableName":"COST","cdmFieldName":"AMOUNT_ALLOWED","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_amount_allowed","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029677 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_DOMAIN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_DOMAIN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_DOMAIN_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_DOMAIN_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_DOMAIN_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_domain_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033733 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_EVENT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030795 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030440 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.COST_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COST_TYPE_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030396 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = CURRENCY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.CURRENCY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.CURRENCY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CURRENCY_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"CURRENCY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_currency_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030903 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.DRG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRG_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"DRG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_drg_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029316 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = DRG_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.DRG_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.DRG_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRG_SOURCE_VALUE of the COST.","cdmTableName":"COST","cdmFieldName":"DRG_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_drg_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029546 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PATIENT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PATIENT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PATIENT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PATIENT of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PATIENT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_patient","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029739 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PAYER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PAYER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PAYER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PAYER of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PAYER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_payer","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030458 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_BY_PRIMARY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_BY_PRIMARY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_BY_PRIMARY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_BY_PRIMARY of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_BY_PRIMARY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_by_primary","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029208 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_DISPENSING_FEE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_DISPENSING_FEE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_DISPENSING_FEE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_DISPENSING_FEE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_DISPENSING_FEE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_dispensing_fee","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028173 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_INGREDIENT_COST\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_INGREDIENT_COST' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_INGREDIENT_COST IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_INGREDIENT_COST of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_INGREDIENT_COST","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_ingredient_cost","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029059 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COINSURANCE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_COINSURANCE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_COINSURANCE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_COINSURANCE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COINSURANCE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_coinsurance","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029029 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_COPAY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_COPAY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_COPAY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_COPAY of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_COPAY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_copay","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028849 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAID_PATIENT_DEDUCTIBLE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAID_PATIENT_DEDUCTIBLE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAID_PATIENT_DEDUCTIBLE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAID_PATIENT_DEDUCTIBLE of the COST.","cdmTableName":"COST","cdmFieldName":"PAID_PATIENT_DEDUCTIBLE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_paid_patient_deductible","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031195 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the COST.","cdmTableName":"COST","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031689 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.REVENUE_CODE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the REVENUE_CODE_CONCEPT_ID of the COST.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_revenue_code_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033998 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = REVENUE_CODE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.REVENUE_CODE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.REVENUE_CODE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the REVENUE_CODE_SOURCE_VALUE of the COST.","cdmTableName":"COST","cdmFieldName":"REVENUE_CODE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_revenue_code_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034101 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_CHARGE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_CHARGE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_CHARGE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_CHARGE of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_CHARGE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_charge","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034908 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_COST\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_COST' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_COST IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_COST of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_COST","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_cost","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031614 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = TOTAL_PAID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'COST.TOTAL_PAID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.COST cdmTable\n\t\tWHERE cdmTable.TOTAL_PAID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TOTAL_PAID of the COST.","cdmTableName":"COST","cdmFieldName":"TOTAL_PAID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_cost_total_paid","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.031707 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.034214 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_SOURCE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.031687 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.CAUSE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.CAUSE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CAUSE_SOURCE_VALUE of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_cause_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030596 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATE of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":143,"pctViolatedRows":1,"numDenominatorRows":143,"executionTime":"0.031769 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_DATETIME of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.031708 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.DEATH_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEATH_TYPE_CONCEPT_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.028375 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEATH cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEATH.","cdmTableName":"DEATH","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_death_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030318 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":63,"pctViolatedRows":0.4773,"numDenominatorRows":132,"executionTime":"0.029761 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.034539 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_END_DATETIME of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031025 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035155 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031454 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_EXPOSURE_START_DATETIME of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_exposure_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.034729 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_SOURCE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030073 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_SOURCE_VALUE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035465 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEVICE_TYPE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031304 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.035095 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PRODUCTION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PRODUCTION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PRODUCTION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRODUCTION_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PRODUCTION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_production_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.032406 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.033555 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031651 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIQUE_DEVICE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIQUE_DEVICE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIQUE_DEVICE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIQUE_DEVICE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIQUE_DEVICE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unique_device_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031239 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.034166 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_CONCEPT_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.029867 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.031238 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":132,"pctViolatedRows":1,"numDenominatorRows":132,"executionTime":"0.030160 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the DEVICE_EXPOSURE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_device_exposure_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031407 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_END_DATE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031258 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030005 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_ERA_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_ERA_START_DATE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029955 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DOSE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOSE_VALUE of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033108 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.DRUG_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DRUG_CONCEPT_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031588 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032474 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the DOSE_ERA.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032945 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030647 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_END_DATE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031452 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_END_DATETIME of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033916 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031132 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_NUMBER of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033550 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_OBJECT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_OBJECT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_OBJECT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_OBJECT_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_OBJECT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_object_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031900 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_PARENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_PARENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_PARENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_PARENT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_PARENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_parent_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034012 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_SOURCE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030854 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_SOURCE_VALUE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031878 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATE of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030581 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_START_DATETIME of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032411 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.EPISODE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_TYPE_CONCEPT_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_episode_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032368 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the EPISODE.","cdmTableName":"EPISODE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033995 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EPISODE_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_EVENT_FIELD_CONCEPT_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_episode_event_field_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030781 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EPISODE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EPISODE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EPISODE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EPISODE_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EPISODE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_episode_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031039 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE_EVENT\ncdmFieldName = EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE_EVENT.EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n\t\tWHERE cdmTable.EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE_EVENT cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the EVENT_ID of the EPISODE_EVENT.","cdmTableName":"EPISODE_EVENT","cdmFieldName":"EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_episode_event_event_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE_EVENT is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032100 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.DOMAIN_CONCEPT_ID_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_1 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030459 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.DOMAIN_CONCEPT_ID_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DOMAIN_CONCEPT_ID_2 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032806 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.FACT_ID_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_1 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_fact_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032205 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = FACT_ID_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.FACT_ID_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.FACT_ID_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FACT_ID_2 of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"FACT_ID_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_fact_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031312 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.RELATIONSHIP_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RELATIONSHIP_CONCEPT_ID of the FACT_RELATIONSHIP.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033184 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ADDRESS_1' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ADDRESS_1 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADDRESS_1 of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_1","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_address_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031480 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ADDRESS_2\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ADDRESS_2' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ADDRESS_2 IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADDRESS_2 of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ADDRESS_2","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_address_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031290 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = CITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.CITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.CITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CITY of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"CITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_city","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032151 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTRY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTRY_CONCEPT_ID of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031054 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTRY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTRY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTRY_SOURCE_VALUE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_country_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029958 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.COUNTY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.COUNTY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the COUNTY of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"COUNTY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_county","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033996 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LATITUDE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LATITUDE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LATITUDE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LATITUDE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LATITUDE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_latitude","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029451 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_location_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031784 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LOCATION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LOCATION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LOCATION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_SOURCE_VALUE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LOCATION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_location_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035179 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = LONGITUDE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.LONGITUDE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.LONGITUDE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LONGITUDE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"LONGITUDE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_longitude","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033128 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = STATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.STATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.STATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STATE of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"STATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_state","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029358 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = ZIP\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'LOCATION.ZIP' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.LOCATION cdmTable\n\t\tWHERE cdmTable.ZIP IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ZIP of the LOCATION.","cdmTableName":"LOCATION","cdmFieldName":"ZIP","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_location_zip","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039531 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032991 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_DATE of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034434 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_DATETIME of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033017 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037150 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = METADATA_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.METADATA_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.METADATA_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the METADATA_TYPE_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"METADATA_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_metadata_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031439 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NAME of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_name","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033267 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028737 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_number","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028620 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = METADATA\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'METADATA.VALUE_AS_STRING' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.METADATA cdmTable\n\t\tWHERE cdmTable.VALUE_AS_STRING IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.METADATA cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_STRING of the METADATA.","cdmTableName":"METADATA","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_metadata_value_as_string","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table METADATA is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.041972 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = ENCODING_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.ENCODING_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.ENCODING_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ENCODING_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"ENCODING_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_encoding_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.044592 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = LANGUAGE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.LANGUAGE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.LANGUAGE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LANGUAGE_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"LANGUAGE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_language_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.040231 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_CLASS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_CLASS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_CLASS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_CLASS_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_CLASS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_class_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.042982 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.039312 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_DATETIME of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.044433 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_EVENT_FIELD_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.046109 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_EVENT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.033679 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.044210 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_SOURCE_VALUE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.042073 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TEXT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TEXT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TEXT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TEXT of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TEXT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_text","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.040669 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TITLE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TITLE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TITLE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TITLE of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TITLE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_title","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.041439 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.NOTE_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_TYPE_CONCEPT_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"NOTE_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_note_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.040910 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.044019 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":45681,"pctViolatedRows":1,"numDenominatorRows":45681,"executionTime":"0.042600 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.049082 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the NOTE.","cdmTableName":"NOTE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029550 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = LEXICAL_VARIANT\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.LEXICAL_VARIANT' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.LEXICAL_VARIANT IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LEXICAL_VARIANT of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"LEXICAL_VARIANT","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_lexical_variant","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030078 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATE of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030565 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_DATETIME of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031177 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_SYSTEM\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NLP_SYSTEM' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NLP_SYSTEM IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NLP_SYSTEM of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_SYSTEM","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_nlp_system","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030017 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032408 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031069 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031767 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NOTE_NLP_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.NOTE_NLP_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.NOTE_NLP_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NOTE_NLP_SOURCE_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"NOTE_NLP_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_note_nlp_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030013 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SECTION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SECTION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.SECTION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SECTION_CONCEPT_ID of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"SECTION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_section_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028864 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = SNIPPET\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.SNIPPET' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.SNIPPET IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SNIPPET of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"SNIPPET","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_snippet","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030096 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_EXISTS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_EXISTS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_EXISTS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_EXISTS of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_EXISTS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_exists","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032182 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_MODIFIERS\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_MODIFIERS' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_MODIFIERS IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_MODIFIERS of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_MODIFIERS","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_modifiers","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032772 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = TERM_TEMPORAL\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE_NLP.TERM_TEMPORAL' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.TERM_TEMPORAL IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the TERM_TEMPORAL of the NOTE_NLP.","cdmTableName":"NOTE_NLP","cdmFieldName":"TERM_TEMPORAL","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_note_nlp_term_temporal","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.341910 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBS_EVENT_FIELD_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBS_EVENT_FIELD_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBS_EVENT_FIELD_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBS_EVENT_FIELD_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBS_EVENT_FIELD_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_obs_event_field_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.230375 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.217753 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.252222 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_DATETIME of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.337858 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_EVENT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_EVENT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_EVENT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_EVENT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_EVENT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_event_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.103470 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.317120 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_SOURCE_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.284764 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.221565 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_TYPE_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.209759 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.289078 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.285319 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.QUALIFIER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUALIFIER_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_qualifier_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.356876 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.QUALIFIER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.QUALIFIER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUALIFIER_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_qualifier_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.289669 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.320662 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1157895,"pctViolatedRows":0.9987,"numDenominatorRows":1159351,"executionTime":"0.276761 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_CONCEPT_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1037467,"pctViolatedRows":0.8949,"numDenominatorRows":1159351,"executionTime":"0.264754 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_NUMBER\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_NUMBER' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_NUMBER IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_NUMBER of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_NUMBER","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_number","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":281589,"pctViolatedRows":0.2429,"numDenominatorRows":1159351,"executionTime":"0.283233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_AS_STRING\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_AS_STRING' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_AS_STRING IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_AS_STRING of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_AS_STRING","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_as_string","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.311617 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VALUE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VALUE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VALUE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VALUE_SOURCE_VALUE of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VALUE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_value_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1159351,"pctViolatedRows":1,"numDenominatorRows":1159351,"executionTime":"0.305187 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.261086 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the OBSERVATION.","cdmTableName":"OBSERVATION","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037183 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_END_DATE of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030046 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028614 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the OBSERVATION_PERIOD_START_DATE of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030998 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.PERIOD_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERIOD_TYPE_CONCEPT_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030126 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the OBSERVATION_PERIOD.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_observation_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030652 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = FAMILY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.FAMILY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.FAMILY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the FAMILY_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"FAMILY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_family_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030501 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030481 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_END_DATE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030651 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030315 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_PLAN_PERIOD_START_DATE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029564 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028249 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PAYER_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_payer_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033165 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_person_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034706 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033038 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031023 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PLAN_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PLAN_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_plan_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.026668 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030111 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.028900 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPONSOR_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_sponsor_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029953 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033924 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_SOURCE_CONCEPT_ID of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034048 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the STOP_REASON_SOURCE_VALUE of the PAYER_PLAN_PERIOD.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_payer_plan_period_stop_reason_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.031450 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.BIRTH_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.BIRTH_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the BIRTH_DATETIME of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_birth_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.031284 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032268 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.DAY_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DAY_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_day_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034264 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.033572 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032804 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.ETHNICITY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ETHNICITY_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_ethnicity_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031952 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.035059 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031051 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.GENDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.032012 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = LOCATION_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.LOCATION_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.LOCATION_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the LOCATION_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"LOCATION_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_location_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.034131 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.MONTH_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the MONTH_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_month_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031433 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034137 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PERSON_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PERSON_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PERSON_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PERSON_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_person_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.034020 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.031577 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030964 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_SOURCE_CONCEPT_ID of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033427 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.RACE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the RACE_SOURCE_VALUE of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.034429 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PERSON cdmTable\n\t\tWHERE cdmTable.YEAR_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PERSON.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.032212 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.030647 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = DEA\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.DEA' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.DEA IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DEA of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"DEA","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_dea","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.033216 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031849 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.031236 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.GENDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the GENDER_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.030945 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = NPI\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.NPI' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.NPI IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the NPI of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"NPI","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_npi","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031004 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.036194 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_NAME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_NAME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_NAME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_NAME of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_NAME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_name","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.031721 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = PROVIDER_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.PROVIDER_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.PROVIDER_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"PROVIDER_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_provider_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030696 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.032436 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_SOURCE_CONCEPT_ID of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.033570 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.SPECIALTY_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIALTY_SOURCE_VALUE of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.032233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = YEAR_OF_BIRTH\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PROVIDER.YEAR_OF_BIRTH' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.PROVIDER cdmTable\n\t\tWHERE cdmTable.YEAR_OF_BIRTH IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the YEAR_OF_BIRTH of the PROVIDER.","cdmTableName":"PROVIDER","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_provider_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.043096 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ANATOMIC_SITE_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_anatomic_site_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.046516 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.ANATOMIC_SITE_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ANATOMIC_SITE_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_anatomic_site_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.043393 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.DISEASE_STATUS_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISEASE_STATUS_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_disease_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.044233 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.DISEASE_STATUS_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.DISEASE_STATUS_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISEASE_STATUS_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_disease_status_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.042550 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.043975 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.QUANTITY' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.QUANTITY IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the QUANTITY of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_quantity","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.038507 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.039537 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.043222 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_DATETIME of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.035831 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.040654 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_SOURCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_SOURCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_SOURCE_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_source_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040936 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040902 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the SPECIMEN_TYPE_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.045057 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_CONCEPT_ID of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_unit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.044210 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.UNIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\tWHERE cdmTable.UNIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the UNIT_SOURCE_VALUE of the SPECIMEN.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_specimen_unit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.033382 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.031467 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030348 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030733 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.032768 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.032916 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PARENT_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PARENT_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PARENT_VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PARENT_VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PARENT_VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_parent_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035220 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030726 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PRECEDING_VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PRECEDING_VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PRECEDING_VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRECEDING_VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PRECEDING_VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_preceding_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.030944 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032898 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033887 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030200 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_END_DATETIME of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033309 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":268,"pctViolatedRows":1,"numDenominatorRows":268,"executionTime":"0.033821 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032405 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_SOURCE_VALUE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.029299 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATE of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031144 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_START_DATETIME of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.030252 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_DETAIL_TYPE_CONCEPT_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031065 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_DETAIL.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_detail_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032506 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_admitted_from_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.031449 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the ADMITTED_FROM_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_admitted_from_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032661 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = CARE_SITE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.CARE_SITE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CARE_SITE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the CARE_SITE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"CARE_SITE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_care_site_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.033853 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_discharged_to_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":660,"pctViolatedRows":0.4125,"numDenominatorRows":1600,"executionTime":"0.032510 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the DISCHARGED_TO_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_discharged_to_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034357 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PERSON_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PERSON_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PERSON_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PERSON_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PERSON_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_person_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032563 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PRECEDING_VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PRECEDING_VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PRECEDING_VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PRECEDING_VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_preceding_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.034278 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = PROVIDER_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.PROVIDER_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROVIDER_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the PROVIDER_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"PROVIDER_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_provider_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.041335 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.030823 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_END_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.033000 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_END_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_END_DATETIME of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033605 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_OCCURRENCE_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_OCCURRENCE_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_OCCURRENCE_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_OCCURRENCE_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_occurrence_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.032618 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_SOURCE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_SOURCE_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_source_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":83,"pctViolatedRows":0.0519,"numDenominatorRows":1600,"executionTime":"0.030642 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_SOURCE_VALUE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_SOURCE_VALUE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_SOURCE_VALUE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031395 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_START_DATE IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATE of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.033217 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_START_DATETIME IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_START_DATETIME of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032680 secs","queryText":"/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n\t\t\tcdmTable.* \n\t\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_TYPE_CONCEPT_ID IS NULL\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"measureValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a NULL value in the VISIT_TYPE_CONCEPT_ID of the VISIT_OCCURRENCE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_measure_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_measurevaluecompleteness_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":111,"executionTime":"0.031797 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CARE_SITE\ncdmFieldName = PLACE_OF_SERVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CARE_SITE.PLACE_OF_SERVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CARE_SITE cdmTable\n        WHERE cdmTable.PLACE_OF_SERVICE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CARE_SITE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PLACE_OF_SERVICE_CONCEPT_ID in the CARE_SITE table.","cdmTableName":"CARE_SITE","cdmFieldName":"PLACE_OF_SERVICE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_care_site_place_of_service_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":36611,"pctViolatedRows":1,"numDenominatorRows":36611,"executionTime":"0.039570 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.039444 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_STATUS_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_STATUS_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_status_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.036538 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CONDITION_TYPE_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_condition_occurrence_condition_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031446 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = COST\ncdmFieldName = COST_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'COST.COST_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.COST cdmTable\n        WHERE cdmTable.COST_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.COST cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field COST_TYPE_CONCEPT_ID in the COST table.","cdmTableName":"COST","cdmFieldName":"COST_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_cost_cost_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table COST is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030646 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field CAUSE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_death_cause_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.033180 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.DEATH_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEATH_TYPE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_death_death_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031471 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEVICE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_device_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031135 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DEVICE_TYPE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_device_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035757 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_device_exposure_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033349 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DRUG_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DRUG_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DRUG_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DRUG_CONCEPT_ID in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DRUG_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_dose_era_drug_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033418 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the DOSE_ERA table.","cdmTableName":"DOSE_ERA","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_dose_era_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030750 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field EPISODE_CONCEPT_ID in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_episode_episode_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035913 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_1\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_1' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_1 = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DOMAIN_CONCEPT_ID_1 in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_1","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_domain_concept_id_1","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034956 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = DOMAIN_CONCEPT_ID_2\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.DOMAIN_CONCEPT_ID_2' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.DOMAIN_CONCEPT_ID_2 = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DOMAIN_CONCEPT_ID_2 in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"DOMAIN_CONCEPT_ID_2","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_domain_concept_id_2","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031750 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = RELATIONSHIP_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'FACT_RELATIONSHIP.RELATIONSHIP_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n        WHERE cdmTable.RELATIONSHIP_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.FACT_RELATIONSHIP cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field RELATIONSHIP_CONCEPT_ID in the FACT_RELATIONSHIP table.","cdmTableName":"FACT_RELATIONSHIP","cdmFieldName":"RELATIONSHIP_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_fact_relationship_relationship_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table FACT_RELATIONSHIP is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032993 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = LOCATION\ncdmFieldName = COUNTRY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'LOCATION.COUNTRY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.LOCATION cdmTable\n        WHERE cdmTable.COUNTRY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.LOCATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field COUNTRY_CONCEPT_ID in the LOCATION table.","cdmTableName":"LOCATION","cdmFieldName":"COUNTRY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_location_country_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table LOCATION is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.220001 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field OBSERVATION_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_observation_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.250052 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field OBSERVATION_TYPE_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_observation_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":121884,"executionTime":"0.301527 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 AND cdmTable.value_as_number IS NOT NULL\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    WHERE cdmTable.value_as_number IS NOT NULL\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029987 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = PERIOD_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.PERIOD_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.PERIOD_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field PERIOD_TYPE_CONCEPT_ID in the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"PERIOD_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_observation_period_period_type_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":999,"pctViolatedRows":1,"numDenominatorRows":999,"executionTime":"0.031777 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.ETHNICITY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ETHNICITY_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_ethnicity_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.033537 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field GENDER_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_gender_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":151,"pctViolatedRows":0.1512,"numDenominatorRows":999,"executionTime":"0.033082 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.RACE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field RACE_CONCEPT_ID in the PERSON table.","cdmTableName":"PERSON","cdmFieldName":"RACE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_person_race_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030326 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.GENDER_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field GENDER_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_provider_gender_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":872,"pctViolatedRows":1,"numDenominatorRows":872,"executionTime":"0.032823 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIALTY_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_provider_specialty_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.040119 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIMEN_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_specimen_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.044032 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field SPECIMEN_TYPE_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_specimen_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.040684 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.UNIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field UNIT_CONCEPT_ID in the SPECIMEN table.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_specimen_unit_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.029555 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.ADMITTED_FROM_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ADMITTED_FROM_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.042928 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.DISCHARGED_TO_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DISCHARGED_TO_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033544 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_DETAIL_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_visit_detail_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.036676 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_DETAIL_TYPE_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_detail_visit_detail_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033278 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.ADMITTED_FROM_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field ADMITTED_FROM_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_admitted_from_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.043731 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.DISCHARGED_TO_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field DISCHARGED_TO_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_discharged_to_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID is not populated.","thresholdValue":5},{"numViolatedRows":1600,"pctViolatedRows":1,"numDenominatorRows":1600,"executionTime":"0.039799 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_visit_concept_id","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.036391 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_TYPE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_TYPE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_TYPE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"standardConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the standard concept field VISIT_TYPE_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_TYPE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_standardconceptrecordcompleteness_visit_occurrence_visit_type_concept_id","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.060015 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field CONDITION_SOURCE_CONCEPT_ID in the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_condition_occurrence_condition_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.042942 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.CAUSE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field CAUSE_SOURCE_CONCEPT_ID in the DEATH table.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_death_cause_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.033284 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field DEVICE_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_device_exposure_device_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032886 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field UNIT_SOURCE_CONCEPT_ID in the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_device_exposure_unit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031711 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field EPISODE_SOURCE_CONCEPT_ID in the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_episode_episode_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.275364 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records * for the OBSERVATION.unit_concept_id and MEASUREMENT.unit_concept_id the numerator and denominator are limited to records where value_as_number IS NOT NULL\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field OBSERVATION_SOURCE_CONCEPT_ID in the OBSERVATION table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_observation_observation_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_SOURCE_CONCEPT_ID is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":872,"executionTime":"0.030753 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field SPECIALTY_SOURCE_CONCEPT_ID in the PROVIDER table.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_provider_specialty_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.SPECIALTY_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031116 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field VISIT_DETAIL_SOURCE_CONCEPT_ID in the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_visit_detail_visit_detail_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_DETAIL.VISIT_DETAIL_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034724 secs","queryText":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records \nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_CONCEPT_ID\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID' AS violating_field, \n            cdmTable.* \n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_SOURCE_CONCEPT_ID = 0 \n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n( \n    SELECT COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceConceptRecordCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value of 0 in the source concept field VISIT_SOURCE_CONCEPT_ID in the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_CONCEPT_ID","sqlFile":"field_concept_record_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourceconceptrecordcompleteness_visit_occurrence_visit_source_concept_id","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID is not populated.","thresholdValue":100},{"numViolatedRows":1837,"pctViolatedRows":1,"numDenominatorRows":1837,"executionTime":"0.102542 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_SOURCE_VALUE\nstandardConceptFieldName = CONDITION_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'CONDITION_OCCURRENCE.CONDITION_SOURCE_VALUE' AS violating_field, \n            cdmTable.CONDITION_SOURCE_VALUE\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CONDITION_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CONDITION_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CONDITION_SOURCE_VALUE field of the CONDITION_OCCURRENCE table mapped to 0.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_condition_occurrence_condition_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.048104 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_STATUS_SOURCE_VALUE\nstandardConceptFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE' AS violating_field, \n            cdmTable.CONDITION_STATUS_SOURCE_VALUE\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_STATUS_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CONDITION_STATUS_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CONDITION_STATUS_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CONDITION_STATUS_SOURCE_VALUE field of the CONDITION_OCCURRENCE table mapped to 0.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_STATUS_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_condition_occurrence_condition_status_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_STATUS_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033193 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = CAUSE_SOURCE_VALUE\nstandardConceptFieldName = CAUSE_SOURCE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEATH.CAUSE_SOURCE_VALUE' AS violating_field, \n            cdmTable.CAUSE_SOURCE_VALUE\n        FROM omop_sqldev_schema.DEATH cdmTable\n        WHERE cdmTable.CAUSE_SOURCE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.CAUSE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.CAUSE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the CAUSE_SOURCE_VALUE field of the DEATH table mapped to 0.","cdmTableName":"DEATH","cdmFieldName":"CAUSE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_death_cause_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.CAUSE_SOURCE_VALUE is not populated.","thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":3,"executionTime":"0.029221 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_SOURCE_VALUE\nstandardConceptFieldName = DEVICE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEVICE_EXPOSURE.DEVICE_SOURCE_VALUE' AS violating_field, \n            cdmTable.DEVICE_SOURCE_VALUE\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DEVICE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DEVICE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DEVICE_SOURCE_VALUE field of the DEVICE_EXPOSURE table mapped to 0.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_device_exposure_device_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033498 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'DEVICE_EXPOSURE.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the DEVICE_EXPOSURE table mapped to 0.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_device_exposure_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":31,"executionTime":"0.819800 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_SOURCE_VALUE\nstandardConceptFieldName = OBSERVATION_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.OBSERVATION_SOURCE_VALUE' AS violating_field, \n            cdmTable.OBSERVATION_SOURCE_VALUE\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.OBSERVATION_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.OBSERVATION_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.OBSERVATION_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the OBSERVATION_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_observation_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.522362 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = QUALIFIER_SOURCE_VALUE\nstandardConceptFieldName = QUALIFIER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.QUALIFIER_SOURCE_VALUE' AS violating_field, \n            cdmTable.QUALIFIER_SOURCE_VALUE\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.QUALIFIER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.QUALIFIER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.QUALIFIER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the QUALIFIER_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"QUALIFIER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_qualifier_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.QUALIFIER_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.511683 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'OBSERVATION.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the OBSERVATION table mapped to 0.","cdmTableName":"OBSERVATION","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_observation_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030056 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_SOURCE_VALUE\nstandardConceptFieldName = PAYER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.PAYER_SOURCE_VALUE' AS violating_field, \n            cdmTable.PAYER_SOURCE_VALUE\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.PAYER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.PAYER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the PAYER_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_payer_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035359 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PLAN_SOURCE_VALUE\nstandardConceptFieldName = PLAN_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.PLAN_SOURCE_VALUE' AS violating_field, \n            cdmTable.PLAN_SOURCE_VALUE\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PLAN_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.PLAN_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.PLAN_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the PLAN_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PLAN_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_plan_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030254 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = SPONSOR_SOURCE_VALUE\nstandardConceptFieldName = SPONSOR_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.SPONSOR_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPONSOR_SOURCE_VALUE\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.SPONSOR_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPONSOR_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPONSOR_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPONSOR_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"SPONSOR_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_sponsor_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032243 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = STOP_REASON_SOURCE_VALUE\nstandardConceptFieldName = STOP_REASON_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PAYER_PLAN_PERIOD.STOP_REASON_SOURCE_VALUE' AS violating_field, \n            cdmTable.STOP_REASON_SOURCE_VALUE\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.STOP_REASON_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.STOP_REASON_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.STOP_REASON_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the STOP_REASON_SOURCE_VALUE field of the PAYER_PLAN_PERIOD table mapped to 0.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"STOP_REASON_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_payer_plan_period_stop_reason_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":100},{"numViolatedRows":1,"pctViolatedRows":1,"numDenominatorRows":1,"executionTime":"0.031788 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = ETHNICITY_SOURCE_VALUE\nstandardConceptFieldName = ETHNICITY_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.ETHNICITY_SOURCE_VALUE' AS violating_field, \n            cdmTable.ETHNICITY_SOURCE_VALUE\n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.ETHNICITY_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ETHNICITY_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ETHNICITY_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ETHNICITY_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"ETHNICITY_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_ethnicity_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.ETHNICITY_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":2,"executionTime":"0.033261 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = GENDER_SOURCE_VALUE\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.GENDER_SOURCE_VALUE' AS violating_field, \n            cdmTable.GENDER_SOURCE_VALUE\n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.GENDER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.GENDER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the GENDER_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_gender_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":2,"pctViolatedRows":0.5,"numDenominatorRows":4,"executionTime":"0.039083 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = RACE_SOURCE_VALUE\nstandardConceptFieldName = RACE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PERSON.RACE_SOURCE_VALUE' AS violating_field, \n            cdmTable.RACE_SOURCE_VALUE\n        FROM omop_sqldev_schema.PERSON cdmTable\n        WHERE cdmTable.RACE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.RACE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.RACE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the RACE_SOURCE_VALUE field of the PERSON table mapped to 0.","cdmTableName":"PERSON","cdmFieldName":"RACE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_person_race_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.038220 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = GENDER_SOURCE_VALUE\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROVIDER.GENDER_SOURCE_VALUE' AS violating_field, \n            cdmTable.GENDER_SOURCE_VALUE\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.GENDER_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.GENDER_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.GENDER_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the GENDER_SOURCE_VALUE field of the PROVIDER table mapped to 0.","cdmTableName":"PROVIDER","cdmFieldName":"GENDER_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_provider_gender_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PROVIDER.GENDER_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":33,"pctViolatedRows":1,"numDenominatorRows":33,"executionTime":"0.032214 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PROVIDER\ncdmFieldName = SPECIALTY_SOURCE_VALUE\nstandardConceptFieldName = SPECIALTY_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'PROVIDER.SPECIALTY_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPECIALTY_SOURCE_VALUE\n        FROM omop_sqldev_schema.PROVIDER cdmTable\n        WHERE cdmTable.SPECIALTY_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPECIALTY_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPECIALTY_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.PROVIDER cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPECIALTY_SOURCE_VALUE field of the PROVIDER table mapped to 0.","cdmTableName":"PROVIDER","cdmFieldName":"SPECIALTY_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_provider_specialty_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.051457 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = ANATOMIC_SITE_SOURCE_VALUE\nstandardConceptFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE' AS violating_field, \n            cdmTable.ANATOMIC_SITE_SOURCE_VALUE\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ANATOMIC_SITE_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ANATOMIC_SITE_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ANATOMIC_SITE_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"ANATOMIC_SITE_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_anatomic_site_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.ANATOMIC_SITE_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.050107 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = DISEASE_STATUS_SOURCE_VALUE\nstandardConceptFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.DISEASE_STATUS_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISEASE_STATUS_SOURCE_VALUE\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.DISEASE_STATUS_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISEASE_STATUS_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISEASE_STATUS_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISEASE_STATUS_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"DISEASE_STATUS_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_disease_status_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.DISEASE_STATUS_SOURCE_VALUE is not populated.","thresholdValue":100},{"numViolatedRows":52690,"pctViolatedRows":1,"numDenominatorRows":52690,"executionTime":"0.284075 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_SOURCE_VALUE\nstandardConceptFieldName = SPECIMEN_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.SPECIMEN_SOURCE_VALUE' AS violating_field, \n            cdmTable.SPECIMEN_SOURCE_VALUE\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.SPECIMEN_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.SPECIMEN_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.SPECIMEN_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the SPECIMEN_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_specimen_source_value","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.052716 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = UNIT_SOURCE_VALUE\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'SPECIMEN.UNIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.UNIT_SOURCE_VALUE\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        WHERE cdmTable.UNIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.UNIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.UNIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the UNIT_SOURCE_VALUE field of the SPECIMEN table mapped to 0.","cdmTableName":"SPECIMEN","cdmFieldName":"UNIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_specimen_unit_source_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.UNIT_SOURCE_VALUE is not populated.","thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_DETAIL.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n            cdmTable.ADMITTED_FROM_SOURCE_VALUE\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ADMITTED_FROM_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ADMITTED_FROM_SOURCE_VALUE field of the VISIT_DETAIL table mapped to 0.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 559\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_DETAIL_ADMITTED_FROM_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_detail_admitted_from_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_DETAIL.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISCHARGED_TO_SOURCE_VALUE\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISCHARGED_TO_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISCHARGED_TO_SOURCE_VALUE field of the VISIT_DETAIL table mapped to 0.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 559\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_DETAIL_DISCHARGED_TO_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_detail_discharged_to_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = ADMITTED_FROM_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.ADMITTED_FROM_SOURCE_VALUE' AS violating_field, \n            cdmTable.ADMITTED_FROM_SOURCE_VALUE\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.ADMITTED_FROM_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.ADMITTED_FROM_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the ADMITTED_FROM_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"ADMITTED_FROM_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 567\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_OCCURRENCE_ADMITTED_FROM_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_occurrence_admitted_from_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = DISCHARGED_TO_SOURCE_VALUE\nstandardConceptFieldName = NA\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.DISCHARGED_TO_SOURCE_VALUE' AS violating_field, \n            cdmTable.DISCHARGED_TO_SOURCE_VALUE\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.NA = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.DISCHARGED_TO_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.DISCHARGED_TO_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the DISCHARGED_TO_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"DISCHARGED_TO_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","error":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.na does not exist\n  Position: 567\nAn error report has been created at  ../output/errors/FIELD_sourceValueCompleteness_VISIT_OCCURRENCE_DISCHARGED_TO_SOURCE_VALUE.txt","checkId":"field_sourcevaluecompleteness_visit_occurrence_discharged_to_source_value","failed":0,"passed":0,"isError":1,"notApplicable":0,"thresholdValue":100},{"numViolatedRows":5,"pctViolatedRows":1,"numDenominatorRows":5,"executionTime":"0.037079 secs","queryText":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_SOURCE_VALUE\nstandardConceptFieldName = VISIT_CONCEPT_ID\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT DISTINCT \n            'VISIT_OCCURRENCE.VISIT_SOURCE_VALUE' AS violating_field, \n            cdmTable.VISIT_SOURCE_VALUE\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_CONCEPT_ID = 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(DISTINCT cdmTable.VISIT_SOURCE_VALUE) + COUNT(DISTINCT CASE WHEN cdmTable.VISIT_SOURCE_VALUE IS NULL THEN 1 END) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"sourceValueCompleteness","checkLevel":"FIELD","checkDescription":"The number and percent of distinct source values in the VISIT_SOURCE_VALUE field of the VISIT_OCCURRENCE table mapped to 0.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_SOURCE_VALUE","sqlFile":"field_source_value_completeness.sql","category":"Completeness","context":"Verification","checkId":"field_sourcevaluecompleteness_visit_occurrence_visit_source_value","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":10},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032122 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleValueLow = '20000101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n            WHERE CAST(cdmTable.CDM_RELEASE_DATE AS DATE) < CAST('20000101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    WHERE CDM_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE table less than '20000101'.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.033374 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleValueLow = '20000101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n            WHERE CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE) < CAST('20000101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    WHERE SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table less than '20000101'.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041952 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044175 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.038796 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.041401 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.CONDITION_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table less than '19500101'.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.029890 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            WHERE CAST(cdmTable.DEATH_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n    WHERE DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH table less than '19500101'.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030617 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n            WHERE CAST(cdmTable.DEATH_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n    WHERE DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH table less than '19500101'.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.032997 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032167 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.030802 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030931 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table less than '19500101'.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032032 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = QUANTITY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n            WHERE cdmTable.QUANTITY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the DEVICE_EXPOSURE table less than 1.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_device_exposure_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.QUANTITY is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033902 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            WHERE CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA table less than '19500101'.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037318 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            WHERE CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA table less than '19500101'.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034729 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_VALUE\nplausibleValueLow = 0\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_VALUE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n            WHERE cdmTable.DOSE_VALUE < 0\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE DOSE_VALUE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_VALUE field of the DOSE_ERA table less than 0.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_VALUE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_dose_era_dose_value","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033124 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035235 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030657 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035851 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n            WHERE CAST(cdmTable.EPISODE_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE table less than '19500101'.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.045333 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            WHERE CAST(cdmTable.NOTE_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    WHERE NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE table less than '19500101'.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.048821 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n            WHERE CAST(cdmTable.NOTE_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    WHERE NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE table less than '19500101'.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031078 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE_NLP.NLP_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE_NLP cdmTable\n            WHERE CAST(cdmTable.NLP_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE_NLP cdmTable\n    WHERE NLP_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NLP_DATETIME field of the NOTE_NLP table less than '19500101'.","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.290636 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    WHERE OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION table less than '19500101'.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.268779 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    WHERE OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION table less than '19500101'.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030502 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table less than '19500101'.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031823 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n            WHERE CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table less than '19500101'.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031952 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            WHERE CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table less than '19500101'.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035291 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n            WHERE CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table less than '19500101'.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034046 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\nplausibleValueLow = '18500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.BIRTH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            WHERE CAST(cdmTable.BIRTH_DATETIME AS DATE) < CAST('18500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n    WHERE BIRTH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the BIRTH_DATETIME field of the PERSON table less than '18500101'.","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_birth_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.BIRTH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031039 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.DAY_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            WHERE cdmTable.DAY_OF_BIRTH < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n    WHERE DAY_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAY_OF_BIRTH field of the PERSON table less than 1.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033261 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.MONTH_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            WHERE cdmTable.MONTH_OF_BIRTH < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n    WHERE MONTH_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MONTH_OF_BIRTH field of the PERSON table less than 1.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.030782 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\nplausibleValueLow = 1850\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PERSON cdmTable\n            WHERE cdmTable.YEAR_OF_BIRTH < 1850\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PERSON cdmTable\n    WHERE YEAR_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the YEAR_OF_BIRTH field of the PERSON table less than 1850.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045488 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = QUANTITY\nplausibleValueLow = 1\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.QUANTITY' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            WHERE cdmTable.QUANTITY < 1\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    WHERE QUANTITY IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the QUANTITY field of the SPECIMEN table less than 1.","cdmTableName":"SPECIMEN","cdmFieldName":"QUANTITY","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_quantity","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SPECIMEN.QUANTITY is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.049414 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            WHERE CAST(cdmTable.SPECIMEN_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    WHERE SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN table less than '19500101'.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.048402 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n            WHERE CAST(cdmTable.SPECIMEN_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    WHERE SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN table less than '19500101'.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033591 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032041 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034004 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034705 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n            WHERE CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table less than '19500101'.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032498 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_END_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033800 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_END_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.035310 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_START_DATE AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032438 secs","queryText":"/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleValueLow = '19500101'\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n            WHERE CAST(cdmTable.VISIT_START_DATETIME AS DATE) < CAST('19500101' AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueLow","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table less than '19500101'.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_value_low.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluelow_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034420 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n      \t    WHERE cast(cdmTable.CDM_RELEASE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n  \tWHERE CDM_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.032542 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n      \t    WHERE cast(cdmTable.SOURCE_RELEASE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n  \tWHERE SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044012 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.058259 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.045636 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.050075 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.CONDITION_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n  \tWHERE CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.032264 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEATH cdmTable\n      \t    WHERE cast(cdmTable.DEATH_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n  \tWHERE DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032719 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEATH cdmTable\n      \t    WHERE cast(cdmTable.DEATH_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n  \tWHERE DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.030128 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038811 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035771 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033906 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n      \t    WHERE cast(cdmTable.DEVICE_EXPOSURE_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n  \tWHERE DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033449 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n      \t    WHERE cast(cdmTable.DOSE_ERA_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n  \tWHERE DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036359 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n      \t    WHERE cast(cdmTable.DOSE_ERA_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n  \tWHERE DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032754 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n  \tWHERE EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032665 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n  \tWHERE EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032151 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n  \tWHERE EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032822 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n      \t    WHERE cast(cdmTable.EPISODE_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n  \tWHERE EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.049957 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.NOTE cdmTable\n      \t    WHERE cast(cdmTable.NOTE_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n  \tWHERE NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.054259 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.NOTE cdmTable\n      \t    WHERE cast(cdmTable.NOTE_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n  \tWHERE NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033263 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE_NLP\ncdmFieldName = NLP_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'NOTE_NLP.NLP_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n      \t    WHERE cast(cdmTable.NLP_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE_NLP cdmTable\n  \tWHERE NLP_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NLP_DATETIME field of the NOTE_NLP table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"NOTE_NLP","cdmFieldName":"NLP_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_note_nlp_nlp_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table NOTE_NLP is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.460819 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n  \tWHERE OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.425570 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n  \tWHERE OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030844 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_PERIOD_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n  \tWHERE OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031370 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.OBSERVATION_PERIOD_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n  \tWHERE OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031544 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.PAYER_PLAN_PERIOD_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n  \tWHERE PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030517 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n      \t    WHERE cast(cdmTable.PAYER_PLAN_PERIOD_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n  \tWHERE PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031912 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = BIRTH_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.BIRTH_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PERSON cdmTable\n      \t    WHERE cast(cdmTable.BIRTH_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n  \tWHERE BIRTH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the BIRTH_DATETIME field of the PERSON table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"PERSON","cdmFieldName":"BIRTH_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_birth_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.BIRTH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033545 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = DAY_OF_BIRTH\nplausibleValueHigh = 31\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.DAY_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PERSON cdmTable\n      \t    WHERE cdmTable.DAY_OF_BIRTH > 31\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n  \tWHERE DAY_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DAY_OF_BIRTH field of the PERSON table greater than 31.","cdmTableName":"PERSON","cdmFieldName":"DAY_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_day_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.DAY_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030705 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = MONTH_OF_BIRTH\nplausibleValueHigh = 12\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.MONTH_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PERSON cdmTable\n      \t    WHERE cdmTable.MONTH_OF_BIRTH > 12\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n  \tWHERE MONTH_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the MONTH_OF_BIRTH field of the PERSON table greater than 12.","cdmTableName":"PERSON","cdmFieldName":"MONTH_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_month_of_birth","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field PERSON.MONTH_OF_BIRTH is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":999,"executionTime":"0.032505 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PERSON\ncdmFieldName = YEAR_OF_BIRTH\nplausibleValueHigh = YEAR(GETDATE())+1\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'PERSON.YEAR_OF_BIRTH' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.PERSON cdmTable\n      \t    WHERE cdmTable.YEAR_OF_BIRTH > EXTRACT(YEAR FROM CURRENT_DATE)+1\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PERSON cdmTable\n  \tWHERE YEAR_OF_BIRTH IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the YEAR_OF_BIRTH field of the PERSON table greater than YEAR(GETDATE())+1.","cdmTableName":"PERSON","cdmFieldName":"YEAR_OF_BIRTH","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_person_year_of_birth","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.050464 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.SPECIMEN cdmTable\n      \t    WHERE cast(cdmTable.SPECIMEN_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n  \tWHERE SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.055742 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.SPECIMEN cdmTable\n      \t    WHERE cast(cdmTable.SPECIMEN_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n  \tWHERE SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":3,"pctViolatedRows":0.0112,"numDenominatorRows":268,"executionTime":"0.030594 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_end_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":3,"pctViolatedRows":0.0112,"numDenominatorRows":268,"executionTime":"0.033648 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_end_datetime","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.038973 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035283 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n      \t    WHERE cast(cdmTable.VISIT_DETAIL_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n  \tWHERE VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.033928 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_END_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033729 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_END_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031712 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_START_DATE as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032513 secs","queryText":"/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t    cdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n      \t    WHERE cast(cdmTable.VISIT_START_DATETIME as date) > cast((CURRENT_DATE + 1*INTERVAL'1 day') as date)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n  \tWHERE VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleValueHigh","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table greater than DATEADD(DD,1,GETDATE()).","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_value_high.sql","category":"Plausibility","subcategory":"Atemporal","context":"Verification","checkId":"field_plausiblevaluehigh_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.034392 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = CDM_RELEASE_DATE\nplausibleTemporalAfterTableName = CDM_SOURCE\nplausibleTemporalAfterFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CDM_SOURCE.CDM_RELEASE_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.SOURCE_RELEASE_DATE AS DATE)\n\t\t > CAST(cdmTable.CDM_RELEASE_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CDM_SOURCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CDM_RELEASE_DATE field of the CDM_SOURCE that occurs prior to the date in the SOURCE_RELEASE_DATE field of the CDM_SOURCE table.","cdmTableName":"CDM_SOURCE","cdmFieldName":"CDM_RELEASE_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_cdm_source_cdm_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.038676 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\nplausibleTemporalAfterFieldName = CONDITION_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.CONDITION_START_DATE AS DATE)\n\t\t > CAST(cdmTable.CONDITION_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.041378 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\nplausibleTemporalAfterTableName = CONDITION_OCCURRENCE\nplausibleTemporalAfterFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.CONDITION_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.CONDITION_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE that occurs prior to the date in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.057719 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.CONDITION_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.061287 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.CONDITION_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030993 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEATH cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEATH_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATE field of the DEATH that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.030058 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEATH.DEATH_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEATH cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEATH_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEATH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEATH_DATETIME field of the DEATH that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032035 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.031666 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\nplausibleTemporalAfterTableName = DEVICE_EXPOSURE\nplausibleTemporalAfterFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE that occurs prior to the date in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.034832 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.035010 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032885 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DOSE_ERA_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_END_DATE field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030302 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.DOSE_ERA_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DOSE_ERA cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033561 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_END_DATE\nplausibleTemporalAfterTableName = DRUG_STRENGTH\nplausibleTemporalAfterFieldName = VALID_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'DRUG_STRENGTH.VALID_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VALID_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VALID_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_END_DATE field of the DRUG_STRENGTH that occurs prior to the date in the VALID_START_DATE field of the DRUG_STRENGTH table.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_drug_strength_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034065 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\nplausibleTemporalAfterTableName = EPISODE\nplausibleTemporalAfterFieldName = EPISODE_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.EPISODE_START_DATE AS DATE)\n\t\t > CAST(cdmTable.EPISODE_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATE field of the EPISODE that occurs prior to the date in the EPISODE_START_DATE field of the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032186 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\nplausibleTemporalAfterTableName = EPISODE\nplausibleTemporalAfterFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.EPISODE_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.EPISODE_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_END_DATETIME field of the EPISODE that occurs prior to the date in the EPISODE_START_DATETIME field of the EPISODE table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030804 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.EPISODE_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.029239 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.EPISODE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.EPISODE_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.EPISODE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.068038 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.NOTE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.NOTE_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATE field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.067107 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'NOTE.NOTE_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.NOTE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.NOTE_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.NOTE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the NOTE_DATETIME field of the NOTE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.812903 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATE field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.821187 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_DATETIME field of the OBSERVATION that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.030885 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\nplausibleTemporalAfterTableName = OBSERVATION_PERIOD\nplausibleTemporalAfterFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE)\n\t\t > CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD that occurs prior to the date in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032256 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036187 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\nplausibleTemporalAfterTableName = PAYER_PLAN_PERIOD\nplausibleTemporalAfterFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE)\n\t\t > CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD that occurs prior to the date in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033907 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.032954 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_END_DATE\nplausibleTemporalAfterTableName = SOURCE_TO_CONCEPT_MAP\nplausibleTemporalAfterFieldName = VALID_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SOURCE_TO_CONCEPT_MAP.VALID_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VALID_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VALID_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_END_DATE field of the SOURCE_TO_CONCEPT_MAP that occurs prior to the date in the VALID_START_DATE field of the SOURCE_TO_CONCEPT_MAP table.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_source_to_concept_map_valid_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_END_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.072127 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.SPECIMEN_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATE field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.069535 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.SPECIMEN cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.SPECIMEN_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.SPECIMEN cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SPECIMEN_DATETIME field of the SPECIMEN that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031259 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\nplausibleTemporalAfterTableName = VISIT_DETAIL\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032453 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\nplausibleTemporalAfterTableName = VISIT_DETAIL\nplausibleTemporalAfterFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL that occurs prior to the date in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.035598 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.033028 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.032785 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\nplausibleTemporalAfterFieldName = VISIT_START_DATE\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_START_DATE AS DATE)\n\t\t > CAST(cdmTable.VISIT_END_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATE field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATE field of the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.038251 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\nplausibleTemporalAfterTableName = VISIT_OCCURRENCE\nplausibleTemporalAfterFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE \n\t\t\tCAST(cdmTable.VISIT_START_DATETIME AS DATE)\n\t\t > CAST(cdmTable.VISIT_END_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE that occurs prior to the date in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034050 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_START_DATE AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.031757 secs","queryText":"/*********\nPLAUSIBLE_TEMPORAL_AFTER\nget number of records and the proportion to total number of eligible records with datetimes that do not occur on or after their corresponding datetimes\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleTemporalAfterTableName = PERSON\nplausibleTemporalAfterFieldName = BIRTH_DATETIME\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n  \tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT \n\t\t\t'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n\t\t\tcdmTable.*\n    \tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n\t\t\t\tJOIN omop_sqldev_schema.PERSON plausibleTable \n                    ON cdmTable.person_id = plausibleTable.person_id\n    WHERE \n\t\t\tCOALESCE(\n\t\t\t\tCAST(plausibleTable.BIRTH_DATETIME AS DATE),\n\t\t\t\tCAST(CONCAT(plausibleTable.year_of_birth,'0601') AS DATE)\n\t\t\t) \n\t\t > CAST(cdmTable.VISIT_START_DATETIME AS DATE)\n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n) denominator\n;\n","checkName":"plausibleTemporalAfter","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE that occurs prior to the date in the BIRTH_DATETIME field of the PERSON table.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_temporal_after.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibletemporalafter_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.057316 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.042820 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.045915 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.049977 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.033021 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.031351 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.033654 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.033104 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032832 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033673 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032321 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033205 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031391 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034810 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032411 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.033394 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.030891 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.035834 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.032079 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.033692 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_END_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":300,"executionTime":"0.035067 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_END_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.035305 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_START_DATE AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":300,"executionTime":"0.031899 secs","queryText":"/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE CAST(cdmTable.VISIT_START_DATETIME AS DATE) > (CAST(de.death_date AS DATE) + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE person_id IN\n        (SELECT \n            person_id \n        FROM omop_sqldev_schema.death)\n) denominator\n;\n","checkName":"plausibleDuringLife","checkLevel":"FIELD","checkDescription":"If yes, the number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_during_life.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleduringlife_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":36590,"pctViolatedRows":0.9994,"numDenominatorRows":36611,"executionTime":"0.064337 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.CONDITION_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.CONDITION_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_condition_occurrence_condition_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032710 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.DEVICE_EXPOSURE_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":31269,"pctViolatedRows":0.6845,"numDenominatorRows":45681,"executionTime":"0.065219 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.NOTE_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.NOTE_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_note_note_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.409242 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.OBSERVATION_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.OBSERVATION_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":5},{"numViolatedRows":190,"pctViolatedRows":0.709,"numDenominatorRows":268,"executionTime":"0.029428 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.VISIT_DETAIL_END_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_visit_detail_visit_detail_end_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":176,"pctViolatedRows":0.6567,"numDenominatorRows":268,"executionTime":"0.033730 secs","queryText":"/*********\nFIELD LEVEL check:\nWITHIN_VISIT_DATES - find events that occur one week before the corresponding visit_start_date or one week after the corresponding visit_end_date\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT num_violated_rows,\n    CASE\n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows\n    END AS pct_violated_rows,\n    denominator.num_rows AS num_denominator_rows\nFROM (\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.visit_occurrence vo\n            ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE < (vo.visit_start_date + -7*INTERVAL'1 day')\n            OR cdmTable.VISIT_DETAIL_START_DATE > (vo.visit_end_date + 7*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.visit_occurrence vo\n        ON cdmTable.visit_occurrence_id = vo.visit_occurrence_id\n) denominator\n;\n","checkName":"withinVisitDates","checkLevel":"FIELD","checkDescription":"The number and percent of records not within one week on either side of the corresponding visit occurrence start and end date","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_within_visit_dates.sql","category":"Conformance","context":"Verification","checkId":"field_withinvisitdates_visit_detail_visit_detail_start_date","failed":1,"passed":0,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040812 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_END_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040447 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.CONDITION_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.064891 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL AND \n            CAST(cdmTable.CONDITION_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":36611,"executionTime":"0.063684 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.CONDITION_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs prior to birth.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":143,"executionTime":"0.038468 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEATH_DATE IS NOT NULL AND \n            CAST(cdmTable.DEATH_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n    WHERE cdmTable.DEATH_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEATH_DATE field of the DEATH table that occurs prior to birth.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_death_death_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032639 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEATH\ncdmFieldName = DEATH_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEATH.DEATH_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEATH cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEATH_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEATH_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEATH cdmTable\n    WHERE cdmTable.DEATH_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEATH_DATETIME field of the DEATH table that occurs prior to birth.","cdmTableName":"DEATH","cdmFieldName":"DEATH_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_death_death_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEATH.DEATH_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.031813 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036859 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":132,"executionTime":"0.032521 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035553 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs prior to birth.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033155 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL AND \n            CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs prior to birth.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032010 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL AND \n            CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs prior to birth.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034482 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_END_DATE IS NOT NULL AND \n            CAST(cdmTable.EPISODE_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032837 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.EPISODE_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032880 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL AND \n            CAST(cdmTable.EPISODE_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032619 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.EPISODE_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs prior to birth.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.101892 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.NOTE_DATE IS NOT NULL AND \n            CAST(cdmTable.NOTE_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    WHERE cdmTable.NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs prior to birth.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":45681,"executionTime":"0.077129 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.NOTE_DATETIME IS NOT NULL AND \n            CAST(cdmTable.NOTE_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    WHERE cdmTable.NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATETIME field of the NOTE table that occurs prior to birth.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1159351,"executionTime":"0.973817 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    WHERE cdmTable.OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs prior to birth.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.268013 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs prior to birth.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035602 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033083 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL AND \n            CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs prior to birth.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033644 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL AND \n            CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036824 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL AND \n            CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs prior to birth.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.081877 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.SPECIMEN_DATE IS NOT NULL AND \n            CAST(cdmTable.SPECIMEN_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    WHERE cdmTable.SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs prior to birth.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":52690,"executionTime":"0.081557 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL AND \n            CAST(cdmTable.SPECIMEN_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATETIME field of the SPECIMEN table that occurs prior to birth.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032738 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.034884 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.032219 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.037344 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs prior to birth.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.055493 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_END_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_END_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031255 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_END_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.040232 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL AND \n            CAST(cdmTable.VISIT_START_DATE AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046084 secs","queryText":"/*********\nPLAUSIBLE_AFTER_BIRTH\nChecks that all events happen after birth (PLAUSIBLE_AFTER_BIRTH == Yes)\nBirthdate is either birth_datetime or composed from year_of_birth, month_of_birth, day_of_birth (taking 1st month/1st day if missing).\nDenominator is number of events with a non-null date.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.person p \n            ON cdmTable.person_id = p.person_id\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL AND \n            CAST(cdmTable.VISIT_START_DATETIME AS DATE) < COALESCE(\n                p.birth_datetime, \n                CAST(CONCAT(\n                    p.year_of_birth,\n                    COALESCE(\n                        RIGHT('0' || CAST(p.month_of_birth AS VARCHAR), 2),\n                        '01'\n                    ),\n                    COALESCE(\n                        RIGHT('0' || CAST(p.day_of_birth AS VARCHAR), 2),\n                        '01'\n                    )\n                ) AS DATE)\n            )\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleAfterBirth","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs prior to birth.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_after_birth.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausibleafterbirth_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042298 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATE is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042302 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_END_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field CONDITION_OCCURRENCE.CONDITION_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.047272 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":11255,"executionTime":"0.047280 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE table that occurs after death.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":12,"executionTime":"0.031847 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031715 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_END_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":28,"executionTime":"0.045380 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038997 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE table that occurs after death.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032196 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_END_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_dose_era_dose_era_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036504 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the DOSE_ERA_START_DATE field of the DOSE_ERA table that occurs after death.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031470 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.033565 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_END_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032090 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATE field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034675 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the EPISODE_START_DATETIME field of the EPISODE table that occurs after death.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":15196,"executionTime":"0.051926 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.NOTE_DATE IS NOT NULL \n            AND CAST(cdmTable.NOTE_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.NOTE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATE field of the NOTE table that occurs after death.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_note_note_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":15196,"executionTime":"0.047971 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = NOTE\ncdmFieldName = NOTE_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'NOTE.NOTE_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.NOTE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.NOTE_DATETIME IS NOT NULL \n            AND CAST(cdmTable.NOTE_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.NOTE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.NOTE_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the NOTE_DATETIME field of the NOTE table that occurs after death.","cdmTableName":"NOTE","cdmFieldName":"NOTE_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_note_note_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":48,"pctViolatedRows":0.0001,"numDenominatorRows":367391,"executionTime":"0.512068 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATE field of the OBSERVATION table that occurs after death.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_observation_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.293037 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION\ncdmFieldName = OBSERVATION_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION.OBSERVATION_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_DATETIME field of the OBSERVATION table that occurs after death.","cdmTableName":"OBSERVATION","cdmFieldName":"OBSERVATION_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_observation_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field OBSERVATION.OBSERVATION_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032800 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_END_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_period_observation_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032504 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD table that occurs after death.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035166 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_END_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_payer_plan_period_payer_plan_period_end_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034863 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD table that occurs after death.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":14217,"executionTime":"0.055611 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.SPECIMEN_DATE IS NOT NULL \n            AND CAST(cdmTable.SPECIMEN_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.SPECIMEN_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATE field of the SPECIMEN table that occurs after death.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_specimen_specimen_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":14217,"executionTime":"0.052969 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = SPECIMEN\ncdmFieldName = SPECIMEN_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SPECIMEN.SPECIMEN_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SPECIMEN cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL \n            AND CAST(cdmTable.SPECIMEN_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SPECIMEN cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.SPECIMEN_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the SPECIMEN_DATETIME field of the SPECIMEN table that occurs after death.","cdmTableName":"SPECIMEN","cdmFieldName":"SPECIMEN_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_specimen_specimen_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.035146 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.032240 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_END_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_end_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.035143 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":134,"executionTime":"0.044111 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL table that occurs after death.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.047146 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_END_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_end_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036943 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_END_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_END_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_END_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_END_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_end_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_END_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":2,"pctViolatedRows":0.0067,"numDenominatorRows":300,"executionTime":"0.042683 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATE AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATE field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036620 secs","queryText":"/*********\nPLAUSIBLE_BEFORE_DEATH\nChecks for events that occur more than 60 days after death (PLAUSIBLE_BEFORE_DEATH == Yes).\nDenominator is number of events with a non-null date, of persons who died.\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        JOIN omop_sqldev_schema.death de \n            ON cdmTable.person_id = de.person_id\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATETIME AS DATE) > (de.death_date + 60*INTERVAL'1 day')\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    JOIN omop_sqldev_schema.death\n        ON death.person_id = cdmTable.person_id\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleBeforeDeath","checkLevel":"FIELD","checkDescription":"The number and percent of records with a date value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE table that occurs after death.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_before_death.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblebeforedeath_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1,"executionTime":"0.031929 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nSOURCE_RELEASE_DATE is the start date and SOURCE_RELEASE_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CDM_SOURCE\ncdmFieldName = SOURCE_RELEASE_DATE\nplausibleStartBeforeEndFieldName = SOURCE_RELEASE_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CDM_SOURCE.SOURCE_RELEASE_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n        WHERE cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n            AND cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n            AND CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE) > CAST(cdmTable.SOURCE_RELEASE_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CDM_SOURCE cdmTable\n    WHERE cdmTable.SOURCE_RELEASE_DATE IS NOT NULL \n        AND cdmTable.SOURCE_RELEASE_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the SOURCE_RELEASE_DATE field of the CDM_SOURCE that occurs after the date in the SOURCE_RELEASE_DATE.","cdmTableName":"CDM_SOURCE","cdmFieldName":"SOURCE_RELEASE_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_cdm_source_source_release_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046725 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nCONDITION_START_DATE is the start date and CONDITION_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATE\nplausibleStartBeforeEndFieldName = CONDITION_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n            AND cdmTable.CONDITION_END_DATE IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATE AS DATE) > CAST(cdmTable.CONDITION_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATE IS NOT NULL \n        AND cdmTable.CONDITION_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATE field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATE.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_condition_occurrence_condition_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043596 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nCONDITION_START_DATETIME is the start date and CONDITION_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_START_DATETIME\nplausibleStartBeforeEndFieldName = CONDITION_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'CONDITION_OCCURRENCE.CONDITION_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n        WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n            AND cdmTable.CONDITION_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.CONDITION_START_DATETIME AS DATE) > CAST(cdmTable.CONDITION_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n    WHERE cdmTable.CONDITION_START_DATETIME IS NOT NULL \n        AND cdmTable.CONDITION_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the CONDITION_START_DATETIME field of the CONDITION_OCCURRENCE that occurs after the date in the CONDITION_END_DATETIME.","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_condition_occurrence_condition_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":69,"executionTime":"0.032349 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDEVICE_EXPOSURE_START_DATE is the start date and DEVICE_EXPOSURE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATE\nplausibleStartBeforeEndFieldName = DEVICE_EXPOSURE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n            AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATE AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATE IS NOT NULL \n        AND cdmTable.DEVICE_EXPOSURE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATE field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATE.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_device_exposure_device_exposure_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032748 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDEVICE_EXPOSURE_START_DATETIME is the start date and DEVICE_EXPOSURE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = DEVICE_EXPOSURE_START_DATETIME\nplausibleStartBeforeEndFieldName = DEVICE_EXPOSURE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n        WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n            AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.DEVICE_EXPOSURE_START_DATETIME AS DATE) > CAST(cdmTable.DEVICE_EXPOSURE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DEVICE_EXPOSURE cdmTable\n    WHERE cdmTable.DEVICE_EXPOSURE_START_DATETIME IS NOT NULL \n        AND cdmTable.DEVICE_EXPOSURE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DEVICE_EXPOSURE_START_DATETIME field of the DEVICE_EXPOSURE that occurs after the date in the DEVICE_EXPOSURE_END_DATETIME.","cdmTableName":"DEVICE_EXPOSURE","cdmFieldName":"DEVICE_EXPOSURE_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_device_exposure_device_exposure_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DEVICE_EXPOSURE.DEVICE_EXPOSURE_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042264 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nDOSE_ERA_START_DATE is the start date and DOSE_ERA_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DOSE_ERA\ncdmFieldName = DOSE_ERA_START_DATE\nplausibleStartBeforeEndFieldName = DOSE_ERA_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DOSE_ERA.DOSE_ERA_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DOSE_ERA cdmTable\n        WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n            AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL \n            AND CAST(cdmTable.DOSE_ERA_START_DATE AS DATE) > CAST(cdmTable.DOSE_ERA_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DOSE_ERA cdmTable\n    WHERE cdmTable.DOSE_ERA_START_DATE IS NOT NULL \n        AND cdmTable.DOSE_ERA_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the DOSE_ERA_START_DATE field of the DOSE_ERA that occurs after the date in the DOSE_ERA_END_DATE.","cdmTableName":"DOSE_ERA","cdmFieldName":"DOSE_ERA_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_dose_era_dose_era_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table DOSE_ERA is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031753 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVALID_START_DATE is the start date and VALID_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = DRUG_STRENGTH\ncdmFieldName = VALID_START_DATE\nplausibleStartBeforeEndFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'DRUG_STRENGTH.VALID_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NOT NULL \n            AND cdmTable.VALID_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VALID_START_DATE AS DATE) > CAST(cdmTable.VALID_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.DRUG_STRENGTH cdmTable\n    WHERE cdmTable.VALID_START_DATE IS NOT NULL \n        AND cdmTable.VALID_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_START_DATE field of the DRUG_STRENGTH that occurs after the date in the VALID_END_DATE.","cdmTableName":"DRUG_STRENGTH","cdmFieldName":"VALID_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_drug_strength_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field DRUG_STRENGTH.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032174 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nEPISODE_START_DATE is the start date and EPISODE_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATE\nplausibleStartBeforeEndFieldName = EPISODE_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n            AND cdmTable.EPISODE_END_DATE IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATE AS DATE) > CAST(cdmTable.EPISODE_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATE IS NOT NULL \n        AND cdmTable.EPISODE_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATE field of the EPISODE that occurs after the date in the EPISODE_END_DATE.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_episode_episode_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031674 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nEPISODE_START_DATETIME is the start date and EPISODE_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = EPISODE\ncdmFieldName = EPISODE_START_DATETIME\nplausibleStartBeforeEndFieldName = EPISODE_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'EPISODE.EPISODE_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.EPISODE cdmTable\n        WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n            AND cdmTable.EPISODE_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.EPISODE_START_DATETIME AS DATE) > CAST(cdmTable.EPISODE_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.EPISODE cdmTable\n    WHERE cdmTable.EPISODE_START_DATETIME IS NOT NULL \n        AND cdmTable.EPISODE_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the EPISODE_START_DATETIME field of the EPISODE that occurs after the date in the EPISODE_END_DATETIME.","cdmTableName":"EPISODE","cdmFieldName":"EPISODE_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_episode_episode_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table EPISODE is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034557 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nOBSERVATION_PERIOD_START_DATE is the start date and OBSERVATION_PERIOD_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = OBSERVATION_PERIOD_START_DATE\nplausibleStartBeforeEndFieldName = OBSERVATION_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'OBSERVATION_PERIOD.OBSERVATION_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n        WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n            AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.OBSERVATION_PERIOD_START_DATE AS DATE) > CAST(cdmTable.OBSERVATION_PERIOD_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.OBSERVATION_PERIOD cdmTable\n    WHERE cdmTable.OBSERVATION_PERIOD_START_DATE IS NOT NULL \n        AND cdmTable.OBSERVATION_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the OBSERVATION_PERIOD_START_DATE field of the OBSERVATION_PERIOD that occurs after the date in the OBSERVATION_PERIOD_END_DATE.","cdmTableName":"OBSERVATION_PERIOD","cdmFieldName":"OBSERVATION_PERIOD_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_observation_period_observation_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table OBSERVATION_PERIOD is empty.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.031647 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nPAYER_PLAN_PERIOD_START_DATE is the start date and PAYER_PLAN_PERIOD_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = PAYER_PLAN_PERIOD_START_DATE\nplausibleStartBeforeEndFieldName = PAYER_PLAN_PERIOD_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'PAYER_PLAN_PERIOD.PAYER_PLAN_PERIOD_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n        WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n            AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL \n            AND CAST(cdmTable.PAYER_PLAN_PERIOD_START_DATE AS DATE) > CAST(cdmTable.PAYER_PLAN_PERIOD_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.PAYER_PLAN_PERIOD cdmTable\n    WHERE cdmTable.PAYER_PLAN_PERIOD_START_DATE IS NOT NULL \n        AND cdmTable.PAYER_PLAN_PERIOD_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the PAYER_PLAN_PERIOD_START_DATE field of the PAYER_PLAN_PERIOD that occurs after the date in the PAYER_PLAN_PERIOD_END_DATE.","cdmTableName":"PAYER_PLAN_PERIOD","cdmFieldName":"PAYER_PLAN_PERIOD_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_payer_plan_period_payer_plan_period_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Table PAYER_PLAN_PERIOD is empty.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1329,"executionTime":"0.033515 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVALID_START_DATE is the start date and VALID_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = SOURCE_TO_CONCEPT_MAP\ncdmFieldName = VALID_START_DATE\nplausibleStartBeforeEndFieldName = VALID_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'SOURCE_TO_CONCEPT_MAP.VALID_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n        WHERE cdmTable.VALID_START_DATE IS NOT NULL \n            AND cdmTable.VALID_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VALID_START_DATE AS DATE) > CAST(cdmTable.VALID_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.SOURCE_TO_CONCEPT_MAP cdmTable\n    WHERE cdmTable.VALID_START_DATE IS NOT NULL \n        AND cdmTable.VALID_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VALID_START_DATE field of the SOURCE_TO_CONCEPT_MAP that occurs after the date in the VALID_END_DATE.","cdmTableName":"SOURCE_TO_CONCEPT_MAP","cdmFieldName":"VALID_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_source_to_concept_map_valid_start_date","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field SOURCE_TO_CONCEPT_MAP.VALID_START_DATE is not populated.","thresholdValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.037889 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_DETAIL_START_DATE is the start date and VISIT_DETAIL_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATE\nplausibleStartBeforeEndFieldName = VISIT_DETAIL_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n            AND cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATE AS DATE) > CAST(cdmTable.VISIT_DETAIL_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATE IS NOT NULL \n        AND cdmTable.VISIT_DETAIL_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATE field of the VISIT_DETAIL that occurs after the date in the VISIT_DETAIL_END_DATE.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_detail_visit_detail_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":268,"executionTime":"0.031766 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_DETAIL_START_DATETIME is the start date and VISIT_DETAIL_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_DETAIL\ncdmFieldName = VISIT_DETAIL_START_DATETIME\nplausibleStartBeforeEndFieldName = VISIT_DETAIL_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_DETAIL.VISIT_DETAIL_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n        WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n            AND cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_DETAIL_START_DATETIME AS DATE) > CAST(cdmTable.VISIT_DETAIL_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_DETAIL cdmTable\n    WHERE cdmTable.VISIT_DETAIL_START_DATETIME IS NOT NULL \n        AND cdmTable.VISIT_DETAIL_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_DETAIL_START_DATETIME field of the VISIT_DETAIL that occurs after the date in the VISIT_DETAIL_END_DATETIME.","cdmTableName":"VISIT_DETAIL","cdmFieldName":"VISIT_DETAIL_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_detail_visit_detail_start_datetime","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":1600,"executionTime":"0.034106 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_START_DATE is the start date and VISIT_END_DATE is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATE\nplausibleStartBeforeEndFieldName = VISIT_END_DATE\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATE' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n            AND cdmTable.VISIT_END_DATE IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATE AS DATE) > CAST(cdmTable.VISIT_END_DATE AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATE IS NOT NULL \n        AND cdmTable.VISIT_END_DATE IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATE field of the VISIT_OCCURRENCE that occurs after the date in the VISIT_END_DATE.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATE","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_occurrence_visit_start_date","failed":0,"passed":1,"isError":0,"notApplicable":0,"thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.035027 secs","queryText":"/*********\nPLAUSIBLE_START_BEFORE_END\nChecks that all start dates are before their corresponding end dates (PLAUSIBLE_START_BEFORE_END == Yes).\nVISIT_START_DATETIME is the start date and VISIT_END_DATETIME is the end date.\nParameters used in this template:\nschema = omop_sqldev_schema\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = VISIT_START_DATETIME\nplausibleStartBeforeEndFieldName = VISIT_END_DATETIME\n**********/\nSELECT \n    num_violated_rows, \n    CASE \n        WHEN denominator.num_rows = 0 THEN 0 \n        ELSE 1.0*num_violated_rows/denominator.num_rows \n    END AS pct_violated_rows, \n    denominator.num_rows AS num_denominator_rows\nFROM\n(\n    SELECT \n        COUNT(violated_rows.violating_field) AS num_violated_rows\n    FROM\n    (\n        /*violatedRowsBegin*/\n        SELECT \n            'VISIT_OCCURRENCE.VISIT_START_DATETIME' AS violating_field, \n            cdmTable.*\n        FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n        WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n            AND cdmTable.VISIT_END_DATETIME IS NOT NULL \n            AND CAST(cdmTable.VISIT_START_DATETIME AS DATE) > CAST(cdmTable.VISIT_END_DATETIME AS DATE)\n        /*violatedRowsEnd*/\n    ) violated_rows\n) violated_row_count,\n(\n    SELECT \n        COUNT(*) AS num_rows\n    FROM omop_sqldev_schema.VISIT_OCCURRENCE cdmTable\n    WHERE cdmTable.VISIT_START_DATETIME IS NOT NULL \n        AND cdmTable.VISIT_END_DATETIME IS NOT NULL\n) denominator\n;\n","checkName":"plausibleStartBeforeEnd","checkLevel":"FIELD","checkDescription":"The number and percent of records with a value in the VISIT_START_DATETIME field of the VISIT_OCCURRENCE that occurs after the date in the VISIT_END_DATETIME.","cdmTableName":"VISIT_OCCURRENCE","cdmFieldName":"VISIT_START_DATETIME","sqlFile":"field_plausible_start_before_end.sql","category":"Plausibility","subcategory":"Temporal","context":"Verification","checkId":"field_plausiblestartbeforeend_visit_occurrence_visit_start_datetime","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"Field VISIT_OCCURRENCE.VISIT_START_DATETIME is not populated.","thresholdValue":1},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040368 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 26662\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 26662\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 26662\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 26662 (TESTICULAR HYPOFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"26662","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_26662","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=26662 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038646 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 26935\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 26935\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 26935\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 26935 (DISORDER OF ENDOCRINE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"26935","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_26935","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=26935 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041343 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 30969\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 30969\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 30969\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 30969 (TESTICULAR HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"30969","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_30969","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=30969 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048061 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 73801\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 73801\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 73801\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 73801 (SCROTAL VARICES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"73801","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_73801","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=73801 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040169 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 74322\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 74322\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 74322\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 74322 (BENIGN NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"74322","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_74322","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=74322 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038216 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 78193\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 78193\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 78193\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 78193 (ORCHITIS AND EPIDIDYMITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"78193","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_78193","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=78193 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039856 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 79758\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 79758\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 79758\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 79758 (PRIMARY MALIGNANT NEOPLASM OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"79758","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_79758","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=79758 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039294 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 141917\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 141917\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 141917\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 141917 (BALANITIS XEROTICA OBLITERANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"141917","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_141917","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=141917 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044893 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192367\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192367\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192367\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192367 (DYSPLASIA OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192367","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192367","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192367 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038355 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192676\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192676\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192676\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192676 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 1), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192676","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192676","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192676 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042406 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192683\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192683\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192683\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192683 (UTEROVAGINAL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192683","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192683","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192683 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039486 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192854\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192854\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192854\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192854 (INTRAMURAL LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192854","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192854","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192854 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038000 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 192858\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 192858\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 192858\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 192858 (OVARIAN HYPERFUNCTION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"192858","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_192858","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=192858 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.109043 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193254\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193254\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193254\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193254 (DISORDER OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193254","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193254","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193254 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.054542 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193261\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193261\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193261 (VAGINOSPASM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.053838 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193262\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193262\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193262\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193262 (INFLAMMATORY DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193262","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193262","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193262 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043603 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193277\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193277\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193277\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193277 (DELIVERIES BY CESAREAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193277","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193277","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193277 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.051449 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193437\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193437\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193437\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193437 (NEOPLASM OF UNCERTAIN BEHAVIOR OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193437","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193437","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193437 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044850 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193439\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193439\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193439\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193439 (BENIGN NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193439","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193439","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193439 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044204 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193522\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193522\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193522\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193522 (ACUTE PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193522","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193522","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193522 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048743 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193530\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193530\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193530\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193530 (FOLLICULAR CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193530","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193530","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193530 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047109 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193739\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193739\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193739\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193739 (OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193739","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193739","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193739 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045369 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 193818\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 193818\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 193818\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 193818 (CALCULUS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"193818","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_193818","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=193818 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048035 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194092\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194092\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194092\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194092 (UTERINE PROLAPSE WITHOUT VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194092","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194092","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194092 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046906 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194286\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194286\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194286\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194286 (MALIGNANT NEOPLASM OF CORPUS UTERI, EXCLUDING ISTHMUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194286","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194286","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194286 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047089 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194412\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194412\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194412\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194412 (DYSPLASIA OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194412","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194412","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194412 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044703 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194420\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194420\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194420\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194420 (ENDOMETRIOSIS OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194420","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194420","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194420 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048511 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194611\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194611\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194611\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194611 (CARCINOMA IN SITU OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194611","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194611","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194611 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.051487 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194696\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194696\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194696\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194696 (DYSMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194696","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194696","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194696 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046427 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194871\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194871\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194871\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194871 (TRICHOMONAL VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194871","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194871","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194871 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041027 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 194997\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 194997\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 194997\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 194997 (PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"194997","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_194997","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=194997 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049837 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195009\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195009\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195009\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195009 (LEUKOPLAKIA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195009","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195009","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195009 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043868 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195012\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195012\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195012\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195012 (INTERMENSTRUAL BLEEDING - IRREGULAR), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195012","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195012","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195012 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.046188 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195197\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195197\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195197\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195197 (PRIMARY MALIGNANT NEOPLASM OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195197","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195197","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195197 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045109 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195316\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195316\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195316\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195316 (ATYPICAL ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195316","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195316","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195316 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039401 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195321\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195321\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195321\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195321 (POSTMENOPAUSAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195321","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195321","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195321 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042541 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195483\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195483\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195483\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195483 (PRIMARY MALIGNANT NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195483","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195483","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195483 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041239 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195500\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195500\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195500\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195500 (BENIGN NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195500","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195500","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195500 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042608 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195501\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195501\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195501\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195501 (POLYCYSTIC OVARIES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195501","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195501","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195501 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038998 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195683\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195683\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195683\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195683 (OPEN WOUND OF PENIS WITHOUT COMPLICATION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195683","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195683","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195683 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040204 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195769\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195769\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195769\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195769 (SUBMUCOUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195769","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195769","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195769 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041655 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195770\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195770\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195770\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195770 (SUBSEROUS LEIOMYOMA OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195770","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195770","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195770 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039101 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195793\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195793\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195793\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195793 (NEOPLASM OF UNCERTAIN BEHAVIOR OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195793","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195793","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195793 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038824 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195867\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195867\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195867\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195867 (NONINFLAMMATORY DISORDER OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195867","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195867","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195867 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039640 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 195873\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 195873\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 195873\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 195873 (LEUKORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"195873","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_195873","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=195873 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042220 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196048\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196048\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196048\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196048 (PRIMARY MALIGNANT NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196048","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196048","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196048 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039275 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196051\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196051\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196051\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196051 (OVERLAPPING MALIGNANT NEOPLASM OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196051","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196051","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196051 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041594 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196068\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196068\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196068\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196068 (CARCINOMA IN SITU OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196068","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196068","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196068 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042484 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196157\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196157\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196157\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196157 (INDURATIO PENIS PLASTICA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196157","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196157","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196157 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038692 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196158\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196158\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196158\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196158 (DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196158","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196158","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196158 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040795 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196163\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196163\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196163\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196163 (CERVICITIS AND ENDOCERVICITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196163","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196163","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196163 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039901 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196165\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196165\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196165\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196165 (CERVICAL INTRAEPITHELIAL NEOPLASIA GRADE 2), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196165","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196165","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196165 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049589 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196168\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196168\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196168\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196168 (IRREGULAR PERIODS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196168","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196168","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196168 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040493 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196359\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196359\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196359\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196359 (PRIMARY MALIGNANT NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196359","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196359","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196359 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039800 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196364\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196364\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196364\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196364 (BENIGN NEOPLASM OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196364","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196364","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196364 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041256 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196473\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196473\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196473\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196473 (HYPERTROPHY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196473","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196473","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196473 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039745 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196734\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196734\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196734\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196734 (DISORDER OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196734","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196734","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196734 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039140 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196738\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196738\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196738\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196738 (DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196738","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196738","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196738 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041116 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 196758\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 196758\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 196758\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 196758 (TUMOR OF BODY OF UTERUS AFFECTING PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"196758","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_196758","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=196758 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039878 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197032\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197032\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197032\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197032 (HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197032","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197032","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197032 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041226 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197039\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197039\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197039\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197039 (MALE GENITAL ORGAN VASCULAR DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197039","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197039","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197039 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041635 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197044\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197044\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197044\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197044 (FEMALE INFERTILITY ASSOCIATED WITH ANOVULATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197044","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197044","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197044 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040036 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197236\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197236\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197236\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197236 (UTERINE LEIOMYOMA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197236","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197236","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197236 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038192 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197237\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197237\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197237\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197237 (BENIGN NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197237","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197237","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197237 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036472 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197507\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197507\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197507\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197507 (PRIMARY MALIGNANT NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197507","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197507","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197507 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039262 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197601\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197601\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197601\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197601 (SPERMATOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197601","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197601","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197601 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043280 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197605\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197605\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197605\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197605 (INFLAMMATORY DISORDER OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197605","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197605","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197605 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038769 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197606\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197606\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197606\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197606 (FEMALE INFERTILITY OF TUBAL ORIGIN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197606","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197606","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197606 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045368 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197607\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197607\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197607\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197607 (EXCESSIVE AND FREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197607","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197607","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197607 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042101 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197609\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197609\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197609\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197609 (CERVICAL, VAGINAL AND VULVAL INFLAMMATORY DISEASES), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197609","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197609","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197609 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039111 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197610\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197610\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197610\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197610 (CYST OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197610","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197610","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197610 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041611 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 197938\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 197938\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 197938\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 197938 (UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"197938","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_197938","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=197938 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041156 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198082\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198082\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198082\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198082 (OVERLAPPING MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198082","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198082","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198082 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040691 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198108\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198108\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198108\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198108 (BENIGN NEOPLASM OF FALLOPIAN TUBES AND UTERINE LIGAMENTS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198108","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198108","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198108 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040702 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198194\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198194\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198194\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198194 (FEMALE GENITAL ORGAN SYMPTOMS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198194","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198194","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198194 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038724 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198197\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198197\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198197\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198197 (MALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198197","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198197","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198197 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041577 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198198\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198198\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198198\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198198 (POLYP OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198198","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198198","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198198 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041997 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198202\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198202\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198202\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198202 (CYSTOCELE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198202","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198202","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198202 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039055 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198212\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198212\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198212\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198212 (SPOTTING PER VAGINA IN PREGNANCY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198212","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198212","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198212 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041113 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198363\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198363\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198363\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198363 (CANDIDIASIS OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198363","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198363","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198363 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041570 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198471\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198471\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198471\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198471 (COMPLEX ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198471","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198471","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198471 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041010 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198483\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198483\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198483\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198483 (STRICTURE OR ATRESIA OF THE VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198483","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198483","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198483 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042668 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198803\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198803\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198803\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198803 (BENIGN PROSTATIC HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198803","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198803","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198803 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042670 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 198806\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 198806\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 198806\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 198806 (ABSCESS OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"198806","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_198806","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=198806 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.051491 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199067\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199067\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199067\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199067 (FEMALE PELVIC INFLAMMATORY DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199067","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199067","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199067 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039202 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199078 (VAGINAL WALL PROLAPSE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043038 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199752\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199752\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199752\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199752 (SECONDARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199752","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199752","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199752 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040729 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199764\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199764\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199764\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199764 (BENIGN NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199764","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199764","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199764 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040942 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199876\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199876\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199876\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199876 (PROLAPSE OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199876","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199876","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199876 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044193 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199877\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199877\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199877\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199877 (MUCOUS POLYP OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199877","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199877","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199877 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042388 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199878\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199878\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199878\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199878 (LIGHT AND INFREQUENT MENSTRUATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199878","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199878","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199878 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044498 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 199881\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 199881\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 199881\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 199881 (ENDOMETRIOSIS OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"199881","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_199881","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=199881 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043087 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200051\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200051\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200051\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200051 (PRIMARY MALIGNANT NEOPLASM OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200051","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200051","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200051 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045623 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200052\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200052\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200052\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200052 (PRIMARY MALIGNANT NEOPLASM OF UTERINE ADNEXA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200052","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200052","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200052 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037347 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200147\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200147\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200147\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200147 (ATROPHY OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200147","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200147","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200147 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037885 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200445\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200445\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200445\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200445 (CHRONIC PROSTATITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200445","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200445","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200445 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038625 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200452\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200452\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200452\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200452 (DISORDER OF FEMALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200452","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200452","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200452 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042530 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200461\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200461\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200461\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200461 (ENDOMETRIOSIS OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200461","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200461","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200461 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039520 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200670\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200670\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200670\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200670 (BENIGN NEOPLASM OF MALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200670","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200670","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200670 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040596 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200675\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200675\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200675\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200675 (NEOPLASM OF UNCERTAIN BEHAVIOR OF OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200675","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200675","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200675 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044378 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200775\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200775\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200775\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200775 (ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200775","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200775","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200775 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041296 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200779\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200779\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200779\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200779 (POLYP OF CORPUS UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200779","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200779","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200779 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040233 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200780\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200780\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200780\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200780 (DISORDER OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200780","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200780","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200780 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039856 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200962\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200962\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200962\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200962 (PRIMARY MALIGNANT NEOPLASM OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200962","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200962","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200962 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042317 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 200970\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 200970\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 200970\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 200970 (CARCINOMA IN SITU OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"200970","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_200970","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=200970 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041095 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201072\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201072\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201072\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201072 (BENIGN PROSTATIC HYPERTROPHY WITHOUT OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201072","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201072","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201072 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041922 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201078 (ATROPHIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043323 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201211\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201211\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201211\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201211 (HERPETIC VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201211","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201211","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201211 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039649 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201238\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201238\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201238\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201238 (PRIMARY MALIGNANT NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201238","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201238","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201238 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039318 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201244\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201244\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201244\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201244 (BENIGN NEOPLASM OF VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201244","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201244","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201244 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039373 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201257\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201257\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201257\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201257 (DISORDER OF ENDOCRINE OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201257","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201257","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201257 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039601 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201346\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201346\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201346\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201346 (EDEMA OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201346","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201346","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201346 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039858 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201355\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201355\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201355\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201355 (EROSION AND ECTROPION OF THE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201355","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201355","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201355 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041233 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201527\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201527\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201527\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201527 (NEOPLASM OF UNCERTAIN BEHAVIOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201527","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201527","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201527 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041681 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201617\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201617\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201617\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201617 (PROSTATIC CYST), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201617","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201617","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201617 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038132 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201625\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201625\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201625\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201625 (MALPOSITION OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201625","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201625","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201625 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039587 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201801\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201801\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201801\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201801 (PRIMARY MALIGNANT NEOPLASM OF FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201801","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201801","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201801 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045372 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201817\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201817\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201817\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201817 (BENIGN NEOPLASM OF FEMALE GENITAL ORGAN), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201817","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201817","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201817 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038923 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201823\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201823\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201823\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201823 (BENIGN NEOPLASM OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201823","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201823","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201823 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041305 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201907\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201907\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201907\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201907 (EDEMA OF MALE GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201907","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201907","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201907 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043319 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201909\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201909\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201909\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201909 (FEMALE INFERTILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201909","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201909","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201909 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038669 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 201913\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 201913\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 201913\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 201913 (TORSION OF THE OVARY, OVARIAN PEDICLE OR FALLOPIAN TUBE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"201913","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_201913","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=201913 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039887 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 314409\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 314409\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 314409\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 314409 (VASCULAR DISORDER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"314409","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_314409","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=314409 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040774 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 315586\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 315586\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 315586\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 315586 (PRIAPISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"315586","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_315586","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=315586 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040973 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 433716\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 433716\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 433716\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 433716 (PRIMARY MALIGNANT NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"433716","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_433716","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=433716 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038486 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 434251\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 434251\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 434251\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 434251 (INJURY OF MALE EXTERNAL GENITAL ORGANS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"434251","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_434251","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=434251 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041653 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 435315\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 435315\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 435315\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 435315 (TORSION OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"435315","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_435315","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=435315 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040945 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 435648\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 435648\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 435648\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 435648 (RETRACTILE TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"435648","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_435648","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=435648 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042271 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436155\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436155\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436155 (REDUNDANT PREPUCE AND PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041472 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436358\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436358\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436358\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436358 (PRIMARY MALIGNANT NEOPLASM OF EXOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436358","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436358","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436358 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040500 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436366\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436366\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436366\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436366 (BENIGN NEOPLASM OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436366","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436366","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436366 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041126 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 436466\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 436466\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 436466\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 436466 (BALANOPOSTHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"436466","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_436466","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=436466 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038459 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 437501\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 437501\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 437501\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 437501 (PRIMARY MALIGNANT NEOPLASM OF LABIA MAJORA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"437501","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_437501","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=437501 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041039 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 437655\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 437655\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 437655\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 437655 (UNDESCENDED TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"437655","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_437655","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=437655 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039937 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 438477\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 438477\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 438477\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 438477 (ATROPHY OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"438477","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_438477","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=438477 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040226 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 439871\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 439871\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 439871\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 439871 (HEMOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"439871","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_439871","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=439871 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039308 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 440971\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 440971\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 440971\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 440971 (NEOPLASM OF UNCERTAIN BEHAVIOR OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"440971","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_440971","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=440971 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041906 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441068\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441068\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441068\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441068 (TORSION OF APPENDIX OF TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441068","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441068","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=441068 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040212 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441077\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441077\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441077\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441077 (STENOSIS OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441077","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441077","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=441077 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038671 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 441805\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 441805\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 441805\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 441805 (PRIMARY MALIGNANT NEOPLASM OF ENDOCERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"441805","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_441805","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=441805 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041177 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 442781\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 442781\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 442781\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 442781 (DISORDER OF UTERINE CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"442781","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_442781","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=442781 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043708 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443211\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443211\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443211\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443211 (BENIGN PROSTATIC HYPERTROPHY WITH OUTFLOW OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443211","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443211","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443211 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041078 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443435\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443435\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443435\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443435 (PRIMARY UTERINE INERTIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443435","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443435","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443435 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041034 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 443800\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 443800\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 443800\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 443800 (AMENORRHEA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"443800","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_443800","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=443800 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041025 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 444078\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 444078\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 444078\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 444078 (INFLAMMATION OF CERVIX), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"444078","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_444078","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=444078 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039728 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 444106\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 444106\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 444106\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 444106 (CANDIDIASIS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"444106","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_444106","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=444106 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.044992 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4005743\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4005743\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4005743\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4005743 (FEMALE STERILITY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4005743","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4005743","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4005743 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038006 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4005933\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4005933\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4005933\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4005933 (HYPOSPADIAS, PENILE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4005933","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4005933","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4005933 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041493 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4012343\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4012343\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4012343\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4012343 (VAGINAL DISCHARGE SYMPTOM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4012343","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4012343","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4012343 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039049 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4016155\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4016155\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4016155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4016155 (PROSTATISM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4016155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4016155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4016155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040547 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4032594\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4032594\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4032594\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4032594 (INFLAMMATION OF SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4032594","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4032594","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4032594 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041054 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4048225\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4048225\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4048225\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4048225 (NEOPLASM OF ENDOMETRIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4048225","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4048225","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4048225 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041612 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4050091\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4050091\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4050091\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4050091 (OPEN WOUND OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4050091","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4050091","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4050091 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038179 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4051956\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4051956\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4051956\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4051956 (VULVOVAGINAL DISEASE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4051956","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4051956","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4051956 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039025 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4054550\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4054550\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4054550\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4054550 (OPEN WOUND OF SCROTUM AND TESTES), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4054550","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4054550","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4054550 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.047702 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4056903\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4056903\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4056903\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4056903 (VAGINITIS ASSOCIATED WITH ANOTHER DISORDER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4056903","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4056903","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4056903 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.048462 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060207\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060207\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060207\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060207 (VULVAL IRRITATION), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060207","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060207","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060207 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037601 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060556\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060556\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060556\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060556 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060556","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060556","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060556 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038743 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060558\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060558\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060558\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060558 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM - DELIVERED), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060558","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060558","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060558 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037907 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4060559\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4060559\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4060559\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4060559 (UTERINE SCAR FROM PREVIOUS SURGERY IN PREGNANCY, CHILDBIRTH AND THE PUERPERIUM WITH ANTENATAL PROBLEM), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4060559","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4060559","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4060559 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041416 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4061050\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4061050\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4061050\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4061050 (SUBACUTE AND CHRONIC VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4061050","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4061050","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4061050 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040730 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4071874\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4071874\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4071874\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4071874 (PAIN IN SCROTUM), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4071874","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4071874","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4071874 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043799 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4081648\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4081648\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4081648\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4081648 (ACUTE VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4081648","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4081648","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4081648 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039690 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4090039\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4090039\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4090039\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4090039 (PENILE ARTERIAL INSUFFICIENCY), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4090039","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4090039","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4090039 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040545 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4092515\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4092515\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4092515\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4092515 (MALIGNANT NEOPLASM, OVERLAPPING LESION OF CERVIX UTERI), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4092515","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4092515","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4092515 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041116 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4093346\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4093346\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4093346\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4093346 (LARGE PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4093346","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4093346","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4093346 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039622 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4095940\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4095940\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4095940\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4095940 (FINDING OF PATTERN OF MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4095940","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4095940","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4095940 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041543 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4109081\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4109081\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4109081\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4109081 (PAIN IN PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4109081","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4109081","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4109081 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039435 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4128329\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4128329\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4128329\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4128329 (MENOPAUSE PRESENT), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4128329","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4128329","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4128329 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045228 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4129155\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4129155\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4129155\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4129155 (VAGINAL BLEEDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4129155","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4129155","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4129155 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041692 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4140828\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4140828\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4140828\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4140828 (ACUTE VULVITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4140828","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4140828","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4140828 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.037441 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4143116\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4143116\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4143116\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4143116 (AZOOSPERMIA), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4143116","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4143116","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4143116 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041929 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4147021\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4147021\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4147021\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4147021 (CONTUSION, SCROTUM OR TESTIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4147021","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4147021","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4147021 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040546 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4149084\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4149084\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4149084\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4149084 (VAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4149084","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4149084","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4149084 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040837 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4150042\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4150042\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4150042\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4150042 (VAGINAL ULCER), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4150042","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4150042","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4150042 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038483 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4150816\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4150816\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4150816\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4150816 (BICORNUATE UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4150816","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4150816","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4150816 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.045006 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4155529\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4155529\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4155529\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4155529 (MECHANICAL COMPLICATION OF INTRAUTERINE CONTRACEPTIVE DEVICE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4155529","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4155529","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4155529 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040748 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4156113\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4156113\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4156113\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4156113 (MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4156113","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4156113","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4156113 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041661 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4162860\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4162860\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4162860\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4162860 (PRIMARY MALIGNANT NEOPLASM OF BODY OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4162860","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4162860","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4162860 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040773 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4163261\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4163261\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4163261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4163261 (MALIGNANT TUMOR OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4163261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4163261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4163261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041717 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4171394\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4171394\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4171394\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4171394 (ABNORMAL MENSTRUAL CYCLE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4171394","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4171394","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4171394 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041579 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4171915\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4171915\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4171915\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4171915 (ORCHITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4171915","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4171915","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4171915 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040118 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4180978\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4180978\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4180978\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4180978 (VULVOVAGINITIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4180978","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4180978","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4180978 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042145 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4194652\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4194652\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4194652\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4194652 (PRURITUS OF VULVA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4194652","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4194652","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4194652 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038193 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4199600\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4199600\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4199600\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4199600 (CANDIDAL BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4199600","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4199600","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4199600 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041993 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4235215\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4235215\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4235215\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4235215 (SWELLING OF TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4235215","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4235215","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4235215 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040153 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4260520\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4260520\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4260520\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4260520 (BALANITIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4260520","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4260520","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4260520 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043360 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4270932\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4270932\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4270932\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4270932 (PAIN IN TESTICLE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4270932","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4270932","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4270932 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041336 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4279913\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4279913\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4279913\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4279913 (PRIMARY OVARIAN FAILURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4279913","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4279913","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4279913 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036411 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4281030\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4281030\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4281030\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4281030 (SECONDARY MALIGNANT NEOPLASM OF RIGHT OVARY), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4281030","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4281030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4281030 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039584 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4294393\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4294393\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4294393\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4294393 (ULCER OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4294393","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4294393","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4294393 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040810 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4295261\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4295261\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4295261\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4295261 (POSTMENOPAUSAL STATE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4295261","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4295261","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4295261 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.036939 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4303258\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4303258\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4303258\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4303258 (BACTERIAL VAGINOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4303258","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4303258","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4303258 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043497 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4320332\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4320332\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4320332\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4320332 (HYDROCELE OF TUNICA VAGINALIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4320332","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4320332","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4320332 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.042952 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4339088\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 4339088\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 4339088\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 4339088 (TESTICULAR MASS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4339088","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_4339088","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4339088 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038671 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40481080\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40481080\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40481080\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40481080 (BENIGN LOCALIZED HYPERPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40481080","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40481080","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40481080 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.041467 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40482030\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40482030\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40482030\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40482030 (DYSPLASIA OF PROSTATE), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40482030","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40482030","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40482030 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.043095 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40482406\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40482406\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40482406\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40482406 (LOW LYING PLACENTA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40482406","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40482406","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40482406 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039973 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40483613\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40483613\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40483613\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40483613 (INFLAMMATORY DISEASE OF FEMALE GENITAL STRUCTURE), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40483613","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40483613","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40483613 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.049568 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 40490888\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 40490888\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 40490888\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 40490888 (HERNIATION OF RECTUM INTO VAGINA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"40490888","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_40490888","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=40490888 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.038639 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 42709954\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 42709954\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 42709954\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 42709954 (PHIMOSIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"42709954","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_42709954","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=42709954 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039692 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45757415\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45757415\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45757415\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45757415 (BENIGN ENDOMETRIAL HYPERPLASIA), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45757415","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45757415","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45757415 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039511 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45766654\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45766654\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45766654\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45766654 (DISORDER OF SKIN OF PENIS), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45766654","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45766654","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45766654 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.039191 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45770892\nplausibleGender = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45770892\n\t\t  \tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45770892\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45770892 (PRIMARY MALIGNANT NEOPLASM OF UTERUS), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45770892","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45770892","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45770892 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.040050 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER - number of records of a given concept which occur in person with implausible gender for that concept\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 45772671\nplausibleGender = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 45772671\n\t\t  \tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\tWHERE CONDITION_CONCEPT_ID = 45772671\n) denominator\n;\n","checkName":"plausibleGender","checkLevel":"CONCEPT","checkDescription":"For a CONCEPT_ID 45772671 (NODULAR PROSTATE WITHOUT URINARY OBSTRUCTION), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"45772671","sqlFile":"concept_plausible_gender.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegender_condition_occurrence_condition_concept_id_45772671","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=45772671 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":5},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.034222 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4090861, 4025213\nplausibleGenderUseDescendants = Male\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_sqldev_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4090861, 4025213)\n\t\tAND p.gender_concept_id <> 8507 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tJOIN omop_sqldev_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4090861, 4025213)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4090861, 4025213 (MALE GENITALIA FINDING, MALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = MALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4090861, 4025213","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4090861,4025213","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4090861, 4025213 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":2,"notesValue":0},{"numViolatedRows":0,"pctViolatedRows":0,"numDenominatorRows":0,"executionTime":"0.032788 secs","queryText":"/*********\nCONCEPT LEVEL check:\nPLAUSIBLE_GENDER_USE_DESCENDANTS - number of records of descendants of a given concept which occur in person with implausible gender for that concept set\nParameters used in this template:\ncdmDatabaseSchema = omop_sqldev_schema\nvocabDatabaseSchema = omop_sqldev_schema\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = CONDITION_CONCEPT_ID\nconceptId = 4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481\nplausibleGenderUseDescendants = Female\n**********/\nSELECT \n\tnum_violated_rows, \n\tCASE \n\t\tWHEN denominator.num_rows = 0 THEN 0 \n\t\tELSE 1.0*num_violated_rows/denominator.num_rows \n\tEND AS pct_violated_rows, \n\tdenominator.num_rows AS num_denominator_rows\nFROM\n(\n\tSELECT \n\t\tCOUNT(*) AS num_violated_rows\n\tFROM\n\t(\n\t\t/*violatedRowsBegin*/\n\t\tSELECT cdmTable.* \n\t\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\t\tJOIN omop_sqldev_schema.person p\n\t\t\t\tON cdmTable.person_id = p.person_id\n\t\t\tJOIN omop_sqldev_schema.concept_ancestor ca\n\t\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\t\tWHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)\n\t\tAND p.gender_concept_id <> 8532 \n\t\t/*violatedRowsEnd*/\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT \n\t\tCOUNT(*) AS num_rows\n\tFROM omop_sqldev_schema.CONDITION_OCCURRENCE cdmTable\n\t\tJOIN omop_sqldev_schema.concept_ancestor ca\n\t\t\tON ca.descendant_concept_id = cdmTable.CONDITION_CONCEPT_ID\n\tWHERE ca.ancestor_concept_id IN (4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481)\n) denominator\n;\n","checkName":"plausibleGenderUseDescendants","checkLevel":"CONCEPT","checkDescription":"For descendants of CONCEPT_ID 4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481 (FEMALE GENITALIA FINDING, DISORDER OF INTRAUTERINE CONTRACEPTIVE DEVICE, MENOPAUSE FINDING, DISORDER OF FEMALE GENITAL SYSTEM, MALIGNANT NEOPLASM OF UTERINE ADNEXA, FINDING RELATED TO PREGNANCY, FEMALE REPRODUCTIVE FINDING), the number and percent of records associated with patients with an implausible gender (correct gender = FEMALE).","cdmTableName":"CONDITION_OCCURRENCE","cdmFieldName":"CONDITION_CONCEPT_ID","conceptId":"4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481","sqlFile":"concept_plausible_gender_use_descendants.sql","category":"Plausibility","subcategory":"Atemporal","context":"Validation","checkId":"concept_plausiblegenderusedescendants_condition_occurrence_condition_concept_id_4095793,443343,4024004,4172857,444094,197810,4158481","failed":0,"passed":0,"isError":0,"notApplicable":1,"notApplicableReason":"CONDITION_CONCEPT_ID=4095793 , 443343, 4024004 , 4172857, 444094 , 197810, 4158481 is missing from the CONDITION_OCCURRENCE table.","thresholdValue":2,"notesValue":0}],"Metadata":[{"cdmSourceName":"PASAR","cdmSourceAbbreviation":"PASAR","cdmHolder":"APAC_OHDSI","sourceDescription":"PASAR","sourceDocumentationReference":"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10834714","cdmEtlReference":"","sourceReleaseDate":"2024-08-09","cdmReleaseDate":"2024-10-07","cdmVersion":"v5.4","cdmVersionConceptId":756265,"vocabularyVersion":"","dqdVersion":"2.6.1"}],"Overview":{"countTotal":[1626],"countPassed":[1595],"countErrorFailed":[4],"countThresholdFailed":[31],"countOverallFailed":[31],"percentPassed":[98.09],"percentFailed":[1.91],"countTotalPlausibility":[434],"countTotalConformance":[825],"countTotalCompleteness":[367],"countFailedPlausibility":[2],"countFailedConformance":[24],"countFailedCompleteness":[5],"countPassedPlausibility":[101],"countPassedConformance":[512],"countPassedCompleteness":[208]}}
